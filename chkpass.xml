<sect1 id="chkpass">
 <title>chkpass</title> 
 
 <!--
 <indexterm zone="chkpass">
  <primary>chkpass</primary>
 </indexterm>
 -->
 <para>
  chkpass est un type pour les mots de passe qui est automatiquement vérifié
  et converti à sa saisie. Il est stocké chiffré. Pour la comparaison, il
  suffit de comparer le champ avec un texte en claire. La fonction de
  comparaison chiffrera ce texte avant d'exécuter la comparaison. Elle renvoie
  aussi une erreur si le code détermine qui le mot de passe est facilement
  déchiffrable. La fonction vérifiant l'efficacité d'un mot de passe
  n'est pour l'instant pas codée.
 </para>

 <para>
  Notez que le type de données n'est pas indexable.
  <!--
  I haven't worried about making this type indexable.  I doubt that anyone
  would ever need to sort a file in order of encrypted password.
  -->
 </para>

 <para>
  Si vous faites précéder la chaîne d'un symbole deux-points, le chiffrement et
  la vérification sont ignorés pour que vous puissiez saisir des mots de passe
  existants dans le champ.
 </para>

 <para>
  En sortie, le symbole deux-points est ajouté en préfixe. Cela rend possible
  la sauvegarde et la restauration des mots de passe sans les chiffrer de
  nouveau. Si vous voulez le mot de passe (chiffré) sans le symbole deux-points,
  utilisez la fonction raw(). Ceci vous permet d'utiliser le type avec d'autres
  choses comme, par exemple, le module Auth_PostgreSQL d'Apache.
 </para>

 <para>
  Le chiffrement utilise la fonction crypt() du standard Unix. Il souffre donc
  des limitations habituelles de cette fonction, notamment le fait que seuls
  les huit premiers caractères d'un mot de passe sont pris en compte.
 </para>

 <para>
  Voici un exemple d'utilisation:
 </para>

 <programlisting>
test=# create table test (p chkpass);
CREATE TABLE
test=# insert into test values ('hello');
INSERT 0 1
test=# select * from test;
       p
----------------
 :dVGkpXdOrE3ko
(1 row)

test=# select raw(p) from test;
      raw
---------------
 dVGkpXdOrE3ko
(1 row)

test=# select p = 'hello' from test;
 ?column?
----------
 t
(1 row)

test=# select p = 'goodbye' from test;
 ?column?
----------
 f
(1 row)
 </programlisting>

 <sect2>
  <title>Auteur</title>
  <para>
   D'Arcy J.M. Cain <email>darcy@druid.net</email>
  </para>
 </sect2>
</sect1>

