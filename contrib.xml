<!-- $PostgreSQL: pgsql/doc/src/sgml/contrib.sgml,v 1.4 2007/11/14 02:36:43 tgl Exp $ -->

<appendix id="contrib">
 <title>Modules supplémentaires fournis</title>

 <para>
  Cette annexe contient des informations concernant les modules disponibles
  dans le répertoire <literal>contrib</literal> de la distribution
  <productname>PostgreSQL</productname>. Ce sont des outils de portage,
  des outils d'analyse, des fonctionnalités supplémentaires qui ne font pas
  partie du système PostgreSQL de base, principalement parce qu'ils
  s'adressent à une audience limitée ou sont trop expérimentals pour faire
  partie de la distribution de base. Cela ne concerne en rien leur utilité.
 </para>

 <para>
  Lors de la construction à partir des sources de la distribution, ces modules
  ne sont pas construit automatiquement. Vous pouvez les construire et les
  installer en exécutant&nbsp;:
<screen>
<userinput>gmake</userinput>
<userinput>gmake install</userinput>
</screen>
  dans le répertoire <literal>contrib</literal> d'un répertoire des sources
  configuré&nbsp;; ou pour ne construire et installer qu'un seul module
  sélectionné, faites de mêmes dans le sous-répertoire du module. Beaucoup
  de ces modules ont des tests de régression qui peuvent être exécutés
  en lançant la commande&nbsp;:
<screen>
<userinput>gmake installcheck</userinput>
</screen>
  une fois que le serveur <productname>PostgreSQL</productname> est en cours
  d'exécution. (Notez que <literal>gmake check</literal> n'est pas
  supporté&nbsp;; vous devez avoir un serveur de base de données opérationnel
  pour réaliser ces tests, et vous devez avoir construit et installer le
  module pour qu'il soit testé.)
 </para>

 <para>
  Si vous utilisez une version déjà packagée de
  <productname>PostgreSQL</productname>, ces modules sont typiquement
  disponibles dans un package séparé, comme par exemple
  <literal>postgresql-contrib</literal>.
 </para>

 <para>
  Beaucoup de ces modules fournissent de nouvelles fonctions, de nouveaux
  opérateurs ou types utilisateurs. Pour pouvoir utiliser un de ces
  modules, après avoir installé le code, vous devez enregistrer les
  nouveaux objets dans la base de donnéesen exécutant les commandes SQL
  contenus dans le fichier <literal>.sql</literal> fourni par le module.
  Par exemple&nbsp;:

<programlisting>
psql -d nom_base -f <replaceable>SHAREDIR</replaceable>/contrib/<replaceable>module</replaceable>.sql
</programlisting>

  Ici, <replaceable>SHAREDIR</replaceable> est le répertoire
  <quote>share</quote> de l'installation (<literal>pg_config
  --sharedir</literal> vous indiquera de quel répertoire il s'agit).
  In most cases the script must be run by a database superuser.
 </para>

 <para>
  Vous avez besoin d'exécuter le fichier <literal>.sql</literal> dans
  chaque base de données où le module doit être disponible. Autrement,
  exécutez-le dans la base <literal>template1</literal> pour que le module
  soit automatiquement copiée dans toute nouvelle base de données créée.
 </para>

 <para>
  Vous pouvez modifier la première commande du fichier
  <literal>.sql</literal> pour déterminer le schéma de la base où seront créés
  les objets. Par défaut, ils seront placés dans <literal>public</literal>.
 </para>

 <para>
  Après une mise à jour majeure de <productname>PostgreSQL</productname>,
  exécutez de nouveau le script d'installation, même si les objets du
  module peuvent être créés par la sauvegarde de l'ancienne
  installation. Cela vous assure que toute nouvelle fonction sera
  disponible et tout correction nécessaire sera appliquée.
 </para>

 &adminpack;
 &btree-gist;
 &chkpass;
 &cube;
 &dblink;
 &dict-int;
 &dict-xsyn;
 &earthdistance;
 &fuzzystrmatch;
 &hstore;
 &intagg;
 &intarray;
 &isn;
 &lo;
 &ltree;
 &oid2name;
 &pageinspect;
 &pgbench;
 &pgbuffercache;
 &pgcrypto;
 &pgfreespacemap;
 &pgrowlocks;
 &pgstandby;
 &pgstattuple;
 &pgtrgm;
 &seg;
 &contrib-spi;
 &sslinfo;
 &tablefunc;
 &test-parser;
 &tsearch2;
 &uuid-ossp;
 &vacuumlo;
 &xml2;

</appendix>
