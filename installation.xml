<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->

<chapter id="installation">
 <title>Procédure d'installation <phrase>de
   <productname>PostgreSQL</productname></phrase></title>

 <indexterm zone="installation">
  <primary>installation</primary>
 </indexterm>

 <para>
  Ce <phrase>document</phrase><phrase>
  chapitre</phrase> décrit l'installation de
  <productname>PostgreSQL</productname> à partir du code source. (Ce
  <phrase>document</phrase><phrase>
  chapitre</phrase> peut être ignoré lors de l'installation d'une distribution
  pré-empaquetée, paquet RPM ou Debian, par exemple. Il est alors plus utile de
  lire les instruction du mainteneur du paquet.)
 </para>

 <sect1 id="install-short">
  <title>Version courte</title>

  <para>
<synopsis>./configure
gmake
su
gmake install
adduser postgres
mkdir /usr/local/pgsql/data
chown postgres /usr/local/pgsql/data
su - postgres
/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data
/usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data &gt;logfile 2&gt;&amp;1 &amp;
/usr/local/pgsql/bin/createdb test
/usr/local/pgsql/bin/psql test</synopsis>
   Le reste du <phrase>document</phrase><phrase>
   chapitre</phrase> est la version longue.
  </para>
 </sect1>


 <sect1 id="install-requirements">
  <title>Prérequis</title>

  <para>
   En général, les plateformes style unix modernes sont capables
   d'exécuter <productname>PostgreSQL</productname>.
   Les plateformes sur lesquelles des tests ont été effectués sont listées
   dans la <xref linkend="supported-platforms"/> ci-après.
   Dans le répertoire <filename>doc</filename> de la distribution, il y a plusieurs 
   <acronym>FAQ</acronym> spécifiques à des plateformes particulières à
   consulter en cas de difficultés.
  </para>

  <para>
   Les logiciels suivants sont nécessaires pour compiler
   <productname>PostgreSQL</productname>&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      <indexterm>
       <primary>make</primary>
      </indexterm>

      <acronym>GNU</acronym> <application>make</application> est nécessaire&nbsp;; les autres
      programmes <application>make</application> <emphasis>ne</emphasis>
      fonctionnent <emphasis>pas</emphasis>.
      <acronym>GNU</acronym> <application>make</application> est souvent installé sous le nom
      <filename>gmake</filename>&nbsp;; ce document y fait toujours référence
      sous ce nom (sur certains système, <acronym>GNU</acronym> <application>make</application>
      est l'outil par défaut et est nommé <filename>make</filename>). Pour
      connaître la version utilisée, saisir
<screen><userinput>gmake --version</userinput></screen>
      Il est recommandé d'avoir une version postérieure à la version 3.76.1.
     </para>
    </listitem>

    <listitem>
     <para>
      Il est nécessaire d'avoir un compilateur C
      <acronym>ISO</acronym>/<acronym>ANSI</acronym>. Une version récente de
      <productname>GCC</productname> est recommandée mais
      <productname>PostgreSQL</productname> est connu pour être compilable avec de 
      nombreux compilateurs de divers vendeurs.
     </para>
    </listitem>

    <listitem>
     <para>
      <application>tar</application> est requis pour déballer la distribution
      des sources, associé à <application>gzip</application> ou
      <application>bzip2</application>.
     </para>
    </listitem>

    <listitem>
     <para>
      <indexterm>
       <primary>readline</primary>
      </indexterm>
      <indexterm>
       <primary>libedit</primary>
      </indexterm>

      La bibliothèque <acronym>GNU</acronym> <productname>Readline</productname> est
      utilisée par défaut (pour faciliter l'édition des lignes et le parcours de
      l'historique des commandes). Pour ne pas l'utiliser, il
      faut préciser <option>--without-readline</option> au moment d'exécuter
      la commande <filename>configure</filename>. Une alternative possible est
      l'utilisation de la bibliothèqe <filename>libedit</filename> sous license
      BSD, développée au début sur <productname>NetBSD</productname>. La
      bibliothèque <filename>libedit</filename> est compatible
      GNU <productname>Readline</productname> et est utilisée si cette dernière
      n'est pas trouvée ou si <option>--with-libedit-preferred</option> est utilisé
      sur la ligne de commande de <filename>configure</filename>. Lorsqu'une
      distribution Linux à base de paquets est utilisée, si les paquets
      <literal>readline</literal> et <literal>readline-devel</literal> sont
      séparés, il faut impérativement installer les deux.
     </para>
    </listitem>

    <listitem>
     <para>
      <indexterm>
       <primary>zlib</primary>
      </indexterm>

      La bibliothèque de compression <productname>zlib</productname> est
      utilisée par défaut. Pour ne pas l'utiliser, il faut préciser
      <option>--without-zlib</option> à
      <filename>configure</filename>. Cela a pour conséquence de désactiver le
      support des archives compressées dans <application>pg_dump</application> et
      <application>pg_restore</application>.
     </para>
    </listitem>

   </itemizedlist>
  </para>

  <para>
   Les paquets suivants sont optionnels. Ils ne sont pas obligatoires lors
   d'une compilation par défaut, mais le deviennent lorsque certaines options sont
   utilisées, comme cela est expliqué par la suite.

   <itemizedlist>
    <listitem>
     <para>
      Pour installer le langage procédural <application>PL/Perl</application>,
      une installation complète de <productname>Perl</productname>,
      comprenant la bibliothèque <filename>libperl</filename> et les
      fichiers d'en-tête, est nécessaire.
     </para>
     
     <para>
      Comme <application>PL/Perl</application> est une
      bibliothèque partagée, la bibliothèque
      <indexterm><primary>libperl</primary></indexterm>
      <filename>libperl</filename> doit aussi être partagée sur la plupart des
      plateformes. C'est désormais le choix par défaut dans les version récente
      de <productname>Perl</productname>, mais ne l'était pas dnas les versions
      plus anciennes. Dans tous les cas, c'est du ressort de celui qui installe
      Perl.
     </para>

     <para>
      Si la bibliothèque partagée, nécessaire, n'est pas présente,
      un message d'avertissement tel que celui qui suit apparaît à la
      compilation&nbsp;:
<screen>*** Cannot build PL/Perl because libperl is not a shared library.
*** You might have to rebuild your Perl installation.  Refer to
*** the documentation for details.</screen>
      (Si la sortie écran est ignorée, on peut constater que la
      bibliothèque <filename>plperl.so</filename> de
      <application>PL/Perl</application>, ou similaire,
      n'est pas installée.) Si ce message est affiché, il faut recompiler et
      réinstaller <productname>Perl</productname> manuellement pour pouvoir
      compiler <application>PL/Perl</application>. Lors de la phase
      de configuration de <productname>Perl</productname>, il faut demander une
      bibliothèque partagée.
     </para>
    </listitem>

    <listitem>
     <para>
      Pour compiler le langage de programmation serveur <application>PL/Python</application>,
      il faut que <productname>Python</productname> soit installé avec les
      fichiers d'en-tête et le module <application>distutils</application>. Le
      module <application>distutils</application> est inclus par défaut avec
      <productname>Python</productname> 1.6 et les versions suivantes&nbsp;; les
      utilisateurs des versions précédentes de <productname>Python</productname>
      doivent l'installer.
     </para>

     <para>
      Puisque <application>PL/Python</application> doit être
      une bibliothèque partagée, la bibliothèque
      <indexterm><primary>libpython</primary></indexterm>
      <filename>libpython</filename> doit l'être aussi sur la plupart des
      plateformes. Ce n'est pas le cas des installations par défaut de
      Python. Si, après la compilation et l'installation, il existe un fichier
      nommé <filename>plpython.so</filename> (des extensions différentes sont
      possibles), tout va bien. Sinon, il est fort probable qu'un avertissement
      semblable à celui qui suit soit apparu&nbsp;:
<screen>*** Cannot build PL/Python because libpython is not a shared library.
*** You might have to rebuild your Python installation.  Refer to
*** the documentation for details.</screen>
      Ce qui signifie qu'il faut recompiler (une partie de)
      <productname>Python</productname> pour créer cette bibliothèque partagée.
     </para>

     <para>
      En cas de problèmes, on peut exécuter le configure de <productname>Python</productname>
      2.3 ou ultérieur en utilisant le commutateur
      <literal>--enable-shared</literal>. Sur certains systèmes d'exploitation,
      il n'est pas nécessaire de construire une bibliothèque partagée, mais il
      faut en convaincre le système de construction de
      <productname>PostgreSQL</productname>. Le fichier
      <filename>Makefile</filename> du répertoire 
      <filename>src/pl/plpython</filename> donne des détails complémentaires.
     </para>
    </listitem>

    <listitem>
     <para>
      Pour construire le langage de procédure
      <application>PL/Tcl</application>, <productname>Tcl</productname> doit
      être installé. Si une version antérieure à la version 8.4 de
      <productname>Tcl</productname>, est utilisée, on s'assurera
      qu'il a été construit sans le support du multi-thread.
     </para>
    </listitem>

    <listitem>
     <para>
      Pour activer le support de langage natif (<acronym>NLS</acronym>), qui 
      permet d'afficher les messages d'un programme dans une langue autre que l'anglais,
      une implantation de l'<acronym>API</acronym>
      <application>Gettext</application> est nécessaire. Certains systèmes d'exploitation
      l'intégrent (par exemple, <systemitem class="osname">Linux</systemitem>,
      <systemitem class="osname">NetBSD</systemitem>,
      <systemitem class="osname">Solaris</systemitem>). Pour les autres systèmes,
      un paquet additionnel peut être téléchargé sur <ulink
      url="http://developer.postgresql.org/~petere/bsd-gettext"></ulink>.
      Pour utiliser l'implantation <application>Gettext</application> des
      bibliothèques C <acronym>GNU</acronym>, certains utilitaires nécessitent
      le paquet <productname>GNU Gettext</productname>.
      Il n'est pas nécessaire dans les autres implantations.
     </para>
    </listitem>

    <listitem>
     <para>
      <application>Kerberos</application>, <productname>OpenSSL</productname>,
      <productname>OpenLDAP</productname> ou <application>PAM</application>
      pour bénéficier de l'authentification ou du chiffrement en utilisant ces services.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   En cas de compilation à partir d'une arborescence <acronym>CVS</acronym> et
   non d'un paquet de sources publié, ou pour faire du développement, les
   paquets suivants seront également nécessaires&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      <indexterm>
       <primary>flex</primary>
      </indexterm>
      <indexterm>
       <primary>bison</primary>
      </indexterm>
      <indexterm>
       <primary>yacc</primary>
      </indexterm>

      GNU <application>Flex</application> et <application>Bison</application>
      sont nécessaires pour compiler à partir d'un export du CVS ou lorsque les
      fichiers de définition de l'analyseur ou du « scanner » sont modifiés.
      Les versions nécessaires sont <application>Flex</application> 2.5.4 ou
      ultérieure et <application>Bison</application> 1.875 ou ultérieure.
      D'autres programmes <application>yacc</application> peuvent parfois
      être utilisés, mais cela est déconseillé, au regard des
      efforts supplémentaires que cela demande. 
      Tout autre programme <application>lex</application> ne fonctionne
      pas.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   Si d'autres paquets <acronym>GNU</acronym> sont nécessaires, ils peuvent
   être récupérés sur un site miroir de <acronym>GNU</acronym> (voir <ulink
   url="http://www.gnu.org/order/ftp.html"/> pour la liste) ou sur
   <ulink url="ftp://ftp.gnu.org/gnu/"/>.
  </para>

  <para>
   Il est important de vérifier qu'il y a suffisamment d'espace disque 
   disponible. 65&nbsp;Mo sont nécessaires pour la compilation et 15&nbsp;Mo pour le
   répertoire d'installation. Un groupe de bases de données vide nécessite
   25&nbsp;Mo&nbsp;; les fichiers des bases prennent cinq fois plus d'espace que des
   fichiers texte contenant les mêmes données. Si des tests de
   régression sont prévus, 90&nbsp;Mo supplémentaires sont temporairement
   nécessaires. On peut utiliser la commande <command>df</command> pour
   vérifier l'espace disque disponible.
  </para>
 </sect1>

 <sect1 id="install-getsource">
  <title>Obtenir les sources</title>

  <para>
   Les sources de <productname>PostgreSQL</productname> &version; peuvent être obtenues
   par ftp anonyme sur <ulink
   url="ftp://ftp.postgresql.org/pub/source/v&version;/postgresql-&version;.tar.gz"></ulink>.
   D'autres options de téléchargement sont possibles à partir du site
   web&nbsp;: <ulink url="http://www.postgresql.org/download/"></ulink>.
   Après avoir obtenu le fichier, on le décompresse&nbsp;:
<screen><userinput>gunzip postgresql-&version;.tar.gz</userinput>
<userinput>tar xf postgresql-&version;.tar</userinput></screen>
   Cela crée un répertoire <filename>postgresql-&version;</filename>
   contenant les sources de <productname>PostgreSQL</productname> dans le répertoire
   courant. Le reste de la procédure d'installation s'effectue depuis ce
   répertoire.
  </para>
 </sect1>

 <sect1 id="install-upgrading">
  <title>Mise à jour</title>

  <indexterm zone="install-upgrading">
   <primary>Mise à jour</primary>
  </indexterm>

  <para>
   Ces instructions supposent que l'installation existante se trouve dans
   le répertoire <filename>/usr/local/pgsql</filename>, et que l'aire de données
   est dans <filename>/usr/local/pgsql/data</filename>. Il convient de modifier
   ces chemins en fonction de l'installation actuelle.
  </para>

  <para>
   Le format de stockage interne des données change typiquement à chaque version
   majeure de <productname>PostgreSQL</productname>. C'est pourquoi, lors de la
   mise à jour d'une installation qui n'est pas du numéro de version
   <quote>&majorversion;.x</quote>, il faut sauvegarder et restaurer ses
   données. Lors d'une mise à jour à partir de <productname>PostgreSQL</productname>
   <quote>&majorversion;.x</quote>, la nouvelle version peut utiliser les
   fichiers de données actuels&nbsp;; les étapes de
   sauvegarde et de restauration ci-dessous, inutiles, peuvent être ignorées.
  </para>

  <procedure>
   <step>
    <para>
     Lors de la sauvegarde, il est préférable de s'assurer que la base de
     données n'est pas actualisée. Non que cela affecte l'intégrité de la
     sauvegarde, mais parce que les données modifiées ne sont pas incluses.
     Il peut, dans ce cas, être nécessaire d'éditer les permissions dans le
     fichier <filename>/usr/local/pgsql/data/pg_hba.conf</filename> (ou
     équivalent) pour interdire les accès autres que celui utile à la
     sauvegarde.
    </para>

    <para>
     <indexterm>
      <primary>pg_dumpall</primary>
      <secondary>utilisation pendant la mise à jour</secondary>
     </indexterm>

     Pour sauvegarder la base, saisir&nbsp;:
<screen><userinput>pg_dumpall &gt; <replaceable>fichierdesortie</replaceable></userinput></screen>
     Pour conserver les identifiants d'objets (OID) (lorsqu'ils sont
     utilisés comme clé étrangère), utiliser l'option <option>-o</option>
     lors de l'exécution de <application>pg_dumpall</application>.
    </para>

    <para>
     Pour effectuer la sauvegarde, il est possible d'utiliser la commande
     <application>pg_dumpall</application> incluse dans la distribution de la
     version actuelle. Cependant, pour de meilleurs résultats, il est
     préférable d'utiliser la commande <command>pg_dumpall</command> contenue dans
     <productname>PostgreSQL</productname> &version; puisqu'elle corrige les
     erreurs des versions précédentes. Bien que ce conseil puisse paraître
     absurde, tant que la nouvelle version n'est pas installée, il convient de
     le suivre si l'objectif est d'installer la nouvelle version en parallèle
     de l'ancienne. Dans ce cas, il est possible de terminer normalement
     l'installation et de transférer les données dans un second temps, ce qui
     réduit l'indisponibilité.
    </para>
   </step>

   <step>
    <para>
     Arrêter l'ancien serveur&nbsp;:
<screen><userinput>pg_ctl stop</userinput></screen>
    </para>

    <para>
     Sur les systèmes qui lancent <productname>PostgreSQL</productname> au démarrage, il y
     a probablement un fichier de démarrage qui peut faire la même chose. Par
     exemple, sur un système <systemitem class="osname">Red Hat Linux</systemitem>, la
     commande
<screen><userinput>/etc/rc.d/init.d/postgresql stop</userinput></screen>
     doit fonctionner.
    </para>
   </step>

   <step>
    <para>
     En cas de restauration d'une sauvegarde, renommer ou supprimer
     l'ancien répertoire d'installation. Il est préférable de renommer le répertoire
     plutôt que de le supprimer, parce qu'en cas de problème, on peut avoir
     besoin d'y revenir. Le répertoire peut
     prendre beaucoup d'espace disque. Pour renommer le répertoire, utiliser
     une commande comme&nbsp;:
<screen><userinput>mv /usr/local/pgsql /usr/local/pgsql.old</userinput></screen>
    </para>
   </step>

   <step>
    <para>
     Installer la nouvelle version de <productname>PostgreSQL</productname>
     comme indiquée dans la <phrase>prochaine section</phrase>
     <phrase><xref linkend="install-procedure"/></phrase>.
    </para>
   </step>

   <step>
    <para>
     Créer un nouveau cluster de bases de données. Ces commandes
     doivent être exécutées sous le compte superutilisateur
     initial (qui existe déjà dans le cas d'une mise à jour).
<programlisting>
<userinput>/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data</userinput>
</programlisting>
    </para>
   </step>

   <step>
    <para>
     Restaurer le <filename>pg_hba.conf</filename> précédent et toutes les
     modifications de <filename>postgresql.conf</filename>.
    </para>
   </step>

   <step>
    <para>
     Lancer le serveur de bases de données, toujours à partir du compte
     superutilisateur&nbsp;:
<programlisting>
<userinput>/usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data</userinput>
</programlisting>
    </para>
   </step>

   <step>
    <para>
     Enfin, restaurer les données à partir de la sauvegarde avec&nbsp;:
<screen>
<userinput>/usr/local/pgsql/bin/psql -d postgres -f <replaceable>outputfile</replaceable></userinput>
</screen>
     en utilisant le <emphasis>nouveau</emphasis> <application>psql</application>.
    </para>
   </step>
  </procedure>

  <para>
   Des informations supplémentaires sont disponibles dans la
   <phrase>documentation</phrase>
   <phrase><xref linkend="migration"/></phrase>. Cette documentation contient
   notmamment des instructions sur la manière d'exécuter les deux versions en
   parallèle.
  </para>
 </sect1>


 <sect1 id="install-procedure">
  <title>Procédure d'installation</title>

  <procedure>

  <step id="configure">
   <title>Configuration</title>

   <indexterm zone="configure">
    <primary>configure</primary>
   </indexterm>

   <para>
    La première étape de la procédure d'installation est de configurer
    l'arborescence des sources en fonction du système et de choisir les options
    souhaitées.
    Cela est obtenu en exécutant le script <filename>configure</filename>. Pour une
    installation par défaut, on tape simplement
<screen><userinput>./configure</userinput></screen>
    Ce script exécute de nombreux tests afin de déterminer les valeurs
    de certaines variables dépendantes du système. Il détecte ainsi les
    particularités du système d'exploitation. Il crée divers
    fichiers dans l'arborescence de compilation pour enregistrer ce qui a été
    trouvé. (Il est toujours possible d'exécuter <filename>configure</filename> à
    partir d'un répertoire extérieur à l'arborescence des sources pour
    séparer arborescence de compilation et arborescence des sources.)
   </para>

   <para>
    La configuration par défaut compile le serveur et les utilitaires, ainsi
    que toute application cliente ou interface qui ne requière
    qu'un compilateur C. Tous les fichiers sont installés par défaut 
    sous <filename>/usr/local/pgsql</filename>.
   </para>

   <para>
    Les processus de compilation et d'installation peuvent être personnalisés
    par le passage d'une ou plusieurs options sur la ligne de commande après
    <filename>configure</filename>&nbsp;:

     <variablelist>
      <varlistentry>
       <term><option>--prefix=<replaceable>PREFIX</replaceable></option></term>
       <listitem>
        <para>
         Installer tous les fichiers sous le répertoire <replaceable>PREFIX</replaceable>
         au lieu du répertoire <filename>/usr/local/pgsql</filename>. 
         Les fichiers sont installés dans divers
         sous-répertoires&nbsp;; aucun fichier n'est directement installé
         dans le répertoire <replaceable>PREFIX</replaceable>.
        </para>

        <para>
         Pour satisfaire des besoins spécifiques, il est possible de 
	 personnaliser les sous-répertoires à l'aide des options suivantes.
	 Toutefois, si ces options conservent leurs valeurs par défaut,
	 il reste possible de relocaliser l'installation, le répertoire pouvant
	 être déplacé après installation. (Cela n'affecte pas les emplacements de
	 <literal>man</literal> et <literal>doc</literal>.)
        </para>

       <para>
	Dans le cas d'installations déplaçables, utiliser
	l'option <literal>--disable-rpath</literal> de <filename>configure</filename>.
	De plus, il est nécessaire d'indiquer au système d'exploitation
	comment trouver les bibliothèques partagées.
        </para>
       </listitem>
      </varlistentry>

<!--SAS::ICI-->
      <varlistentry>
       <term><option>--exec-prefix=<replaceable>EXEC-PREFIX</replaceable></option></term>
       <listitem>
        <para>
         Vous pouvez installer les fichiers dépendants de l'architecture dans
         un répertoire différent, <replaceable>EXEC-PREFIX</replaceable>, de celui donné
         par <replaceable>PREFIX</replaceable>. Ce qui peut être utile pour partager
         les fichiers dépendants de l'architecture entre plusieurs machines.
         Si vous l'omettez, <replaceable>EXEC-PREFIX</replaceable> est égal à 
         <replaceable>PREFIX</replaceable> et les fichiers dépendants seront installés
         sous la même arborescence que les fichiers indépendants de
         l'architecture, ce qui est probablement ce que vous voulez.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--bindir=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         Spécifie le répertoire des exécutables. Par défaut, il s'agit de
         <filename><replaceable>EXEC-PREFIX</replaceable>/bin</filename>, ce qui signifie
         <filename>/usr/local/pgsql/bin</filename>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--datadir=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         Prépare le répertoire pour des fichiers de données en lecture seule
         utilisés par les programmes d'installation. Par défaut, il s'agit de
         <filename><replaceable>PREFIX</replaceable>/share</filename>. Il est bon de noter que
         cela n'a rien à voir avec l'emplacement des fichiers de votre base de
         données.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--sysconfdir=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         Le répertoire contenant divers fichiers de configuration. Par défaut,
         il s'agit de <filename><replaceable>PREFIX</replaceable>/etc</filename>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--libdir=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         L'endroit où installer les bibliothèques et les modules chargeables
         dynamiquement. Par défaut, il s'agit de
         <filename><replaceable>EXEC-PREFIX</replaceable>/lib</filename>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--includedir=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         Le répertoire où sont installées les en-têtes C et C++. Par défaut, il
         s'agit de <filename><replaceable>PREFIX</replaceable>/include</filename>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--mandir=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         Les pages man fournies avec <productname>PostgreSQL</productname> seront
         installées sous ce répertoire, dans leur sous-répertoire
	 <filename>man<replaceable>x</replaceable></filename> respectif.
         Par défaut, il s'agit de <filename><replaceable>PREFIX</replaceable>/man</filename>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-docdir=<replaceable>REPERTOIRE</replaceable></option></term>
       <term><option>--without-docdir</option></term>
       <listitem>
        <para>
         Les fichiers de documentation, sauf les pages <quote>man</quote>,
         seront installés dans ce répertoire. Par défaut, il s'agit de
	 <filename><replaceable>PREFIX</replaceable>/doc</filename>. Si l'option
	 <option>--without-docdir</option> est spécifiée, la
	 documentation ne sera pas installée par <command>make
	 install</command>. Ceci est fait pour aider les scripts d'empaquetage
	 ayant des méthodes particulières pour installer la documentation.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>

     <note>
      <para>
       Une attention toute particulière a été prise afin de rendre possible
       l'installation de <productname>PostgreSQL</productname> dans des répertoires
       partagés (comme <filename>/usr/local/include</filename>) sans
       interférer avec des noms de fichiers relatifs au reste du système.
       En premier lieu, le mot <quote><literal>/postgresql</literal></quote>
       est automatiquement ajouté au répertoire <varname>datadir</varname>,
       <varname>sysconfdir</varname> et <varname>docdir</varname>,
       à moins que le nom du répertoire à partir de la racine contienne déjà
       le mot <quote><literal>postgres</literal></quote> où
       <quote><literal>pgsql</literal></quote>. Par exemple, si vous choisissez
       <filename>/usr/local</filename> comme préfixe, la documentation sera 
       installée dans
       <filename>/usr/local/doc/postgresql</filename>, mais si le 
       préfixe est <filename>/opt/postgres</filename>, alors il sera dans
       <filename>/opt/postgres/doc</filename>.  Les fichiers d'en-têtes
       publiques C de l'interface cliente seront installés sous
       <varname>includedir</varname> et sont propres par rapport aux noms de
       fichiers relatifs au reste du système. Les fichiers d'en-têtes privés et
       les fichiers d'en-têtes du serveur sont installés dans des répertoires
       privés sous <varname>includedir</varname>.
       Voir la documentation de chaque interface pour savoir comment obtenir
       ces fichiers d'en-tête.
       Enfin, un répertoire privé sera aussi créé si nécessaire sous
       <varname>libdir</varname> pour les modules chargeables dynamiquement.
      </para>
     </note>
    </para>

    <para>
     <variablelist>
      <varlistentry>
       <term><option>--with-includes=<replaceable>REPERTOIRES</replaceable></option></term>
       <listitem>
        <para>
         <replaceable>REPERTOIRES</replaceable> est une liste de répertoires séparés par
         des caractères deux points (:) qui sera ajoutée à la liste de recherche
         des fichiers d'en-tête. Si vous avez des paquetages optionnels (tels
         que <application>Readline</application> GNU) installés dans des répertoires non
         conventionnels, vous pouvez utiliser cette option et certainement
         l'option <option>--with-libraries</option> correspondante.
        </para>
        <para>
         Exemple&nbsp;:
         <literal>--with-includes=/opt/gnu/include:/usr/sup/include</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-libraries=<replaceable>REPERTOIRES</replaceable></option></term>
       <listitem>
        <para>
         <replaceable>REPERTOIRES</replaceable> est une liste de recherche de répertoires
         de bibliothèques séparés par des caractères deux points (:). Vous
         aurez probablement à utiliser cette option (et l'option correspondante
         <option>--with-includes</option>) si vous avez des paquetages installés dans
         des répertoires non conventionnels.
        </para>
        <para>
         Exemple&nbsp;: <literal>--with-libraries=/opt/gnu/lib:/usr/sup/lib</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-nls<optional>=<replaceable>LANGUES</replaceable></optional></option></term>
       <listitem>
        <para>
         Permet de mettre en place le support des langues natives
         (<acronym>NLS</acronym>). C'est la possibilité d'afficher les messages
         des programmes dans une langue autre que l'anglais.
         <replaceable>LANGUES</replaceable> est une liste de codes des langues
         que vous voulez supporter séparés par un espace. Par 
         exemple, <literal>--enable-nls='de fr'</literal> (l'intersection entre votre
         liste et l'ensemble des langues traduites actuellement sera calculée
         automatiquement). Si vous ne spécifiez pas de liste, alors toutes les
         traductions disponibles seront installées.
        </para>

        <para>
         Pour utiliser cette option, vous avez besoin d'une implémentation de
         l'API <application>Gettext</application>&nbsp;; voir après.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-pgport=<replaceable>NUMERO</replaceable></option></term>
       <listitem>
        <para>
         Positionne <replaceable>NUMERO</replaceable> comme numéro de port par défaut
         pour le serveur et les clients. La valeur par défaut est 5432. Le port
         peut toujours être changé ultérieurement mais, si vous le faites ici,
         alors les exécutables du serveur et des clients auront la même valeur
         par défaut, ce qui est vraiment très pratique. Habituellement, la
         seule bonne raison de choisir une valeur autre que celle par défaut
         est que vous souhaitez exécuter plusieurs serveurs
	 <productname>PostgreSQL</productname> sur la même machine.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-perl</option></term>
       <listitem>
        <para>
	 Permet l'utilisation du langage de procédures <application>PL/Perl</application>
	 côté serveur.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-python</option></term>
       <listitem>
        <para>
	 Permet la compilation du langage de procédures <application>PL/Python</application>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-tcl</option></term>
       <listitem>
        <para>
	 Permet la compilation du langage de procédures <application>PL/Tcl</application>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-tclconfig=<replaceable>REPERTOIRE</replaceable></option></term>
       <listitem>
        <para>
         Tcl installe les fichiers <filename>tclConfig.sh</filename>, contenant
	 certaines informations de configuration nécessaires pour compiler le
	 module d'interfaçage avec Tcl. Ce fichier est trouvé automatiquement
	 mais, si vous voulez utiliser une version différente de Tcl, vous pouvez spécifier le répertoire où
	 le trouver.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-gssapi</option></term>
       <listitem>
        <para>
         Construire avec le support de l'authentification GSSAPI. Sur de
	 nombreux systèmes, GSSAPI (qui fait habituellement partie d'une
	 installation Kerberos) n'est pas installé dans un emplacement
	 recherché par défaut (c'est-à-dire <filename>/usr/include</filename>,
	 <filename>/usr/lib</filename>), donc vous devez utiliser les options
	 <option>--with-includes</option> et <option>--with-libraries</option>
	 en plus de cette option. <filename>configure</filename> vérifiera les
	 fichiers d'en-têtes nécessaires et les bibliothèques pour s'assurer
	 que votre installation GSSAPI est suffisante avant de continuer.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-krb5</option></term>
       <listitem>
        <para>
         Compile le support d'authentification de Kerberos 5. Sur beaucoup de
	 systèmes, le système Kerberos n'est pas
	 installé à un emplacement recherché par défaut (c'est-à-dire
	 <filename>/usr/include</filename>, <filename>/usr/lib</filename>), donc vous devez
	 utiliser les options <option>--with-includes</option> et
	 <option>--with-libraries</option> en plus de cette option.
	 <filename>configure</filename> vérifiera les fichiers d'en-tête et les
	 bibliothèques requis pour s'assurer que votre installation Kerberos est
	 suffisante avant de continuer
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-krb-srvnam=<replaceable>NOM</replaceable></option></term>
       <listitem>
        <para>
         Le nom par défaut du service principal de Kerberos (aussi utilisé par
	 GSSAPI). <literal>postgres</literal> est pris par défaut. Il n'y a
	 habituellement pas de raison de le changer sauf dans le cas d'un
	 environnement Windows, auquel cas il doit être mis en majuscule,
         <literal>POSTGRES</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-openssl</option></term>
       <listitem>
       <indexterm>
        <primary>OpenSSL</primary>
        <seealso>SSL</seealso>
       </indexterm>

        <para>
	 Compile le support de connexion <acronym>SSL</acronym> (chiffrement).
	 Le paquetage <productname>OpenSSL</productname> doit être
	 installé. <filename>configure</filename> vérifiera que les fichiers d'en-tête
	 et les bibliothèques soient installés pour s'assurer que votre
	 installation d'<productname>OpenSSL</productname> est suffisante avant de
         continuer.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-pam</option></term>
       <listitem>
        <para>
	 Compile le support
	 <acronym>PAM</acronym><indexterm><primary>PAM</primary></indexterm>
         (<foreignphrase>Modules d'Authentification Pluggable</foreignphrase>).
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-ldap</option></term>
       <listitem>
        <para>
         Demande l'ajout du support de <acronym>LDAP</acronym><indexterm><primary>LDAP</primary></indexterm>
	 pour l'authentification et la recherche des paramètres de connexion
	 (voir <phrase>la documentation sur l'authentification
	 des clients et libpq</phrase><phrase><xref
	 linkend="libpq-ldap"/> et <xref linkend="auth-ldap"/></phrase>).
         Sur Unix, cela requiert l'installation du paquet
	 <productname>OpenLDAP</productname>.
	 <filename>configure</filename> vérifiera l'existence des fichiers d'en-tête
	 et des bibliothèques requis pour s'assurer que votre installation
	 d'<productname>OpenLDAP</productname> est suffisante avant de continuer.
         Sur Windows, la bibliothèque <productname>WinLDAP</productname> est
	 utilisée par défaut.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--without-readline</option></term>
       <listitem>
        <para>
         Évite l'utilisation de la bibliothèque <application>Readline</application>
	 (et de celle de <application>libedit</application>).
         Cela désactive l'édition de la ligne de commande et l'historique dans 
         <application>psql</application>, ce n'est donc pas recommandé.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-libedit-preferred</option></term>
       <listitem>
        <para>
         Favorise l'utilisation de la bibliothèque <application>libedit</application>
	 (sous licence BSD) plutôt que <application>Readline</application> (GPL).
	 Cette option a seulement un sens si vous avez installé les deux
	 bibliothèques&nbsp;; dans ce cas, par défaut,
	 <application>Readline</application> est utilisé.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-bonjour</option></term>
       <listitem>
        <para>
	 Compile le support de Bonjour. Ceci requiert le support de Bonjour
	 dans votre système d'exploitation. Recommandé sur Mac OS X.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-ossp-uuid</option></term>
       <listitem>
        <para>
         Utilise la <ulink url="http://www.ossp.org/pkg/lib/uuid/">bibliothèque OSSP
	 UUID</ulink> lors de la construction du module
         <literal>contrib/uuid-ossp</literal>. Cette bibliothèque fournit des
	 fonctions pour générer les UUID.
	 <indexterm><primary>UUID</primary></indexterm>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-libxml</option></term>
       <listitem>
        <para>
         Construit avec libxml (active le support SQL/XML). Une version 2.6.23
	 ou ultérieure de libxml est requise pour cette fonctionnalité.
        </para>

        <para>
         Libxml installe un programme <command>xml2-config</command> qui est
	 utilisé pour détecter les options du compilateur et de l'éditeur de
	 liens. PostgreSQL l'utilisera automatiquement si elle est trouvée.
	 Pour indiquer une installation de libxml dans un emplacement inhabituel,
	 vous pouvez soit configurer la variable d'environnement
         <envar>XML2_CONFIG</envar> pour pointer vers le programme
         <command>xml2-config</command> appartenant à l'installation, ou
	 utiliser les options <option>--with-includes</option> et
         <option>--with-libraries</option>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-libxslt</option></term>
       <listitem>
        <para>
         Utilise libxslt pour construire <filename>contrib/xml2</filename>. Le
	 module <filename>contrib/xml2</filename> se base sur cette
	 bibliothèque pour réaliser les transformations XSL du XML.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-integer-datetimes</option></term>
       <listitem>
        <para>
         Utilise le stockage des entiers sur 64 bits pour les types datetime
         et interval plutôt que le stockage par défaut en virgule flottante.
         Ceci réduit le nombre de valeurs représentatives mais garantit une
         précision à la microseconde sur toute l'échelle de valeurs (voir
	 la <phrase>la documentation sur les types de données
	 date et heure</phrase><phrase><xref
	 linkend="datatype-datetime"/></phrase>
         pour plus d'informations).
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--disable-spinlocks</option></term>
       <listitem>
        <para>
	 Autorise le succès de la construction y compris lorsque
	 <productname>PostgreSQL</productname> n'a
         pas le support spinlock du CPU pour la plateforme. Ce manque de support
         résultera en des performances faibles&nbsp;; du coup, cette option
         devra seulement être utilisée si la construction échoue et vous informe
	 du manque de support de spinlock sur votre plateforme. Si cette option
	 est requise pour construire <productname>PostgreSQL</productname> sur votre
	 plateforme, merci de rapporter le problème aux développeurs de
         <productname>PostgreSQL</productname>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-thread-safety</option></term>
       <listitem>
        <para>
         Rend les bibliothèques clientes compatibles avec les threads. Ceci
         permet des threads concurrents dans les programmes
         <application>libpq</application> et <application>ECPG</application>
         ce qui leur permet de gérer en toute sûreté leur connexions privées.
	 Cette option requiert un support adéquat des threads sur votre système
	 d'exploitation.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--with-system-tzdata=<replaceable>RÉPERTOIRE</replaceable></option></term>

       <listitem>

       <indexterm> 
        <primary>données de fuseau horaire</primary> 
       </indexterm> 

        <para>
         <productname>PostgreSQL</productname> inclut sa propre base de données
	 des fuseaux horaires, nécessaire pour les opérations sur les dates et
	 les heures. Cette base de données est en fait compatible avec la base
	 de fuseaux horaires <quote>zic</quote> fournie par de nombreux
	 systèmes d'exploitation comme FreeBSD, Linux et Solaris, donc ce serait
	 redondant de l'installer une nouvelle fois. Quand cette option est
	 utilisée, la base des fuseaux horaires, fournie par le système, dans
         <replaceable>RÉPERTOIRE</replaceable> est utilisée à la place de celle
	 inclus dans la distribution des sources de PostgreSQL.
	 <replaceable>RÉPERTOIRE</replaceable> doit être indiqué avec un chemin
         absolu. <filename>/usr/share/zoneinfo</filename> est un répertoire
	 très probable sur certains systèmes d'exploitation. Notez que la routine
         d'installation ne détectera pas les données de fuseau horaire différentes
	 ou erronées. Si vous utilisez cette option, il vous est conseillé de
	 lancer les tests de régression pour vérifier que les données de fuseau
	 horaire que vous pointez fonctionnent correctement avec
	 <productname>PostgreSQL</productname>.
        </para>

        <para>
         Cette option a pour cible les distributeurs de paquets binaires qui
	 connaissent leur système d'exploitation. Le principal avantage
	 d'utiliser cette option est que le package PostgreSQL n'aura pas
	 besoin d'être mis à jour à chaque fois que les règles des fuseaux
	 horaires changent. Un autre avantage est que PostgreSQL peut être
	 cross-compilé<indexterm><primary>cross compilation</primary></indexterm>
	 plus simplement si les fichiers des fuseaux horaires n'ont pas besoin
	 d'être construit lors de l'installation.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--without-zlib</option></term>
       <listitem>
        <para>
	<indexterm>
	 <primary>zlib</primary>
	</indexterm>
         Évite l'utilisation de la bibliothèque <application>Zlib</application>. Cela
         désactive le support des archives compressées dans 
	 <application>pg_dump</application> et <application>pg_restore</application>.
         Cette option est seulement là pour les rares systèmes qui ne 
         disposent pas de cette bibliothèque.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-debug</option></term>
       <listitem>
        <para>
         Compile tous les programmes et bibliothèques en mode de débogage.
         Cela signifie que vous pouvez exécuter les programmes via un
         débogueur pour analyser les problèmes. Cela grossit considérablement
         la taille des exécutables et, avec des compilateurs autres que GCC,
         habituellement, cela désactive les optimisations du compilateur,
         provoquant des ralentissements. Cependant, mettre ce mode en place est
         extrêmement utile pour repérer les problèmes. Actuellement, cette
         option est recommandée pour les installations en production seulement
         si vous utilisez GCC. Néanmoins, vous devriez l'utiliser si vous
         développez ou si vous utilisez une version béta.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-profiling</option></term>
       <listitem>
        <para>
         En cas d'utilisation de GCC, tous les programmes et bibliothèques
	 sont compilés pour qu'elles puissent être profilées. À la sortie du
	 processus serveur, un sous-répertoire sera créé pour contenir le
	 fichier <filename>gmon.out</filename> à utiliser pour le profilage.
         Cette option est à utiliser seulement avec GCC lors d'un développement.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-cassert</option></term>
       <listitem>
        <para>
         Permet la vérification des <firstterm>assertions</firstterm> par le
	 serveur qui teste de nombreux cas de conditions
	 <quote>impossibles</quote>. Ce qui est inestimable dans le cas de
	 développement, mais les tests peuvent ralentir sensiblement le
	 système. Activer cette option n'influe pas sur la stabilité de
	 votre serveur&nbsp;! Les assertions vérifiées ne sont pas classées
	 par ordre de sévérité et il se peut qu'un bogue anodin fasse
	 redémarrer le serveur s'il y a un échec de vérification. Cette
	 option n'est pas recommandée dans un environnement de production
	 mais vous devriez l'utiliser lors de développement ou pour les
	 versions béta.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-depend</option></term>
       <listitem>
        <para>
         Active la recherche automatique des dépendances. Avec cette option,
         les fichiers makefile sont appelés pour recompiler les fichiers objet
         dès qu'un fichier d'en-tête est modifié. C'est pratique si vous faites
         du développement, mais inutile si vous ne voulez que compiler une fois
         et installer. Pour le moment, cette option ne fonctionne qu'avec GCC.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><option>--enable-dtrace</option></term>
       <listitem>
        <para>
         <indexterm>
          <primary>DTrace</primary>
         </indexterm>
         Compile avec le support de l'outil de trace dynamique, DTrace.
         Le seul système d'exploitation supportant DTrace pour l'instant
	 est Solaris.
        </para>

        <para>
         Pour pointer vers le programme <command>dtrace</command>, la variable
	 d'environnement <envar>DTRACE</envar> doit être configurée. Ceci sera
	 souvent nécessaire car <command>dtrace</command> est typiquement
	 installé sous <filename>/usr/sbin</filename>, qui pourrait ne pas être
	 dans le chemin. Des options supplémentaires en ligne de commande
	 peuvent être indiquées dans la variable d'environnement
	 <envar>DTRACEFLAGS</envar> pour le programme <command>dtrace</command>.
        </para>

        <para>
         Pour inclure le support de DTrace dans un exécutable 64-bit, ajoutez
         l'option <literal>DTRACEFLAGS="-64"</literal> pour configure. Par
         exemple, en utilisant le compilateur GCC&nbsp;:
<screen>./configure CC='gcc -m64' --enable-dtrace DTRACEFLAGS='-64' ...
</screen>
         En utilisant le compilateur de Sun&nbsp;:
<screen>./configure CC='/opt/SUNWspro/bin/cc -xtarget=native64' --enable-dtrace DTRACEFLAGS='-64' ...
</screen>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>

    <para>
     Si vous préférez utiliser un compilateur C différent de ceux listés par
     <filename>configure</filename>, positionnez la variable
     d'environnement <envar>CC</envar> pour qu'elle pointe sur le compilateur de 
     votre choix.
     Par défaut, <filename>configure</filename> pointe sur 
     <filename>gcc</filename> s'il est disponible, sinon il utilise celui par
     défaut de la plateforme (habituellement <filename>cc</filename>).
     De façon similaire, vous pouvez repositionner les options par défaut du
     compilateur à l'aide de la variable <envar>CFLAGS</envar>.
    </para>

    <para>
     Vous pouvez spécifier les variables d'environnement sur la ligne de
     commande <filename>configure</filename>, par exemple&nbsp;:
<screen><userinput>./configure CC=/opt/bin/gcc CFLAGS='-O2 -pipe'</userinput></screen>
    </para>

    <para>
    Voici une liste des variables importantes qui sont configurables de cete
    façon&nbsp;:
    </para>

    <para>
     <variablelist>
      <varlistentry>
       <term><envar>CC</envar></term>
       <listitem>
        <para>
         compilateur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au compilateur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CPP</envar></term>
       <listitem>
        <para>
         préprocesseur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>CPPFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au préprocesseur C
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>DTRACE</envar></term>
       <listitem>
        <para>
         emplacement du programme <command>dtrace</command>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>DTRACEFLAGS</envar></term>
       <listitem>
        <para>
         options à passer au programme <command>dtrace</command>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS</envar></term>
       <listitem>
        <para>
         options à passer à l'éditeur de liens
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>LDFLAGS_SL</envar></term>
       <listitem>
        <para>
         options de l'éditeur de liens pour la création des liens des
         bibliothèques partagées
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>MSGFMT</envar></term>
       <listitem>
        <para>
         programme <command>msgfmt</command> pour le support des langues
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>PERL</envar></term>
       <listitem>
        <para>
         chemin complet vers l'interpréteur Perl. Il sera utilisé pour déterminer
         les dépendances pour la construction de PL/Perl.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>PYTHON</envar></term>
       <listitem>
        <para>
         chemin complet vers l'interpréteur Python. Il sera utilisé pour déterminer
         les dépendances pour la construction de PL/Python.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>TCLSH</envar></term>
       <listitem>
        <para>
         chemin complet vers l'interpréteur Tcl. Il sera utilisé pour déterminer
         les dépendances pour la construction de PL/Tcl.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>XML2_CONFIG</envar></term>
       <listitem>
        <para>
         programme <command>xml2-config</command> utilisé pour localiser
	 l'installation de libxml.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><envar>YACC</envar></term>
       <listitem>
        <para>
         programme Yacc (<literal>bison -y</literal> si utilisation de Bison)
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </step>

  <step>
   <title>Compilation</title>

   <para>
    Pour démarrer la compilation, saisissez
<screen><userinput>gmake</userinput></screen>
    (Rappelez-vous d'utiliser <acronym>GNU</acronym>
    <application>make</application>). La compilation prendra quelques minutes,
    suivant de votre matériel. La dernière ligne affichée devrait être
<screen>All of PostgreSQL is successfully made. Ready to install.</screen>
   </para>
  </step>

  <step>
   <title>Tests de régression</title>

   <indexterm>
    <primary>tests de régression</primary>
   </indexterm>

   <para>
    Si vous souhaitez tester le serveur nouvellement compileé avant de
    l'installer, vous pouvez exécuter les tests de régression à ce moment. Les
    tests de régression sont une suite de tests qui vérifient que
    <productname>PostgreSQL</productname> fonctionne sur votre machine tel que les
    développeurs l'espèrent. Saisissez
<screen><userinput>gmake check</userinput></screen>
    (cela ne fonctionne pas en tant que root&nbsp;; faites-le en tant
    qu'utilisateur sans droits).
    <phrase>Le fichier <filename>src/test/regress/README</filename>
    et la documentation contiennent</phrase><phrase>Le <xref
    linkend="regress"/> contient</phrase>
    des détails sur l'interprétation des résultats de ces tests. Vous pouvez
    les répéter autant de fois que vous le voulez en utilisant la même
    commande.
   </para>
  </step>

  <step id="install">
   <title>Installer les fichiers</title>

   <note>
    <para>
     Si vous mettez à jour une version existante et que vous placez
     les fichiers au même endroit que les anciens, assurez-vous d'avoir
     sauvegardé vos données et arrêté l'ancien serveur avant de continuer,
     comme l'explique la <xref linkend="install-upgrading"/> ci-après.
    </para>
   </note>

   <para>
    Pour installer <productname>PostgreSQL</productname>, saisissez
<screen><userinput>gmake install</userinput></screen>
    Cela installera les fichiers dans les répertoires spécifiés dans
    l'<xref linkend="configure"/>. Assurez-vous d'avoir les droits appropriés
    pour écrire dans ces répertoires. Normalement, vous avez besoin d'être
    superutilisateur pour cette étape. Une alternative consiste à créer les
    répertoires cibles à l'avance et à leur donner les droits appropriées.
   </para>

   <para>
    Vous pouvez utiliser <literal>gmake install-strip</literal> en lieu et
    place de <literal>gmake install</literal> pour dépouiller l'installation
    des exécutables et des bibliothèques. Cela économise un peu d'espace disque.
    Si vous avez effectué la compilation en mode de débogage, ce dépouillage
    l'enlèvera, donc ce n'est à faire seulement si ce mode n'est plus
    nécessaire. <literal>install-strip</literal> essaie d'être raisonnable
    en sauvegardant de l'espace disque mais il n'a pas une connaissance
    parfaite de la façon de dépouiller un exécutable de tous les octets
    inutiles. Ainsi, si vous voulez sauvegarder le maximum d'espace disque, vous
    devrez faire le travail à la main.
   </para>

   <para>
    L'installation standard fournit seulement les fichiers en-têtes nécessaires
    pour le développement d'applications clientes ainsi que pour le développement
    de programmes côté serveur comme des fonction personnelles ou des
    types de données écrits en C (avant <productname>PostgreSQL</productname> 8.0, une
    commande <literal>gmake install-all-headers</literal> séparée était nécessaire pour
    ce dernier point mais cette étape a été intégrée à l'installation standard).
   </para>

   <formalpara>
    <title>Installation du client uniquement&nbsp;:</title>
    <para>
     Si vous voulez uniquement installer les applications clientes et les
     bibliothèques d'interface, alors vous pouvez utilisez ces commandes&nbsp;:
<screen><userinput>gmake -C src/bin install</userinput>
<userinput>gmake -C src/include install</userinput>
<userinput>gmake -C src/interfaces install</userinput>
<userinput>gmake -C doc install</userinput></screen>
    <filename>src/bin</filename> comprend quelques exécutables utilisés seulement
    par le serveur mais ils sont petits.
    </para>
   </formalpara>
  </step>
  </procedure>

  <formalpara>
   <title>Enregistrer <application>eventlog</application> sur <systemitem 
    class="osname">Windows</systemitem>&nbsp;:</title>
   <para>
    Pour enregistrer une bibliothèque <application>eventlog</application> sur <systemitem
    class="osname">Windows</systemitem> grâce au système d'exploitation, exécutez cette
    commande après l'installation&nbsp;:
<screen><userinput>regsvr32 <replaceable>pgsql_library_directory</replaceable>/pgevent.dll</userinput></screen>
    Ceci crée les entrées du registre utilisées par le visualisateur d'événements.
   </para>
  </formalpara>

  <formalpara>
   <title>Désinstallation&nbsp;:</title>
   <para>
    Pour désinstaller, utilisez la commande <command>gmake
    uninstall</command>. Cependant, cela ne supprimera pas les répertoires créés.
   </para>
  </formalpara>

  <formalpara>
   <title>Ménage&nbsp;:</title>

   <para>
    Après l'installation, vous pouvez faire le ménage en supprimant les
    fichiers issus de la compilation des répertoires sources à l'aide de la
    commande <command>gmake clean</command>. Cela conservera les fichiers créés par
    la commande <command>configure</command>, ainsi vous pourrez tout recompiler
    ultérieurement avec <command>gmake</command>. Pour remettre l'arborescence
    source dans l'état initial, utilisez <command>gmake distclean</command>.
    Si vous voulez effectuer la compilation pour diverses plateformes à partir
    des mêmes sources vous devrez d'abord refaire la configuration à chaque
    fois (autrement, utilisez un répertoire de construction séparé pour chaque
    plateforme, de façon à ce que le répertoire des sources reste inchangé).
   </para>
  </formalpara>

  <para>
   Si vous avez compilé et que vous vous êtes rendu compte que les options de
   <command>configure</command> sont fausses ou si vous changez quoique ce soit que
   <command>configure</command> prenne en compte (par exemple, la mise à jour
   d'applications), alors faire un <command>gmake distclean</command> avant de
   reconfigurer et recompiler est une bonne idée. Sans ça, vos changements dans
   la configuration ne seront pas répercutés partout où il faut.
  </para>
 </sect1>

 <sect1 id="install-post">
  <title>Initialisation post-installation</title>

  <sect2>
   <title>Bibliothèques partagées</title>

   <indexterm>
    <primary>bibliothèque partagée</primary>
   </indexterm>

   <para>
    Sur certains systèmes qui utilisent les bibliothèques partagées (ce que font
    de nombreux systèmes), vous avez besoin de leurs spécifier comment trouver
    les nouvelles bibliothèques partagées. Les systèmes sur lesquels ce
    <emphasis>n'est</emphasis> pas nécessaire comprennent <systemitem
    class="osname">BSD/OS</systemitem>, <systemitem class="osname">FreeBSD</systemitem>,
    <systemitem class="osname">HP-UX</systemitem>, <systemitem
    class="osname">IRIX</systemitem>, <systemitem class="osname">Linux</systemitem>,
    <systemitem class="osname">NetBSD</systemitem>, <systemitem
    class="osname">OpenBSD</systemitem>, <systemitem class="osname">Tru64
    UNIX</systemitem> (auparavant <systemitem class="osname">Digital UNIX</systemitem>) et
    <systemitem class="osname">Solaris</systemitem>.
   </para>

   <para>
    La méthode pour le faire varie selon la plateforme, mais la méthode la plus
    répandue consiste à positionner des variables d'environnement comme
    <envar>LD_LIBRARY_PATH</envar>&nbsp;: avec les shells Bourne
    (<command>sh</command>, <command>ksh</command>, <command>bash</command>, <command>zsh</command>)&nbsp;:
<programlisting>LD_LIBRARY_PATH=/usr/local/pgsql/lib
export LD_LIBRARY_PATH</programlisting>
    ou en <command>csh</command> ou <command>tcsh</command>&nbsp;:
<programlisting>setenv LD_LIBRARY_PATH /usr/local/pgsql/lib</programlisting>
    Remplacez <literal>/usr/local/pgsql/lib</literal> par la valeur donnée à
    <option><literal>--libdir</literal></option> dans l'<xref linkend="configure"/>.
    Vous pouvez mettre ces commandes dans un script de démarrage tel
    que <filename>/etc/profile</filename> ou <filename>~/.bash_profile</filename>. Certaines
    informations pertinentes au sujet de mises en garde associées à cette
    méthode peuvent être trouvées sur
    <ulink url="http://www.visi.com/~barr/ldpath.html"></ulink>.
   </para>

   <para>
    Sur certains systèmes, il peut être préférable de renseigner la
    variable d'environnement
    <envar>LD_RUN_PATH</envar> <emphasis>avant</emphasis>
    la compilation.
   </para>

   <para>
    Avec <systemitem class="osname">Cygwin</systemitem>, placez le répertoire
    des bibliothèques dans la variable <envar>PATH</envar> ou déplacez les
    fichiers <filename>.dll</filename> dans le répertoire
    <filename>bin</filename>.
   </para>

   <para>
    En cas de doute, référez-vous aux pages de man de votre système (peut-être
    <command>ld.so</command> ou <command>rld</command>). Si vous avez
    ultérieurement un message tel que
<screen>psql: error in loading shared libraries
libpq.so.2.1: cannot open shared object file: No such file or directory</screen>
    alors cette étape est vraiment nécessaire. Faites-y attention.
   </para>

   <para>
    <indexterm>
     <primary>ldconfig</primary>
    </indexterm>
    Si votre système d'exploitation est 
    <systemitem class="osname">BSD/OS</systemitem>, <systemitem
    class="osname">Linux</systemitem> ou <systemitem class="osname">SunOS 4</systemitem>
    et que vous avez les accès de superutilisateur, vous pouvez exécuter&nbsp;:
<programlisting>/sbin/ldconfig /usr/local/pgsql/lib</programlisting>
    (ou le répertoire équivalent) après l'installation pour permettre à
    l'éditeur de liens de trouver les bibliothèques partagées plus rapidement.
    Référez-vous aux pages man portant sur <command>ldconfig</command> pour plus
    d'informations. Pour les systèmes d'exploitation <systemitem
    class="osname">FreeBSD</systemitem>, <systemitem
    class="osname">NetBSD</systemitem> et <systemitem class="osname">OpenBSD</systemitem>,
    la commande est&nbsp;:
<programlisting>/sbin/ldconfig -m /usr/local/pgsql/lib</programlisting>
    Les autres systèmes d'exploitation ne sont pas connus pour avoir de
    commande équivalente.
   </para>
  </sect2>

  <sect2>
   <title>Variables d'environnement</title>

   <indexterm>
    <primary><envar>PATH</envar></primary>
   </indexterm>

   <para>
    Si l'installation a été réalisée dans
    <filename>/usr/local/pgsql</filename> ou à un autre endroit qui n'est pas dans les
    répertoires contenant les exécutables par défaut, vous devez ajouter
    <filename>/usr/local/pgsql/bin</filename> (ou le répertoire fourni à
    <option><literal>--bindir</literal></option> au moment de l'<xref linkend="configure"/>)
    dans votre <envar>PATH</envar>. Techniquement, ce n'est pas une obligation mais
    cela rendra l'utilisation de <productname>PostgreSQL</productname> plus confortable.
   </para>

   <para>
    Pour ce faire, ajoutez ce qui suit dans le fichier d'initialisation de
    votre shell, par exemple
    <filename>~/.bash_profile</filename> (ou <filename>/etc/profile</filename>, si vous voulez
    que tous les utilisateurs l'aient)&nbsp;:
<programlisting>PATH=/usr/local/pgsql/bin:$PATH
export PATH</programlisting>
    Si vous utilisez le <command>csh</command> ou le <command>tcsh</command>, alors utilisez
    la commande&nbsp;:
<programlisting>set path = ( /usr/local/pgsql/bin $path )</programlisting>
   </para>

   <para>
    <indexterm>
     <primary><envar>MANPATH</envar></primary>
    </indexterm>
    Pour que votre système trouve la documentation <application>man</application>,
    il vous faut ajouter des lignes telles que celles qui suivent à votre
    fichier d'initialisation du shell, à moins que vous installiez ces pages
    dans un répertoire où elles sont mises normalement&nbsp;:
<programlisting>MANPATH=/usr/local/pgsql/man:$MANPATH
export MANPATH</programlisting>
   </para>

   <para>
    Les variables d'environnement <envar>PGHOST</envar> et <envar>PGPORT</envar>
    indiquent aux applications clientes l'hôte et le port du serveur de base.
    Elles surchargent les valeurs utilisées lors de la compilation. Si vous
    exécutez des applications clientes à distance, alors c'est plus pratique si
    tous les utilisateurs peuvent paramétrer <envar>PGHOST</envar>. Ce n'est pas une
    obligation, cependant, la configuration peut être communiquée via les 
    options de lignes de commande à la plupart des programmes clients.
   </para>
  </sect2>
 </sect1>

 <sect1 id="install-getting-started">
  <title>Démarrer</title>

  <para>
   La suite est un résumé rapide de la façon de faire fonctionner
   <productname>PostgreSQL</productname> une fois l'installation terminée. La
   documentation principale contient plus d'informations.
  </para>

  <procedure>
   <step>
    <para>
     Créer un compte utilisateur pour le serveur <productname>PostgreSQL</productname>.
     C'est cet utilisateur qui fera démarrer le serveur. Pour un usage
     en production, vous devez créer un compte sans droits
     (<quote>postgres</quote> est habituellement utilisé). Si vous n'avez pas les
     accès superutilisateur ou si vous voulez juste regarder, votre propre 
     compte utilisateur est suffisant. Mais, utiliser le compte superutilisateur
     pour démarrer le serveur est risqué (au point de vue sécurité) et ne
     fonctionnera pas.
<screen><userinput>adduser postgres</userinput></screen>
    </para>
   </step>

   <step>
    <para>
     Faire l'installation de la base de données avec la commande
     <command>initdb</command>. Pour exécuter <command>initdb</command>, vous devez être
     connecté sur votre serveur avec le compte <productname>PostgreSQL</productname>.
     Cela ne fonctionnera pas avec le compte superutilisateur.
<screen>root# <userinput>mkdir /usr/local/pgsql/data</userinput>
root# <userinput>chown postgres /usr/local/pgsql/data</userinput>
root# <userinput>su - postgres</userinput>
postgres$ <userinput>/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data</userinput></screen>
    </para>

    <para>
     L'option <option>-D</option> spécifie le répertoire où les données seront
     stockées. Vous pouvez utiliser le chemin que vous voulez, il n'a pas à
     être sous le répertoire de l'installation. Avant de lancer
     <command>initdb</command>, assurez-vous que le compte serveur peut écrire dans ce
     répertoire (ou le créer s'il n'existe pas), comme c'est montré ici.
    </para>
   </step>

   <step>
    <para>
     À ce moment, si vous n'utilisez pas l'option <literal>-A</literal> de
     <command>initdb</command>, vous devez modifier le fichier
     <filename>pg_hba.conf</filename> pour contrôler les accès en local du
     serveur avant de le lancer. La valeur par défaut est de faire confiance
     à tous les utilisateurs locaux.
    </para>
   </step>

   <step>
    <para>
     L'étape <command>initdb</command> précédente vous a indiqué comment démarrer le serveur de base.
     Maintenant, faites-le. La commande doit ressembler à&nbsp;:
<programlisting>/usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data</programlisting>
     Cela démarrera le serveur en avant-plan. Pour le mettre en arrière plan
     faites quelque chose comme&nbsp;:
<programlisting>nohup /usr/local/pgsql/bin/postgres -D /usr/local/pgsql/data \
    &lt;/dev/null &gt;&gt;server.log 2&gt;&amp;1 &lt;/dev/null &amp;</programlisting>
    </para>

    <para>
     Pour arrêter le serveur fonctionnant en arrière-plan, vous pouvez
     saisir&nbsp;:
<programlisting>kill `cat /usr/local/pgsql/data/postmaster.pid`</programlisting>
    </para>
   </step>

   <step>
    <para>
     Créer une base de données&nbsp;:
<screen><userinput>createdb testdb</userinput></screen>
     Ensuite, entrez
<screen><userinput>psql testdb</userinput></screen>
     pour vous connecter à la base. À l'invite, vous pouvez saisir des
     commandes SQL et commencer l'expérimentation.
    </para>
   </step>
  </procedure>
 </sect1>

 <sect1 id="install-whatnow">
  <title>Et maintenant&nbsp;?</title>

  <para>
   <itemizedlist>
    <listitem>
     <para>
      La distribution de <productname>PostgreSQL</productname> comprend un 
      document compréhensible que vous devriez lire de temps en temps.
      Après l'installation, le document peut être lu en faisant pointer
      votre navigateur internet sur
      <filename>/usr/local/pgsql/doc/html/index.html</filename>, excepté si vous avez
      changé les répertoires d'installation.
     </para>

     <para>
      Le premier chapitre de la documentation est un tutoriel qui devrait être
      votre première lecture si vous êtes nouveau dans le monde des bases
      de données <acronym>SQL</acronym>. Si vous êtes familier avec les concepts des
      bases de données, alors vous voudrez commencer avec la partie
      administration du serveur qui contient des informations sur la façon de
      mettre en place le serveur de base, les bases des utilisateurs et
      l'authentification.
     </para>
    </listitem>

    <listitem>
     <para>
      Normalement, vous voudrez faire en sorte que le serveur de base démarre
      automatiquement au boot de la machine. Pour ce faire, quelques
      suggestions se trouvent dans la documentation.
     </para>
    </listitem>

    <listitem>
     <para>
      Faire les tests de régression sur le serveur installé (en utilisant
      <command>gmake installcheck</command>). Si vous ne l'avez pas fait auparavant,
      vous devriez définitivement le faire maintenant. C'est aussi expliqué
      dans la documentation.
     </para>
    </listitem>

    <listitem>
     <para>
      Par défaut, <productname>PostgreSQL</productname> est configuré pour fonctionner sur
      un matériel mimimal. Ceci lui permet de fonctionner sur pratiquement
      toutes les configurations matérielles. Néanmoins, la configuration par
      défaut n'est pas conçue pour des performances optimales. Pour disposer des
      meilleures performances, plusieurs paramètres serveurs doivent être
      ajustés, les deux plus communs étant <varname>shared_buffers</varname> et
      <varname>work_mem</varname>.
      Les autres paramètres mentionnés dans la documentation affectent aussi les
      performances.
     </para>
    </listitem>
   </itemizedlist>
  </para>

 </sect1>

 <sect1 id="supported-platforms">
  <title>Plateformes supportées</title>

  <para>
   Une platforme (c'est-à-dire une combinaison d'un processeur et d'un système
   d'exploitation) est considérée supportée par la communauté de développeur de
   <productname>PostgreSQL</productname> si le code permet le fonctionnement
   sur cette plateforme et que la construction et les tests de regréssion
   ont été récemment vérifiés sur cette plateforme. Actuellement, la plupart
   des tests de compatibilité de plateforme se fait automatiquement par des
   machines de tests dans la <ulink
   url="http://buildfarm.postgresql.org/">ferme de construction de
   PostgreSQL</ulink>. Si vous êtes intéressés par l'utilisation de
   <productname>PostgreSQL</productname> sur une plateforme qui n'est pas
   représentée dans la ferme de construction, mais pour laquelle le code
   fonctionne ou peut fonctionner, nous vous suggérons fortement de construction
   une machine qui sera membre de la ferme pour que la compatibilité puisse
   être assurée dans la durée.
  </para>

  <para>
   En général, <productname>PostgreSQL</productname> doit fonctionner sur
   les architectures processeur suivantes&nbsp;: x86, x86_64, IA64, PowerPC,
   PowerPC 64, S/390, S/390x, Sparc, Sparc 64, Alpha, ARM, MIPS, MIPSEL, M68K
   et PA-RISC. Un support du code existe pour M32R, NS32K et VAX mais ces
   architectures n'ont pas été testées récemment à notre connaissance. Il est
   souvent possible de construire <productname>PostgreSQL</productname> sur
   un type de processeur non supporté en précisant
   <option>--disable-spinlocks</option>. Cependant, les performance en
   souffriront.
  </para>

  <para>
   <productname>PostgreSQL</productname> doit fonctionner sur les systèmes
   d'exploitation suivants&nbsp;: Linux (toutes les distributions récentes),
   Windows (Win2000 SP4 et ultérieure), FreeBSD, OpenBSD, NetBSD, Mac OS X,
   AIX, HP/UX, IRIX, Solaris, Tru64 Unix et UnixWare. D'autres systèmes style
   Unix peuvent aussi fonctionner mais n'ont pas été récemment testés. Dans
   la plupart des cas, toutes les architectures processeurs supportées par
   une système d'exploitation données fonctionneront. Cherchez dans le
   répertoire <filename>doc/</filename> de la distribution des sources pour
   vérifier s'il existe une FAQ spécifique à votre système d'exploitation,
   tout particulièrement dans le cas d'un vieux système.
  </para>

  <para>
   Si vous avez des problèmes d'installation sur une plateforme qui est connu
   comme étant supportée d'après les récents résultats de la ferme de
   construction, merci de rapporter cette information à
   <email>pgsql-bugs@postgresql.org</email>. Si vous êtes intéressé pour porter
   <productname>PostgreSQL</productname> sur une nouvelle plateforme,
   <email>pgsql-hackers@postgresql.org</email> est l'endroit approprié pour en
   discuter.
  </para>
 </sect1>

</chapter>
