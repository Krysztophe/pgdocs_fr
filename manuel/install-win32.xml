<?xml version="1.0" encoding="UTF-8"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/install-win32.sgml,v 1.7 2005/09/15 07:03:18 guillaume Exp $
-->

<chapter id="install-win32">
 <title>Installation sur <productname>Windows</productname> du seul client</title>

 <indexterm>
  <primary>installation</primary>
  <secondary>sur Windows</secondary>
 </indexterm>

 <para>
  Alors qu'une installation complète de <productname>PostgreSQL</productname>
  ne peut être réalisée qu'avec <productname>MinGW</productname> ou
  <productname>Cygwin</productname>, la bibliothèque cliente en C 
  (<application>libpq</application>) et le terminal interactif 
  (<application>psql</application>) peuvent être compilés en utilisant
  d'autres outils Windows. Les fichiers de construction (makefiles) pour
  <productname>Microsoft Visual C++</productname> et 
  <productname>Borland C++</productname> sont inclus dans la
  distribution source. Il doit être possible de compiler
  les bibliothèques manuellement dans d'autres configurations.
 </para>

 <tip>
  <para>
   L'utilisation de <productname>Microsoft Visual C++</productname> ou 
   <productname>Borland C++</productname> est préférée. Dans ce cas, on pourra
   se référer au <xref linkend="installation"/>.
  </para>
 </tip>

 <para>
  Pour compiler tous les utilitaires disponibles pour 
  <productname>Windows</productname> à l'aide de <productname>Microsoft Visual
  C++</productname>, on se placera dans le répertoire <filename>src</filename> 
  pour saisir la commande&nbsp;:
<screen><userinput>nmake /f win32.mak</userinput></screen>
   Pour cela, <productname>Visual C++</productname> doit être indiqué dans la
   variable d'environnement des répertoires accessibles (path).
 </para>

 <para>
  Pour la construction avec <productname>Borland
  C++</productname>, on se placera dans le répertoire <filename>src</filename>
  pour saisir la commande&nbsp;:
<screen><userinput>make -N -DCFG=Release /f bcc32.mak</userinput></screen>
 </para>

 <para>
  Les fichiers suivants seront produits&nbsp;:

  <variablelist>
   <varlistentry>
    <term><filename>interfaces\libpq\Release\libpq.dll</filename></term>
    <listitem>
     <para>
      la bibliothèque client&nbsp;;
     </para>
    </listitem>
   </varlistentry>
  
   <varlistentry>
    <term><filename>interfaces\libpq\Release\libpqdll.lib</filename></term>
    <listitem>
     <para>
      la bibliothèque d'import nécessaire à l'édition de liens avec
      <filename>libpq.dll</filename>&nbsp;
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>interfaces\libpq\Release\libpq.lib</filename></term>
    <listitem>
     <para>
       la version statique de la bibliothèque d'interface client&nbsp;;
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><filename>bin\psql\Release\psql.exe</filename></term>
    <listitem>
     <para>
      le terminal interactif de <productname>PostgreSQL</productname>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>

 <para>
  Habituellement, vous n'avez pas besoin d'installer les fichiers client. Vous
  devez placer le fichier <filename>libpq.dll</filename> dans le même répertoire
  que vos applications (.EXE). Si ce n'est pas possible, vous pouvez
  l'installer dans le répertoire <filename>WINNT\SYSTEM32</filename> ou dans
  <filename>WINDOWS\SYSTEM</filename> sur des systèmes Windows 95/98/ME. S'il
  est installé par un programme, ce dernier doit en contrôler au préalable la
  ressource <symbol>VERSIONINFO</symbol> afin d'éviter l'écrasement d'une
  version plus récente.
 </para>

 <para>
  Si l'on prévoit de développer sur cette machine une application qui utilise 
  <application>libpq</application>, il faut ajouter les
  sous-répertoires <filename>src\include</filename> et 
  <filename>src\interfaces\libpq</filename> dans le
  chemin d'inclusion des sources de votre compilateur.
 </para>

 <para>
  Pour utiliser la bibliothèque, il faut ajouter 
  <filename>libpqdll.lib</filename> au projet (sous Visual C++,
  clic droit sur le projet et choisir ajouter).
 </para>

 <para>
  Des outils de développement gratuits de <productname>Microsoft</productname>
  se trouvent sur
  <ulink url="http://msdn.microsoft.com/visualc/vctoolkit2003/"></ulink>.
  La bibliothèque <filename>MSVCRT.lib</filename> du SDK sera également nécessaire
  (<ulink url="http://www.microsoft.com/msdownload/platformsdk/sdkupdate/"></ulink>).
  L'ensemble <application>.NET</application> est aussi disponible sur
  <ulink url="http://msdn.microsoft.com/netframework/downloads/updates/default.aspx"></ulink>.
  Une fois installés, les binaires doivent être dans PATH
  et <literal>/lib:&lt;LIBPATH&gt;</literal> peut être nécessaire
  pour pointer vers <filename>MSVCRT.lib</filename>.
  </para>
  <para>
  Des outils gratuits de compilation
  pour <productname>Borland C++</productname> peuvent être téléchargés à partir de
  <ulink url="http://www.borland.com/products/downloads/download_cbuilder.html#"></ulink>
  et nécessitent une configuration similaire.
 </para>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
