<?xml version="1.0" encoding="UTF-8"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/comment.sgml,v 1.10 2005/09/15 07:03:25 guillaume Exp $
PostgreSQL documentation
-->
<!-- SAS 20060616 -->

<refentry id="sql-comment">
 <refmeta>
  <refentrytitle id="sql-comment-title">COMMENT</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>COMMENT</refname>
  <refpurpose>Définir ou modifier le commentaire associé à un objet</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>COMMENT ON
{
  TABLE <replaceable class="parameter">nom_objet</replaceable> |
  COLUMN <replaceable class="parameter">nom_table</replaceable>.<replaceable class="parameter">nom_colonne</replaceable> |
  AGGREGATE <replaceable class="parameter">nom_agrégat</replaceable> (<replaceable class="parameter">type_agrégat</replaceable>) |
  CAST (<replaceable>typesource</replaceable> AS <replaceable>typecible</replaceable>) |
  CONSTRAINT <replaceable class="parameter">nom_contrainte</replaceable> ON <replaceable class="parameter">nom_table</replaceable> |
  CONVERSION <replaceable class="parameter">nom_objet</replaceable> |
  DATABASE <replaceable class="parameter">nom_objet</replaceable> |
  DOMAIN <replaceable class="parameter">nom_objet</replaceable> |
  FUNCTION <replaceable class="parameter">nom_fonction</replaceable> ( [ [ <replaceable class="parameter">modearg</replaceable> ] [ <replaceable class="parameter">nomarg</replaceable> ] <replaceable class="parameter">typearg</replaceable> [, ...] ] ) |
  INDEX <replaceable class="parameter">nom_objet</replaceable> |
  LARGE OBJECT <replaceable class="parameter">oid_large_objet</replaceable> |
  OPERATOR <replaceable class="parameter">op</replaceable> (<replaceable class="parameter">type_operande1</replaceable>, <replaceable class="parameter">type_operande2</replaceable>) |
  OPERATOR CLASS <replaceable class="parameter">nom_objet</replaceable> USING <replaceable class="parameter">méthode_indexage</replaceable> |
  RULE <replaceable class="parameter">nom_rêgle</replaceable> ON <replaceable class="parameter">nom_table</replaceable> |
  SCHEMA <replaceable class="parameter">nom_objet</replaceable> |
  SEQUENCE <replaceable class="parameter">nom_objet</replaceable> |
  TRIGGER <replaceable class="parameter">nom_déclencheur</replaceable> ON <replaceable class="parameter">nom_table</replaceable> |
  TYPE <replaceable class="parameter">nom_objet</replaceable> |
  VIEW <replaceable class="parameter">nom_objet</replaceable>
} IS <replaceable class="parameter">'texte'</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-comment">
   <primary>COMMENT</primary>
  </indexterm>

  <para>
   <command>COMMENT</command> stocke un commentaire sur un objet de la base de
    données.
  </para>

  <para>
    Pour modifier un commentaire, il suffit de lancer une nouvelle commande
    <command>COMMENT</command> portant sur le même objet. Une seule chaîne de commentaire est
    stockée pour chaque objet. Pour supprimer un commentaire, 
    <literal>NULL</literal> est écrit à la place de la chaîne de texte. Les commentaires
    sont automatiquement supprimés avec l'objet.
  </para>
  
  <para>
    Les commentaires peuvent être facilement récupérés avec les
    commandes <application>psql</application> <command>\dd</command>,
    <command>\d+</command> et <command>\l+</command>. D'autres interfaces
    utilisateur de récupération des commentaires peuvent être
    construites au-dessus des fonctions intégrées qu'utilise
    <application>psql</application>, à savoir <function>obj_description</function> et
    <function>col_description</function>. (Voir <xref linkend="functions-info-comment-table"/>.)
  </para>
 
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom_objet</replaceable></term>
    <term><replaceable class="parameter">nom_table.nom_colonne</replaceable></term>
    <term><replaceable class="parameter">nom_agrégat</replaceable></term>
    <term><replaceable class="parameter">nom_contrainte</replaceable></term>
    <term><replaceable class="parameter">nom_fonction</replaceable></term>
    <term><replaceable class="parameter">op</replaceable></term>
    <term><replaceable class="parameter">nom_rêgle</replaceable></term>
    <term><replaceable class="parameter">nom_déclencheur</replaceable></term>
    <listitem>
     <para>
      Le nom de l'objet à commenter. Les noms des tables, agrégats, domaines,
      fonctions, index, opérateurs, classes d'opérateurs, séquences,
      types et vues peuvent être qualifiés du nom du schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_agrégat</replaceable></term>
    <listitem>
     <para>
      Le type de données de l'argument de la fonction d'agrégat ou
      <literal>*</literal> si la fonction accepte tout type de données.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
     <term><replaceable>typesource</replaceable></term>
     <listitem>
      <para>
       Le nom du type de donnée source du transtypage.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>typecible</replaceable></term>
     <listitem>
      <para>
       Le nom du type de données cible du transtypage.
      </para>
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">modearg</replaceable></term>

    <listitem>
     <para>
      Le mode d'un argument de la fonction&nbsp;: <literal>IN</literal>, 
      <literal>OUT</literal> ou <literal>INOUT</literal>. En cas d'omission, la valeur par
      défaut est <literal>IN</literal>. <command>COMMENT ON FUNCTION</command>
      ne tient pas compte, à l'heure actuelle, des arguments
      <literal>OUT</literal> car seuls ceux en entrée sont nécessaires pour
      déterminer l'identité de la fonction. Lister les
      arguments <literal>IN</literal> et <literal>INOUT</literal> est ainsi suffisant.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nomarg</replaceable></term>

    <listitem>
     <para>
      Le nom d'un argument de la fonction.
      <command>COMMENT ON FUNCTION</command> ne tient pas compte, à l'heure actuelle, 
      des noms des arguments, seuls les types de données des
      arguments étant nécessaires pour déterminer l'identité de la fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">typearg</replaceable></term>

    <listitem>
     <para>
      Les types de données des arguments de la fonction (éventuellement
      qualifiés du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">oid_objet_large</replaceable></term>
    <listitem>
     <para>
      L'OID de l'objet large.
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
     <term><literal>PROCEDURAL</literal></term>

     <listitem>
      <para>
       Inutilisé.
      </para>
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">texte</replaceable></term>
    <listitem>
     <para>
      Le nouveau commentaire, rédigé sous la forme d'une chaîne littérale&nbsp;; ou
      <literal>NULL</literal> pour supprimer le commentaire.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Un commentaire de base de données ne peut être créé que dans cette
   base et n'est visible que depuis cette base.
  </para>

  <para>
   Il n'existe pas de mécanisme de sécurité pour les commentaires&nbsp;:
   tout utilisateur connecté à une base de données peut voir les
   commentaires de tous les objets de la base (mais seuls les
   superutilisateurs peuvent modifier les commentaires des objets qu'ils
   ne possèdent pas). Il est de ce fait judicieux de ne pas placer d'informations critiques
   dans les commentaires.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Attacher un commentaire à la table <literal>matable</literal>&nbsp;:

<programlisting>COMMENT ON TABLE matable IS 'Ceci est ma table.';
</programlisting>

   Suppression du commentaire précédent&nbsp;:

<programlisting>COMMENT ON TABLE matable IS NULL;
</programlisting>
  </para>

  <para>
   Quelques exemples supplémentaires&nbsp;:

<programlisting>COMMENT ON AGGREGATE mon_agregat (double precision) IS 'Calcul d'une variance type';
COMMENT ON CAST (text AS int4) IS 'Transtypage de text en int4';
COMMENT ON COLUMN ma_table.ma_colonne IS 'Numéro employé';
COMMENT ON CONVERSION ma_conv IS 'Conversion vers UTF8';
COMMENT ON DATABASE ma_base IS 'Base de données de développement';
COMMENT ON DOMAIN mon_domaine IS 'Domaine des adresses de courriel';
COMMENT ON FUNCTION ma_fonction (timestamp) IS 'Retourner des chiffres romains';
COMMENT ON INDEX mon_index IS 'S'assurer de l'unicité de l'ID de l'employé';
COMMENT ON LANGUAGE plpython IS 'Support de Python pour les procedures stockées';
COMMENT ON LARGE OBJECT 346344 IS 'Document de planification';
COMMENT ON OPERATOR ^ (text, text) IS 'L\'intersection de deux textes';
COMMENT ON OPERATOR - (NONE, text) IS 'Opérateur de préfixe sur un texte';
COMMENT ON OPERATOR CLASS int4ops USING btree IS 'Opérateurs d'entiers sur quatre octets pour les index btrees';
COMMENT ON RULE ma_regle ON my_table IS 'Tracer les mises à jour des enregistrements d\'employé';
COMMENT ON SCHEMA mon_schema IS 'Données du département';
COMMENT ON SEQUENCE ma_sequence IS 'Utilisé pour engendrer des clés primaires';
COMMENT ON TABLE mon_schema.ma_table IS 'Informations sur les employés';
COMMENT ON TRIGGER mon_declencheur ON my_table IS 'Utilisé pour RI';
COMMENT ON TYPE complex IS 'Type de données pour les nombres complexes';
COMMENT ON VIEW ma_vue IS 'Vue des coûts départementaux';
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'existe pas de commande <command>COMMENT</command> dans le standard SQL.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
