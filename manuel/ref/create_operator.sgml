<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/create_operator.sgml,v 1.10 2005/07/15 06:14:31 guillaume Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATEOPERATOR">
 <refmeta>
  <refentrytitle id="sql-createoperator-title">CREATE OPERATOR</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE OPERATOR</refname>
  <refpurpose>définit un nouvel opérateur</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createoperator">
  <primary>CREATE OPERATOR</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE OPERATOR <replaceable>nom</replaceable> (
    PROCEDURE = <replaceable class="parameter">nomfonc</replaceable>
    [, LEFTARG = <replaceable class="parameter">typegauche</replaceable> ]
    [, RIGHTARG = <replaceable class="parameter">typedroit</replaceable> ]
    [, COMMUTATOR = <replaceable class="parameter">op_com</replaceable> ]
    [, NEGATOR = <replaceable class="parameter">op_neg</replaceable> ]
    [, RESTRICT = <replaceable class="parameter">proc_res</replaceable> ]
    [, JOIN = <replaceable class="parameter">proc_join</replaceable> ]
    [, HASHES ] [, MERGES ]
    [, SORT1 = <replaceable class="parameter">op_tri_gauche</replaceable> ]
    [, SORT2 = <replaceable class="parameter">op_tri_droit</replaceable> ]
    [, LTCMP = <replaceable class="parameter">op_inf</replaceable> ]
    [, GTCMP = <replaceable class="parameter">op_sup</replaceable> ]
)
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE OPERATOR</command> définit un nouvel opérateur,
   <replaceable class="parameter">nom</replaceable>. L'utilisateur qui définit
   un opérateur en devient son propriétaire. Si un nom de schéma est donné,
   alors l'opérateur est créé dans le schéma spécifié. Sinon, il est créé dans
   le schéma courant.
  </para>

  <para>
   Le nom de l'opérateur est une séquence d'au moins <symbol>NAMEDATALEN</>-1
   (63 par défaut) caractères de la liste suivante&nbsp;:
<literallayout>
+ - * / &lt; &gt; = ~ ! @ # % ^ &amp; | ` ?
</literallayout>

   Il existe quelques restrictions dans le choix du nom&nbsp;:
   <itemizedlist>
    <listitem>
     <para>
     <literal>--</literal> et <literal>/*</literal> ne peuvent pas apparaître
     n'importe où dans le nom d'un opérateur car ils sont pris pour le début
     d'un commentaire.
     </para>
    </listitem>
    <listitem>
     <para>
     Un nom d'opérateur multicaractères ne peut pas finir avec
     <literal>+</literal> ou <literal>-</literal> sauf si le nom contient aussi
     au moins un de ces caractères&nbsp;:
<literallayout>
~ ! @ # % ^ &amp; | ` ?
</literallayout>
     Par exemple, <literal>@-</literal> est un nom d'opérateur autorisé mais
     <literal>*-</literal> ne l'est pas. Cette restriction permet à
     <productname>PostgreSQL</productname> d'analyser les commandes compatibles
     SQL sans nécessiter d'espaces entre les jetons.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   L'opérateur <literal>!=</literal> correspond à
   <literal>&lt;&gt;</literal> en entrée, donc ces deux noms sont toujours
   équivalents.
  </para>

  <para>
   Au moins un de <literal>LEFTARG</> et <literal>RIGHTARG</> doit être défini.
   Pour les opérateurs binaires, les deux doivent être définis. Pour les
   opérateurs unaires droits, seul <literal>LEFTARG</> devrait être défini
   alors que pour les opérateurs unaires gauches seul <literal>RIGHTARG</>
   devrait être défini.
  </para>

  <para>
   La procédure <replaceable class="parameter">nomfonc</replaceable> doit être
   été précédemment définie en utilisant <command>CREATE FUNCTION</command> et
   doit accepter le bon nombre d'arguments (soit un ou deux) des types indiqués.
  </para>

  <para>
   Les autres clauses spécifient des clauses optionnelles d'optimisation
   d'opérateur. Leur signification est détaillée dans <xref
   linkend="xoper-optimization">.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nom</replaceable></term>
      <listitem>
       <para>
	Le nom de l'opérateur à définir. Voir ci-dessus pour les caractères
	autorisés. Le nom peut être qualifié avec le nom du schéma, par
	exemple <literal>CREATE OPERATOR monschema.+ (...)</>. Sinon,
	l'opérateur est créé dans le schéma courant. Deux opérateurs dans le
	même schéma peuvent avoir le même nom s'ils opérent sur des types de
	données différents. Ceci est appelé le <firstterm>surchargement</>.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nomfonc</replaceable></term>
      <listitem>
       <para>
	La fonction utilisée pour implémenter cet opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">typegauche</replaceable></term>
      <listitem>
       <para>
	Le type de données de l'opérande gauche de l'opérateur, s'il existe.
	Cette option sera omise pour un opérateur unaire gauche.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">typedroit</replaceable></term>
      <listitem>
       <para>
	Le type de données de l'opérande droit de l'opérateur, s'il existe.
	Cette option sera omise pour un opérateur unaire droit.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">op_com</replaceable></term>
      <listitem>
       <para>
	Le commutateur de cet opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">op_neg</replaceable></term>
      <listitem>
       <para>
	La négation de cet opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">proc_res</replaceable></term>
      <listitem>
       <para>
	La fonction d'estimation de la sélectivité restreinte pour cet
	opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">proc_join</replaceable></term>
      <listitem>
       <para>
	La fonction d'estimation de la sélectivité de jointure pour cet
	opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>HASHES</literal></term>
      <listitem>
       <para>
       Indique que cet opérateur peut supporter une jointure de découpage.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><literal>MERGES</literal></term>
      <listitem>
       <para>
       Indique que cet opérateur peut supporter une jointure d'assemblage.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">op_tri_gauche</replaceable></term>
      <listitem>
       <para>
	Si cet opérateur peut supporter une jointure d'assemblage,
	l'opérateur inférieur qui trie le type de données à gauche de cet
	opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">op_tri_droit</replaceable></term>
      <listitem>
       <para>
	Si cet opérateur peut supporter une jointure d'assemblage,
	l'opérateur supérieur qui trie le type de données à droite de cet
	opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">op_inf</replaceable></term>
      <listitem>
       <para>
	Si cet opérateur peut supporter une jointure d'assemblage,
	l'opérateur inférieur qui compare les types de données de cet
	opérateur.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">op_sup</replaceable></term>
      <listitem>
       <para>
	Si cet opérateur peut supporter une jointure d'assemblage,
	l'opérateur supérieur qui compare les types de données de cet
	opérateur.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>

  <para>
   Pour donner un nom d'opérateur qualifié d'un schéma dans <replaceable
   class="parameter">op_com</replaceable> ou les autres arguments optionnels,
   utilisez la syntaxe <literal>OPERATOR()</> par exemple
<programlisting>
COMMUTATOR = OPERATOR(mon_schema.===) ,
</programlisting>  
  </para>
 </refsect1>
  
 <refsect1>
  <title>Notes</title>

  <para>
   Référez-vous à <xref linkend="xoper"> pour plus d'informations.
  </para>

  <para>
   Utilisez <xref linkend="sql-dropoperator"
   endterm="sql-dropoperator-title"> pour supprimer les opérateurs
   définis par l'utilisateur sur une base de données. Utilisez <xref
   linkend="sql-alteroperator" endterm="sql-alteroperator-title"> pour modifier
   les opérateurs dans une base de données.
  </para>
 </refsect1>
  
 <refsect1>
  <title>Exemples</title>

  <para>
   La commande suivante définit un nouvel opérateur,
   <quote>area-equality</quote>, pour le type de données <type>box</type>&nbsp;:
<programlisting>
CREATE OPERATOR === (
    LEFTARG = box,
    RIGHTARG = box,
    PROCEDURE = area_equal_procedure,
    COMMUTATOR = ===,
    NEGATOR = !==,
    RESTRICT = area_restriction_procedure,
    JOIN = area_join_procedure,
    HASHES,
    SORT1 = &lt;&lt;&lt;,
    SORT2 = &lt;&lt;&lt;
    -- Since sort operators were given, MERGES is implied.
    -- LTCMP and GTCMP are assumed to be &lt; and &gt; respectively
);
</programlisting>  
  </para>
 </refsect1>
 
 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE OPERATOR</command> est une extension
   <productname>PostgreSQL</productname>. Il n'existe pas d'opérateurs définis
   par l'utilisateur dans le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteroperator"
    endterm="sql-alteroperator-title"></member>
   <member><xref linkend="sql-createopclass"
    endterm="sql-createopclass-title"></member>
   <member><xref linkend="sql-dropoperator"
    endterm="sql-dropoperator-title"></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
