
<sect1 id="pageinspect">
 <title>pageinspect</title>
 
 <indexterm zone="pageinspect">
  <primary>pageinspect</primary>
 </indexterm>

 <para>
  Les fonctions de ce module vous permettent d'inspecter le contenu des
  pages de données. Ce module est bas niveau, son intérêt est surtout flagrant
  pour les développeurs ayant besoin de déboguer leurs modifications du
  moteur.
 </para>

 <sect2>
  <title>Fonctions fournies</title>

  <itemizedlist>
   <listitem>
    <para>
     <literal>get_raw_page</literal> lit un bloc de la table nommée et
     renvoie une copie dans un champ de type bytea. Ceci permet d'avoir une
     copie cohérente du bloc. L'utilisation de cette fonction est restreinte
     aux super-utilisateurs.
    </para>
   </listitem>

   <listitem>
    <para>
     <literal>page_header</literal> affiche les champs communs aux pages
     heap et index de PostgreSQL. L'utilisation de cette fonction est
     restreinte aux super-utilisateurs.
    </para>
    <para>
     Une image de page obtenu avec <literal>get_raw_page</literal> doit
     être passé comme argument&nbsp;:
    </para>
    <programlisting>
        test=# SELECT * FROM page_header(get_raw_page('pg_class',0));
           lsn    | tli | flags | lower | upper | special | pagesize | version
        ----------+-----+-------+-------+-------+---------+----------+---------
         0/3C5614 |   1 |     1 |   216 |   256 |    8192 |     8192 |       4
        (1 row)
    </programlisting>
    <para>
     Les valeurs renvoyées correspondent aux champs de la structure
     PageHeaderData. Voir src/include/storage/bufpage.h pour les détails.
    </para>
   </listitem>

   <listitem>
    <para>
     <literal>heap_page_items</literal> affiche tous les pointeurs de ligne
     sur une page heap. Pour les pointeurs en cours d'utilisation, les
     en-têtes des lignes sont aussi affichées. Toutes les lignes sont
     affichées, qu'elles soient visibles ou non par l'image MVCC au moment
     de la copie de la page brute. L'utilisation de cette fonction est
     restreinte aux super-utilisateurs.
    </para>
    <para>
     Une image de page heap obtenue avec <literal>get_raw_page</literal> doit
     être passée comme argument&nbsp;:
    </para>
    <programlisting>
        test=# SELECT * FROM heap_page_items(get_raw_page('pg_class',0));
    </programlisting>
    <para>
     Voir src/include/storage/itemid.h et src/include/access/htup.h pour des
     explications sur les champs renvoyés.
    </para>
   </listitem>

   <listitem>
    <para>
     <literal>bt_metap()</literal> renvoie des informations sur la metapage
     d'un index btree&nbsp;:
    </para>
    <programlisting>
        test=> SELECT * FROM bt_metap('pg_cast_oid_index');
        -[ RECORD 1 ]-----
        magic     | 340322
        version   | 2
        root      | 1
        level     | 0
        fastroot  | 1
        fastlevel | 0
    </programlisting>
   </listitem>

   <listitem>
    <para>
     <literal>bt_page_stats()</literal> affiche des informations sur les pages
     btree seules&nbsp;:
    </para>
    <programlisting>
        test=> SELECT * FROM bt_page_stats('pg_cast_oid_index', 1);
        -[ RECORD 1 ]-+-----
        blkno         | 1
        type          | l
        live_items    | 256
        dead_items    | 0
        avg_item_size | 12
        page_size     | 8192
        free_size     | 4056
        btpo_prev     | 0
        btpo_next     | 0
        btpo          | 0
        btpo_flags    | 3
    </programlisting>
   </listitem>

   <listitem>
    <para>
     <literal>bt_page_items()</literal> renvoie des informations sur les
     éléments spécifiques des pages btree&nbsp;:
    </para>
    <programlisting>
        test=> SELECT * FROM bt_page_items('pg_cast_oid_index', 1);
         itemoffset |  ctid   | itemlen | nulls | vars |    data
        ------------+---------+---------+-------+------+-------------
                  1 | (0,1)   |      12 | f     | f    | 23 27 00 00
                  2 | (0,2)   |      12 | f     | f    | 24 27 00 00
                  3 | (0,3)   |      12 | f     | f    | 25 27 00 00
                  4 | (0,4)   |      12 | f     | f    | 26 27 00 00
                  5 | (0,5)   |      12 | f     | f    | 27 27 00 00
                  6 | (0,6)   |      12 | f     | f    | 28 27 00 00
                  7 | (0,7)   |      12 | f     | f    | 29 27 00 00
                  8 | (0,8)   |      12 | f     | f    | 2a 27 00 00
    </programlisting>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>

