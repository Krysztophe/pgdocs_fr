<!-- DerniËre modification
     le       $Date$
     par      $Author$
     rÈvision $Revision$ -->

<sect1 id="pgbench">
 <title>pgbench</title>

 <indexterm zone="pgbench">
  <primary>pgbench</primary>
 </indexterm>

 <para>
  <application>pgbench</application> est un programme simple qui ex√©cute un
  test de performances (appel√© <foreignphrase>benchmark</foreignphrase> en
  anglais) sur <productname>PostgreSQL</productname>.Il ex√©xute la m√™me
  s√©quence de commandes SQL de nombreuses fois, si possible dans plusieurs
  sessions en prarall√®le, puis calcule le taux de transaction moyen
  (transactions par seconde). Par d√©faut, <application>pgbench</application>
  teste un sc√©nario qui est vaguement bas√© sur TPC-B, impliquant cinq
  <command>SELECT</command>, <command>UPDATE</command> et
  <command>INSERT</command> par transaction. N√©anmoins il est facile de tester
  d'autres cas en √©crivant vos propres fichiers de transaction.
 </para>

 <para>
  Voici un exemple d'affichage de pgbench&nbsp;:

 <programlisting>
transaction type: TPC-B (sort of)
scaling factor: 10
number of clients: 10
number of transactions per client: 1000
number of transactions actually processed: 10000/10000
tps = 85.184871 (including connections establishing)
tps = 85.296346 (excluding connections establishing)
 </programlisting>

  Les quatre premi√®res lignes indiquent simplement certains des param√®tres
  les plus importants. La ligne suivant rapporte le nombre de transactions
  termin√©es et souhait√©es (le dernier √©tant juste le produit du nombre
  de clients avec le nombre de transactions)&nbsp;; ils doivent √™tre √©gaux
  sauf si un √©chec est arriv√© avant la fin. Les deux derni√®res lignes
  pr√©cisent le taux de transactions, avec et sans le temps de lancement
  de la session.
 </para>

 <sect2>
  <title>Aper√ßu</title>

  <para>
   Le test de transaction par d√©faut, ressemblant √† TPC-B, n√©cessite des tables
   particuli√®res qu'il faut cr√©er. <application>pgbench</application> doit
   √™tre appel√© avec l'option <literal>-i</literal> (initialisation) pour les
   cr√©er et les peupler. (Quand vous testez un script personnalis√©, vous n'avez
   pas besoin de cette √©tape, mais vous aurez besoin de configurer la base
   suivant vos tests.) L'initialisation ressemble √† ceci&nbsp;:

   <programlisting>
pgbench -i <optional> <replaceable>autres-options</replaceable> </optional> <replaceable>nom_base</replaceable>
   </programlisting>

   o√π <replaceable>dbname</replaceable> est le nom d'une base de donn√©es d√©j√†
   cr√©√©e et √† utiliser pour les tests. (Vous pourriez aussi avoir besoin des
   options <literal>-h</literal>, <literal>-p</literal>, et/ou
   <literal>-U</literal> pour sp√©cifier la fa√ßon de se connecter au serveur
   de bases de donn√©es.)
  </para>

  <caution>
   <para>
    <literal>pgbench -i</literal> cr√©e quatre tables&nbsp;: <structname>accounts</structname>,
    <structname>branches</structname>, <structname>history</structname> et
    <structname>tellers</structname>, d√©truisant toutes tables existantes de
    ce nom. Faites donc attention si vous poss√©dez des tables de m√™me nom&nbsp;!
   </para>
  </caution>

  <para>
   Avec un <quote>facteur d'√©chelle</quote> de 1, les tables contiennent
   initialement ce nombre de lignes&nbsp;:
  </para>
  <programlisting>
table           # de lignes
---------------------------
branches        1
tellers         10
accounts        100000
history         0
  </programlisting>
  <para>
   Vous pouvez augmenter le nombre de lignes en utilisant l'option
   <literal>-s</literal> (facteur d'√©chelle). L'option
   <literal>-F</literal> (facteur de remplissage) peut aussi √™tre utilis√©e
   √† ce moment.
  </para>

  <para>
   Une fois que vous avez ex√©cut√© la configuration, vous pouvez lancer votre
   test de performance avec une commande qui n'inclut pas l'option
   <literal>-i</literal>, c'est-√†-dire&nbsp;:

   <programlisting>
pgbench <optional> <replaceable>options</replaceable> </optional> <replaceable>nom_base</replaceable>
   </programlisting>

   Dans la plupart des cas, vous aurez besoin de quelques options pour que
   ce test soit r√©ellement int√©ressant. Les options les plus importantes
   sont <literal>-c</literal> (nombre de clients), <literal>-t</literal>
   (nombre de transactions) et <literal>-f</literal> (pour sp√©cifier un script
   personnalis√©). Voir ci-dessous pour une liste compl√®te.
  </para>

  <para>
   <xref linkend="pgbench-init-options"/> affiche les options qui sont
   utiles lors de l'initialisation de la base de donn√©es, alors que
   <xref linkend="pgbench-run-options"/> affiche celles qui sont utiles
   lors de l'ex√©cution des tests de performance et
   <xref linkend="pgbench-common-options"/> affiches les options utiles dans
   les deux cas.
  </para>

  <table id="pgbench-init-options">
   <title>Options d'initialisation de <application>pgbench</application></title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Option</entry>
      <entry>Description</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>-i</literal></entry>
      <entry>
       Requis pour le mode initialisation.
      </entry>
     </row>
     <row>
      <entry><literal>-s</literal> <replaceable>facteur_echelle</replaceable></entry>
      <entry>
       Multiplie le nombre de lignes g√©n√©r√©es par le facteur d'√©chelle. Par
       exemple, <literal>-s 100</literal> ajoute 10 millions de lignes dans
       la table <structname>accounts</structname>. La valeur par d√©faut est 1.
      </entry>
     </row>
     <row>
      <entry><literal>-F</literal> <replaceable>fecteur_remplissage</replaceable></entry>
      <entry>
       Cr√©e les tables <structname>accounts</structname>, <structname>tellers</structname> et
       <structname>branches</structname> avec le facteur de remplissage
       indiqu√©. La valeur par d√©faut est 100.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <table id="pgbench-run-options">
   <title>Options pour les tests de <application>pgbench</application></title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Option</entry>
      <entry>Description</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>-c</literal> <replaceable>clients</replaceable></entry>
      <entry>
       Nombre de clients simultan√©s, autrement dit le nombre de sessions en
       parall√®le. Par d√©faut, 1.
      </entry>
     </row>
     <row>
      <entry><literal>-t</literal> <replaceable>transactions</replaceable></entry>
      <entry>
       Nombre de transactions ex√©cut√©es par chaque client. Par d√©faut, 10.
      </entry>
     </row>
     <row>
      <entry><literal>-N</literal></entry>
      <entry>
       Ne met pas √† jour les tables <structname>tellers</structname> et
       <structname>branches</structname>. Ceci √©vitera les contentions des
       mises √† jour sur ces tables mais du coup pgbench ne supporte pas les
       transactions du style TPC-B.
      </entry>
     </row>
     <row>
      <entry><literal>-S</literal></entry>
      <entry>
       R√©alise uniquement des transactions de s√©lection au lieu du TPC-B.
      </entry>
     </row>
     <row>
      <entry><literal>-f</literal> <replaceable>nom_fichier</replaceable></entry>
      <entry>
       Lit le script de transaction √† partir de
       <replaceable>nom_fichier</replaceable>. Des explications
       d√©taill√©es appara√Ætront plus tard.
       <literal>-N</literal>, <literal>-S</literal> et <literal>-f</literal>
       ne sont pas utilisables ensemble.
      </entry>
     </row>
     <row>
      <entry><literal>-n</literal></entry>
      <entry>
       Aucun VACUUM n'est r√©alis√© pendant l'ex√©cution du test. Cette option
       est <emphasis>n√©cessaire</emphasis> si vous ex√©cutez un sc√©nario de tests
       personnalis√© qui n'inclut pas les tables standards
       <structname>accounts</structname>, <structname>branches</structname>,
       <structname>history</structname> et <structname>tellers</structname>.
      </entry>
     </row>
     <row>
      <entry><literal>-v</literal></entry>
      <entry>
       Ex√©cute un VACUUM sur les quatres tables avant le test. Sans
       <literal>-n</literal> et <literal>-v</literal>, pgbench ex√©cute un
       VACUUM sur les seules tables <structname>tellers</structname> et
       <structname>branches</structname>, et supprimera toutes les entr√©es de
       <structname>history</structname>.
      </entry>
     </row>
     <row>
      <entry><literal>-D</literal> <replaceable>varname</replaceable><literal>=</literal><replaceable>value</replaceable></entry>
      <entry>
       D√©finit une variable utilis√©e par un script personnalis√© (voir plus
       bas). Vous pouvez utiliser plusieurs fois l'option <literal>-D</literal>.
      </entry>
     </row>
     <row>
      <entry><literal>-C</literal></entry>
      <entry>
       √âtablie une connexion pour chaque transaction, plut√¥t que de se
       connecter une fois par client du thread. Ceci est utile pour mesurer la
       charge occasionn√©e par la connexion.
      </entry>
     </row>
     <row>
      <entry><literal>-l</literal></entry>
      <entry>
       √âcrit le temps pris par chaque transaction dans un journal applicatif.
       Voir ci-dessous pour les d√©tails.
      </entry>
     </row>
     <row>
      <entry><literal>-s</literal> <replaceable>facteur_echelle</replaceable></entry>
      <entry>
       Indique le facteur d'√©chelle sp√©cifi√© en sortie de
       <application>pgbench</application>. Avec les tests internes, ce n'est
       pas n√©cessaire&nbsp;; le bon facteur d'√©chelle sera d√©tect√© en comptant
       le nombre de lignes dans la table <structname>branches</structname>.
       N√©anmoins, lors de tests de performance personnalis√©s
       (option <literal>-f</literal>), le facteur d'√©chelle sera rapport√©
       valant 1 sauf si cette option est utilis√©e.
      </entry>
     </row>
     <row>
      <entry><literal>-d</literal></entry>
      <entry>
       Affiche des informations de d√©bogage.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <table id="pgbench-common-options">
   <title>Options communes de <application>pgbench</application></title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Option</entry>
      <entry>Description</entry>
     </row>
    </thead>

    <tbody>
     <row>
      <entry><literal>-h</literal> <replaceable>hostname</replaceable></entry>
      <entry>H√¥te du serveur de bases de donn√©es</entry>
     </row>
     <row>
      <entry><literal>-p</literal> <replaceable>port</replaceable></entry>
      <entry>Num√©ro de port</entry>
     </row>
     <row>
      <entry><literal>-U</literal> <replaceable>login</replaceable></entry>
      <entry>Nom utilisateur pour la connexion</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect2>

 <sect2>
  <title>Quelle <quote>transaction</quote> est r√©alis√©e dans
  pgbench&nbsp;?</title>

  <para>
   Le script de transaction par d√©faut ex√©cute sept commandes&nbsp;:
  </para>

  <orderedlist>
   <listitem><para><literal>BEGIN;</literal></para></listitem>
   <listitem><para><literal>UPDATE accounts SET abalance = abalance + :delta WHERE aid = :aid;</literal></para></listitem>
   <listitem><para><literal>SELECT abalance FROM accounts WHERE aid = :aid;</literal></para></listitem>
   <listitem><para><literal>UPDATE tellers SET tbalance = tbalance + :delta WHERE tid = :tid;</literal></para></listitem>
   <listitem><para><literal>UPDATE branches SET bbalance = bbalance + :delta WHERE bid = :bid;</literal></para></listitem>
   <listitem><para><literal>INSERT INTO history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);</literal></para></listitem>
   <listitem><para><literal>END;</literal></para></listitem>
  </orderedlist>

  <para>
   Si vous indiquez <literal>-N</literal>, les √©tapes 4 et 5 ne sont pas inclus
   dans la transaction. Si vous indiquez <literal>-S</literal>, seul le
   <command>SELECT</command> est ex√©cut√©.
  </para>
 </sect2>

 <sect2>
  <title>Scripts personnalis√©s</title>

  <para>
   <application>pgbench</application> sait ex√©cuter des sc√©narios personnalis√©s
   en rempla√ßant le script de transaction par d√©faut (d√©crit ci-dessus) avec
   un script de transaction lu √† partir d'un fichier (option
   <literal>-f</literal>). Dans ce cas, une <quote>transaction</quote> compte
   en tant qu'une ex√©cution du fichier. Vous pouvez m√™me indiquer plusieurs
   scripts (avec plusieurs options <literal>-f</literal>), auquel cas un
   script est choisi au hasard √† chaque fois qu'une session client ex√©cute
   une nouvelle transaction.
  </para>

  <para>
   Le fichier doit contenir une commande par ligne&nbsp;; les commandes SQL
   multi-lignes ne sont pas accept√©es. Les lignes vides et les lignes
   commen√ßant par <literal>--</literal> sont ignor√©es. Les lignes du fichier
   peuvent aussi contenir des <quote>meta commandes</quote>, qui sont
   interpr√©t√©es par <application>pgbench</application> lui-m√™me, comme
   d√©crit ci-dessous.
  </para>

  <para>
   Il existe une fonctionnalit√© de substitution de variables pour les fichiers.
   Les variables sont configurables par l'option <literal>-D</literal> en
   ligne de commande, comme expliqu√© ci-dessus, ou par les m√©ta-commandes
   expliqu√©es ci-dessous. En plus des variables pr√©-initialis√©es par les
   options <literal>-D</literal>, la variable <literal>scale</literal> est
   pr√©-initialis√©e avec le facteur d'√©chelle actuel. Une fois configur√©e,
   la valeur d'une variable peut √™tre ins√©r√©e dans une commande SQL en
   √©crivant <literal>:</literal><replaceable>nom_variable</replaceable>.
   Lors de l'ex√©cution de plusieurs sessions clients, chaque session a son
   propre ensemble de variables.
  </para>

  <para>
   Les m√©ta-commandes du script commencent par un antislash
   (<literal>\</literal>). Les arguments d'une m√©ta-commande sont s√©par√©s par
   des espaces blancs. Voici la liste des m√©ta-commandes accept√©es&nbsp;:
  </para>

  <variablelist>
   <varlistentry>
    <term>
     <literal>\set <replaceable>nom_variable</replaceable> <replaceable>operande1</replaceable> [ <replaceable>operateur</replaceable> <replaceable>operande2</replaceable> ]</literal>
    </term>

    <listitem>
     <para>
      Initialise la variable <replaceable>varname</replaceable> avec une
      valeur enti√®re calcul√©e.
      Chaque <replaceable>operande</replaceable> est soit une constante
      enti√®re soit une r√©f√©rence
      <literal>:</literal><replaceable>nom_variable</replaceable> √† une variable
      enti√®re. L'<replaceable>operateur</replaceable> peut √™tre
      <literal>+</literal>, <literal>-</literal>, <literal>*</literal> ou <literal>/</literal>.
     </para>

     <para>
      Exemple&nbsp;:
      <programlisting>
\set ntellers 10 * :scale
      </programlisting>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <literal>\setrandom <replaceable>nom_variable</replaceable> <replaceable>min</replaceable> <replaceable>max</replaceable></literal>
    </term>

    <listitem>
     <para>
      Initialise la variable <replaceable>nom_variable</replaceable> √† une
      valeur enti√®re prise au hasard entre les limites
      <replaceable>min</replaceable> et <replaceable>max</replaceable>.
      Chaque limite peut √™tre soit une constante enti√®re soit une r√©f√©rence
      <literal>:</literal><replaceable>nom_variable</replaceable> √† une valeur
      enti√®re.
     </para>

     <para>
      Exemple&nbsp;:
      <programlisting>
\setrandom aid 1 :naccounts
      </programlisting>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>
     <literal>\sleep <replaceable>nombre</replaceable> [ us | ms | s ]</literal>
    </term>

    <listitem>
     <para>
      Provoque un endormissement de l'ex√©cution du script pour la dur√©e
      indiqu√©e en microsecondes (<literal>us</literal>), millisecondes
      (<literal>ms</literal>) ou secondes (<literal>s</literal>). Si l'unit√©
      est omise, alors ce seront par d√©faut des secondes.
      <replaceable>nombre</replaceable> peut √™tre soit un entier soit une
      r√©f√©rence <literal>:</literal><replaceable>nom_variable</replaceable> √†
      un entier.
     </para>

     <para>
      Exemple&nbsp;:
      <programlisting>
\sleep 10 ms
      </programlisting>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   En exemple, voici la d√©finition compl√®te d'une transaction style
   TPC-B&nbsp;:

   <programlisting>
\set nbranches :scale
\set ntellers 10 * :scale
\set naccounts 100000 * :scale
\setrandom aid 1 :naccounts
\setrandom bid 1 :nbranches
\setrandom tid 1 :ntellers
\setrandom delta -5000 5000
BEGIN;
UPDATE accounts SET abalance = abalance + :delta WHERE aid = :aid;
SELECT abalance FROM accounts WHERE aid = :aid;
UPDATE tellers SET tbalance = tbalance + :delta WHERE tid = :tid;
UPDATE branches SET bbalance = bbalance + :delta WHERE bid = :bid;
INSERT INTO history (tid, bid, aid, delta, mtime) VALUES (:tid, :bid, :aid, :delta, CURRENT_TIMESTAMP);
END;
   </programlisting>

   Ce script permet √† chaque it√©ration de la transaction de r√©f√©rencer des
   lignes diff√©rentes, prises au hasard. (Cet exemple montre aussi pourquoi
   il est imporant que chaque session client ait ses propres variables &mdash;
   sinon elles ne traiteraient pas des lignes diff√©rentes.)
  </para>

 </sect2>

 <sect2>
  <title>Journalisation par transaction</title>

  <para>
   Avec l'option <literal>-l</literal>, <application>pgbench</application>
   √©crit le temps pris par chaque transaction dans un journal applicatif.
   Le journal sera nomm√©
   <filename>pgbench_log.<replaceable>nnn</replaceable></filename>, o√π
   <replaceable>nnn</replaceable> est le PID du processus pgbench. Le format
   de ce journal est&nbsp;:

   <programlisting>
    <replaceable>client_id</replaceable> <replaceable>transaction_no</replaceable> <replaceable>time</replaceable> <replaceable>file_no</replaceable> <replaceable>time_epoch</replaceable> <replaceable>time_us</replaceable>
   </programlisting>

   o√π <replaceable>time</replaceable> est le dur√©e de la transaction en
   microsecondes, <replaceable>file_no</replaceable> identifie le script qui
   a √©t√© utilis√© (utile quand plusieurs scripts sont indiqu√©s avec
   <literal>-f</literal>) et
   <replaceable>time_epoch</replaceable>/<replaceable>time_us</replaceable> sont
   une date/heure au format epoch Unix et un d√©calage en microsecondes
   (convenable pour la cr√©ation d'un horodatage ISO 8601 avec des secondes
   en fration) indiquant la date et heure de la fin de la transaction.
  </para>

  <para>
   Voici un exemple de journal&nbsp;:
   <programlisting>
 0 199 2241 0 1175850568 995598
 0 200 2465 0 1175850568 998079
 0 201 2513 0 1175850569 608
 0 202 2038 0 1175850569 2663
   </programlisting>
  </para>
 </sect2>

 <sect2>
  <title>Bonnes practiques</title>

  <para>
   Il est tr√®s facile d'utiliser <application>pgbench</application> pour
   produire des nombres sans signification. Voici quelques lignes de conduite
   pour vous aider √† obtenir des r√©sultats int√©ressants.
  </para>

  <para>
   En premier lieu, ne <emphasis>jamais</emphasis> croire tout test qui ne
   s'ex√©cute que pendant quelques secondes. Augmentez suffisament le param√®tre
   <literal>-t</literal> pour que le test dure plusieurs minutes pour rendre
   le bruit insignifiant. Dans certains cas, nous avez besoin de quelques
   heures pour obtenir des chiffres reproductibles. Ex√©cuter le test plusieurs
   fois est une bonne id√©e pour savoir si vos r√©sultats sont reproductibles.
  </para>

  <para>
   Pour le sc√©nario par d√©faut, style TPC-B, le facteur d'√©chelle √†
   l'initialisation (<literal>-s</literal>) doit √™tre au moins aussi important
   que le plus grand nombre de clients que vous souhaitez supporter
   (<literal>-c</literal>)&nbsp;; sinon vous ne ferez que mesurer la contention
   des mises √† jour. Il n'y a que <literal>-s</literal> lignes dans la table
   <structname>branches</structname>, et chaque transaction veut en mettre une
   √† jour, donc les valeurs <literal>-c</literal> sup√©rieures √† 
   <literal>-s</literal> r√©sulteront sans doute en beaucoup de transactions
   bloqu√©es, en attente d'autres transactions.
  </para>

  <para>
   Le sc√©nario test par d√©faut est aussi assez sensible du moment o√π les
   tables ont √©t√© initialis√©es&nbsp;: une accumulation de lignes morts et
   d'espace vide dans les tables modifient les r√©sultats. Pour comprendre
   les r√©sultats, vous devez garder trace de nombre total de mises √† jour
   et des moments o√π un VACUUM est ex√©cut√©. Si l'autovacuum est activ√©,
   cela peut causer des modifications non pr√©visibles dans les performances
   mesur√©es.
  </para>

  <para>
   Une limite de <application>pgbench</application> est qu'il peut devenir
   lui-m√™me le goulot d'√©tranglement lors de tentative de tests d'un grand
   nombre de sessions clients. Ceci peut se voir all√©g√© en ex√©cutant
   <application>pgbench</application> sur une autre machine que le serveur
   de bases de donn√©es, bien que la latence du r√©seau est essentielle. Il
   pourrait m√™me √™tre utile d'ex√©cuter plusieurs instances
   <application>pgbench</application> en parall√®le sur plusieurs machines
   client, pour le m√™me serveur de bases de donn√©es.
  </para>
 </sect2>

</sect1>
