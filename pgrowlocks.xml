
<sect1 id="pgrowlocks">
 <title>pgrowlocks</title>
 
 <indexterm zone="pgrowlocks">
  <primary>pgrowlocks</primary>
 </indexterm>

 <para>
  Le module <literal>pgrowlocks</literal> fournit une fonction affichant les
  informations de verrouillage des lignes pour une table spécifique.
 </para>

 <sect2>
  <title>Aperçu</title>
  <programlisting>
pgrowlocks(text) RETURNS pgrowlocks_type
  </programlisting>
  <para>
   Le paramètre est un nom de table. <literal>pgrowlocks_type</literal> est
   défini comme&nbsp;:
  </para>
  <programlisting>
CREATE TYPE pgrowlocks_type AS (
        locked_row TID,         -- row TID
        lock_type TEXT,         -- lock type
        locker XID,             -- locking XID
        multi bool,             -- multi XID?
        xids xid[],             -- multi XIDs
        pids INTEGER[]          -- locker's process id
);
  </programlisting>

  <table>
   <title>pgrowlocks_type</title>
   <tgroup cols="2">
    <tbody>
     <row>
      <entry>locked_row</entry>
      <entry>ID de ligne (TID, comme Tuple ID) pour chaque ligne
       verrouillée</entry>
     </row>
     <row>
      <entry>lock_type</entry>
      <entry><quote>Shared</quote> pour les verrous partagés,
       <quote>Exclusive</quote> pour les verrous exclusifs</entry>
     </row>
     <row>
      <entry>locker</entry>
      <entry>ID de transaction de l'opération qui a posé le verrou
       (Note 1)</entry>
     </row>
     <row>
      <entry>multi</entry>
      <entry>true si l'opération qui a posé le verrou est une
       multi-transaction, sinon false</entry>
     </row>
     <row>
      <entry>xids</entry>
      <entry>XIDs of lockers (Note 2)</entry>
     </row>
     <row>
      <entry>pids</entry>
      <entry>PID des processus de verrouillage locking backends</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
  <para>
   Note1&nbsp;: Si l'opération qui a posé le verrou est multi-transaction, ce
   champ représente le multi-ID.
  </para>
  <para>
   Note2&nbsp;: Si l'opération qui a posé le verrou est multi, les données
   multiples sont affichées.
  </para>

  <para>
   La séquence d'appels de <literal>pgrowlocks</literal> ressemble à ceci&nbsp;:
   <literal>pgrowlocks</literal> récupère un AccessShareLock pour la table
   cible et lit chaque ligne, une par une, pour obtenir les informations de
   verrou. Vous devez noter que&nbsp;:
  </para>
  <orderedlist>
   <listitem>
    <para>
    si la table est verrouillée exclusivement par quelqu'un d'autre,
    <literal>pgrowlocks</literal> sera bloqué.
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>pgrowlocks</literal> peut afficher des informations incorrectes
     si un nouveau verrou apparaît pendant l'exécution de la fonction et si
     un verrou est libéré dans ce temps.
    </para>
   </listitem>
  </orderedlist>
  <para>
   <literal>pgrowlocks</literal> n'affiche pas le contenu des lignes
   verrouillées. Si vous voulez avoir le contenu des lignes en même temps,
   vous pouvez faire ceci&nbsp;:
  </para>
  <programlisting>
SELECT * FROM accounts AS a, pgrowlocks('accounts') AS p WHERE p.locked_ row = a.ctid;
  </programlisting>
 </sect2>

 <sect2>
  <title>Exemple</title>
  <para>
   Voici un exemple d'exécution de pgrowlocks&nbsp;:
  </para>
  <programlisting>
test=# SELECT * FROM pgrowlocks('t1');
 locked_row | lock_type | locker | multi |   xids    |     pids      
------------+-----------+--------+-------+-----------+---------------
      (0,1) | Shared    |     19 | t     | {804,805} | {29066,29068}
      (0,2) | Shared    |     19 | t     | {804,805} | {29066,29068}
      (0,3) | Exclusive |    804 | f     | {804}     | {29066}
      (0,4) | Exclusive |    804 | f     | {804}     | {29066}
(4 rows)
  </programlisting>

 </sect2>
</sect1>

