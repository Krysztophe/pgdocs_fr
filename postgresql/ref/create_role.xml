<?xml version="1.0" encoding="UTF-8"?>
<refentry id="sql-createrole">
 <indexterm zone="sql-createrole">
  <primary>CREATE ROLE</primary>
 </indexterm>

 <refmeta>
  <refentrytitle>CREATE ROLE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE ROLE</refname>
  <refpurpose>Définir un nouveau rôle de base de données</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>CREATE ROLE <replaceable class="parameter">nom</replaceable> [ [ WITH ] <replaceable class="parameter">option</replaceable> [ ... ] ]

<phrase>où <replaceable class="parameter">option</replaceable> peut être&nbsp;:</phrase>

      SUPERUSER | NOSUPERUSER
    | CREATEDB | NOCREATEDB
    | CREATEROLE | NOCREATEROLE

    | INHERIT | NOINHERIT
    | LOGIN | NOLOGIN
    | REPLICATION | NOREPLICATION
    | BYPASSRLS | NOBYPASSRLS
    | CONNECTION LIMIT <replaceable class="parameter">limite_connexion</replaceable>
    | [ ENCRYPTED ] PASSWORD '<replaceable class="parameter">motdepasse</replaceable>' | PASSWORD NULL
    | VALID UNTIL '<replaceable class="parameter">heuredate</replaceable>'
    | IN ROLE <replaceable class="parameter">nom_role</replaceable> [, ...]
    | ROLE <replaceable class="parameter">nom_role</replaceable> [, ...]
    | ADMIN <replaceable class="parameter">nom_role</replaceable> [, ...]
    | SYSID <replaceable class="parameter">uid</replaceable>
  </synopsis>
 </refsynopsisdiv>

 <!--
CAUTION: remember to keep create_user.sgml and create_group.sgml
in sync when changing the above synopsis!
-->

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE ROLE</command> ajoute un nouveau rôle dans une instance
   <productname>PostgreSQL</productname>. Un rôle est une entité qui peut
   posséder des objets de la base de données et avoir des droits sur la base
   et ses objets. Il peut être considéré comme un <quote>utilisateur</quote>,
   un <quote>groupe</quote> ou les deux suivant la façon dont il est utilisé.
   <xref linkend="user-manag"/> et <xref linkend="client-authentication"/>
   donnent de plus amples informations sur la gestion des utilisateurs et
   l'authentification. Il est nécessaire de posséder le droit
   <literal>CREATEROLE</literal> ou d'être superutilisateur pour utiliser
   cette commande.
  </para>

  <para>
   Les rôles sont définis au niveau de l'instance, et sont donc disponibles
   dans toutes les bases de l'instance.
  </para>

  <para>
   Lors de la création d'un rôle, il est possible d'affecter immédiatement
   le nouveau rôle à un rôle existant, et aussi d'affecter des rôles
   existants au nouveau rôle. Les règles pour lesquelles les options
   d'appartenance de rôle sont activées sont décrites ci-dessous dans les
   clauses <literal>IN ROLE</literal>, <literal>ROLE</literal> et
   <literal>ADMIN</literal>. La commande <xref linkend="sql-grant"/> a
   un contrôle plus fin lors de l'ajout de membres et la possibilité de
   modifier ces options une fois le rôle créé.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom du nouveau rôle.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SUPERUSER</literal></term>
    <term><literal>NOSUPERUSER</literal></term>
    <listitem>
     <para>
      Ces clauses définissent si le nouveau rôle est un
      <quote>superutilisateur</quote> et peut ainsi outrepasser les droits
      d'accès à la base de données. Le statut de superutilisateur est
      dangereux et ne doit être utilisé qu'en cas d'absolue nécessité. Seul un
      superutilisateur peut créer un superutilisateur.
      <literal>NOSUPERUSER</literal> est la valeur par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CREATEDB</literal></term>
    <term><literal>NOCREATEDB</literal></term>
    <listitem>
     <para>
      Ces clauses définissent la capacité d'un rôle à créer des bases de
      données. Si <literal>CREATEDB</literal> est indiqué, le rôle en cours
      de définition sera autorisé à créer de nouvelles bases de données.
      Indiquer <literal>NOCREATEDB</literal> empêchera un rôle de créer des
      bases de données. Si non spécifié, <literal>NOCREATEDB</literal> est la
      valeur par défaut. Seuls les rôles superutilisateur et les rôles avec
      <literal>CREATEDB</literal> peuvent spécifier <literal>CREATEDB</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CREATEROLE</literal></term>
    <term><literal>NOCREATEROLE</literal></term>
    <listitem>
     <para>
      Ces clauses précisent le droit de création, modification, suppression,
      ajout de commentaire, et modification du label de sécurité.
      Voir <xref linkend="role-creation" /> pour plus de détails sur les
      possibilités offertes par ce droit.
      <literal>NOCREATEROLE</literal> est la valeur
      par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>INHERIT</literal></term>
    <term><literal>NOINHERIT</literal></term>
    <listitem>
     <para>
      Ceci affecte le statut d'héritage des membres quand ce rôle est ajouté
      comme membre d'un autre rôle, à la fois dans cette commande et dans les
      commandes futures. En particulier, cela contrôle le statut d'héritage des
      membres ajoutés avec cette commande en utilisant la clause <literal>IN
      ROLE</literal>, et dans les commandes ultérieures en utilisant la clause
      <literal>ROLE</literal>. Cela peut aussi être utilisé en tant que statut
      d'héritage par défaut lors de l'ajout de ce rôle comme membre en utilisant
      la commande <literal>GRANT</literal>. Sans indication,
      <literal>INHERIT</literal> est le défaut.
     </para>
     <para>
      Avant <productname>PostgreSQL</productname> 16, l'héritage était
      un attribut au niveau rôle, qui contrôlait toutes les vérifications
      d'appartenance à l'exécution pour ce rôle.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>LOGIN</literal></term>
    <term><literal>NOLOGIN</literal></term>
    <listitem>
     <para>
      Ces clauses précisent si un rôle est autorisé à se connecter,
      c'est-à-dire si le rôle peut être donné comme nom pour l'autorisation
      initiale de session à la connexion du client. Un rôle ayant l'attribut
      <literal>LOGIN</literal> peut être vu comme un utilisateur. Les rôles
      qui ne disposent pas de cet attribut sont utiles pour gérer les droits
      de la base de données mais ne sont pas des utilisateurs au sens habituel
      du mot. <literal>NOLOGIN</literal> est la valeur par défaut, sauf
      lorsque <command>CREATE ROLE</command> est appelé à travers la commande
      <link linkend="sql-createuser"><command>CREATE USER</command></link>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>REPLICATION</literal></term>
    <term><literal>NOREPLICATION</literal></term>
    <listitem>
     <para>
      Ces clauses déterminent si un rôle est un rôle de réplication. Un rôle
      doit avoir cet attribut (ou être un superutilisateur) pour être capable
      de se connecter à un serveur en mode réplication (physique ou logique)
      et pour être capable de créer ou supprimer des slots de réplication.
      Seuls les rôles superutilisateurs ou les rôles avec l'attribut
      <literal>REPLICATION</literal> peuvent spécifier
      <literal>REPLICATION</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>BYPASSRLS</literal></term>
    <term><literal>NOBYPASSRLS</literal></term>
    <listitem>
     <para>
      Ces clauses déterminent si un rôle contourne toute politique de sécurité
      au niveau ligne (RLS). <literal>NOBYPASSRLS</literal> est la valeur par
      défaut.
      Seuls les rôles superutilisateurs ou les rôles avec l'attribut
      <literal>BYPASSRLS</literal> peuvent spécifier
      <literal>BYPASSRLS</literal>.
     </para>

     <para>
      Notez que l'outil <application>pg_dump</application> configure
      <literal>row_security</literal> à <literal>OFF</literal> par défaut pour
      s'assurer que tout le contenu d'une table est sauvegardé. Si
      l'utilisateur exécutant <application>pg_dump</application> n'a pas les
      droits appropriés, une erreur est renvoyée. Néanmoins, les
      superutilisateurs et le propriétaire de la table sauvegardée contournent
      toujours RLS.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CONNECTION LIMIT</literal> <replaceable class="parameter">limiteconnexion</replaceable></term>
    <listitem>
     <para>
      Le nombre maximum de connexions concurrentes possibles pour le rôle,
      s'il possède le droit de connexion. -1 (valeur par défaut) signifie
      qu'il n'y a pas de limite. Il est à noter que seules les connexions
      normales sont soumises à cette limite. Les transactions préparées et
      les connexions des processus worker n'y sont pas soumis.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term>[ <literal>ENCRYPTED</literal> ] <literal>PASSWORD</literal> <replaceable class="parameter">motdepasse</replaceable> | PASSWORD NULL</term>
    <listitem>
     <para>
      Le mot de passe du rôle. Il n'est utile que pour les rôles ayant
      l'attribut <literal>LOGIN</literal>, mais il est possible d'en définir
      un pour les rôles qui ne l'ont pas. Cette option peut être omise si
      l'authentification par mot de passe n'est pas envisagée. Si aucun mot de
      passe n'est spécifié, le mot de passe est NULL et l'authentification par
      mot de passe échouera toujours pour cet utilisateur. Un mot de passe
      NULL peut aussi être indiqué explicitement avec <literal>PASSWORD
       NULL</literal>.
     </para>

     <note>
      <para>
       Indiquer un mot de passe vide configurera aussi le mot de passe à NULL,
       ce qui n'était pas le cas avant la version 10 de
       <productname>PostgreSQL</productname>. Dans les versions précédentes,
       une chaîne vide pouvait être utilisée ou non, suivant la méthode
       d'authentification et la version exacte, alors que libpq refuserait de
       l'utiliser dans tous les cas. Pour lever l'ambiguité, une chaîne vide
       doit être évité.
      </para>
     </note>

     <para>
      Le mot de passe est toujours stocké chiffré dans les catalogues système.
      Le mot clé <literal>ENCRYPTED</literal> n'a aucun effet, mais est accepté
      pour compatibilité descendante.  La méthode de chiffrement est déterminée
      par le paramètre de configuration <xref
      linkend="guc-password-encryption"/>.
      Si le texte du mot de passe présenté est chiffré avec un format MD5 ou
      SCRAM, alors il sera stocké tel quel sans prendre en compte
      <varname>password_encryption</varname> (puisque le système ne peut pas
      déchiffrer la chaîne du mot de passe spécifiée, pour le chiffrer dans un
      format différent).  Cela permet de recharger des mots de passe chiffrés
      durant une opération de sauvegarde / restauration.
     </para>
     <warning>
      <para>
       Support for MD5-encrypted passwords is deprecated and will be removed
       in a future release of <productname>PostgreSQL</productname>.  Refer
       to <xref linkend="auth-password"/> for details about migrating to
       another password type.
      </para>
     </warning>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VALID UNTIL</literal> '<replaceable class="parameter">dateheure</replaceable>'</term>
    <listitem>
     <para>
      Cette clause configure la date et l'heure de fin de validité du mot de
      passe. Sans précision, le mot de passe est indéfiniment valide.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>IN ROLE</literal> <replaceable class="parameter">nom_role</replaceable></term>
    <listitem>
     <para>
      La clause <literal>IN ROLE</literal> fait que le nouveau rôle se voit
      ajouté automatiquement comme membre des rôles existants cités.
      La nouvelle appartenance aura l'option <literal>SET</literal>
      activée et l'option <literal>ADMIN</literal> désactivée. L'option
      <literal>INHERIT</literal> sera activée sauf si l'option
      <literal>NOINHERIT</literal> est indiquée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ROLE</literal> <replaceable class="parameter">nom_role</replaceable></term>
    <listitem>
     <para>
      La clause <literal>ROLE</literal> fait que les rôles existants cités sont
      ajoutés automatiquement comme membre du nouveau rôle, avec l'option
      <literal>SET</literal> activée. Dans les faits, ceci transforme le nouveau
      rôle en un <quote>groupe</quote>. Les rôles nommés dans cette clause avec
      l'attribut <literal>INHERIT</literal> aura l'option
      <literal>INHERIT</literal> activée dans la nouvelle appartenance. Les
      nouveaux membres auront l'option <literal>ADMIN</literal> désactivée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ADMIN</literal> <replaceable class="parameter">nom_role</replaceable></term>
    <listitem>
     <para>
      Cette clause a le même effet que la clause <literal>ROLE</literal>, à la
      différence que les rôles nommés sont ajoutés comme membres du nouveau rôle
      avec l'option <literal>ADMIN</literal> activée. Cela leur confère le droit
      de promouvoir à d'autres rôles l'appartenance à celui-ci.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>SYSID</literal> <replaceable class="parameter">uid</replaceable></term>
    <listitem>
     <para>
      La clause <literal>SYSID</literal> est ignorée, mais toujours acceptée
      pour des raisons de compatibilité.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <link linkend="sql-alterrole"><command>ALTER ROLE</command></link>
   est utilisé pour modifier les attributs d'un rôle, et <link
   linkend="sql-droprole"><command>DROP ROLE</command></link> pour supprimer
   un rôle. Tous
   les attributs positionnés par <command>CREATE ROLE</command> peuvent être
   modifiés par la suite à l'aide de commandes <command>ALTER ROLE</command>.
  </para>

  <para>
   Il est préférable d'utiliser <link linkend="sql-grant"><command>GRANT</command></link>
   et <link linkend="sql-revoke"><command>REVOKE</command></link>.
   pour ajouter et supprimer des membres de rôles utilisés
   comme groupe.
  </para>

  <para>
   La clause <literal>VALID UNTIL</literal> définit les date et heure
   d'expiration du mot de passe uniquement, pas du rôle. En particulier, les
   date et heure d'expiration ne sont pas vérifiées lors de connexions à
   l'aide de méthodes d'authentification qui n'utilisent pas les mots de
   passe.
  </para>

  <para>
   Les attributs de rôle définis ici ne sont pas héritables, autrement dit
   être membre d'un rôle. Par exemple, <literal>CREATEDB</literal> n'autorisera
   pas le membre à créer de nouvelles bases y compris si le membre a l'option
   <literal>INHERIT</literal>. Bien sûr, si l'appartenance a l'option
   <literal>SET</literal>, le rôle membre serait capable d'utiliser
   <link linkend="sql-set-role"><command>SET ROLE</command></link> vers le
   rôle qui a CREATEDB et pourrait ainsi créer une nouvelle base.
  </para>

  <para>
   Les droits d'appartenance créés par les clauses
   <literal>IN ROLE</literal>, <literal>ROLE</literal> et <literal>ADMIN</literal>
   ont le rôle exécutant cette commande comme donneur.
  </para>

  <para>
   L'attribut <literal>INHERIT</literal> est la valeur par défaut pour des
   raisons de compatibilité descendante&nbsp;: dans les précédentes versions
   de <productname>PostgreSQL</productname>, les utilisateurs avaient toujours
   accès à tous les droits des groupes dont ils étaient membres. Toutefois,
   <literal>NOINHERIT</literal> est plus respectueux de la sémantique
   spécifiée dans le standard SQL.
  </para>

  <para>
   <productname>PostgreSQL</productname> inclut un programme, <xref
   linkend="app-createuser"/>, qui possède les mêmes fonctionnalités que
   <command>CREATE ROLE</command> (en fait, il appelle cette commande) et peut
   être lancé à partir du shell.
  </para>

  <para>
   L'option <literal>CONNECTION LIMIT</literal> n'est vérifiée
   qu'approximativement. Si deux nouvelles sessions sont lancées à peu près
   simultanément alors qu'il ne reste qu'un seule possibilité de connexion
   pour le rôle, il est possible que les deux échouent. De plus, la limite
   n'est jamais vérifiée pour les superutilisateurs.
  </para>

  <para>
   Faites attention lorsque vous donnez un mot de passe non chiffré avec cette
   commande. Le mot de passe sera transmis en clair au serveur. Ce dernier
   pourrait être tracé dans l'historique des commandes du client ou dans les
   traces du serveur. Néanmoins, la commande <xref linkend="app-createuser"/>
   transmet le mot de passe chiffré. De plus, <xref linkend="app-psql"/>
   contient une commande <command>\password</command> que vous pouvez utiliser
   pour modifier en toute sécurité votre mot de passe.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer un rôle qui peut se connecter mais sans lui donner de mot de
   passe&nbsp;:
   <programlisting>CREATE ROLE jonathan LOGIN;</programlisting>
  </para>

  <para>
   Créer un rôle avec un mot de passe&nbsp;:
   <programlisting>CREATE USER davide WITH PASSWORD 'jw8s0F4';</programlisting>
   (<command>CREATE USER</command> est identique à <command>CREATE ROLE</command> mais
   implique l'attribut <literal>LOGIN</literal>.)
  </para>

  <para>
   Créer un rôle avec un mot de passe valide jusqu'à fin 2006. Une seconde
   après le passage à 2007, le mot de passe n'est plus valide.
   <programlisting>CREATE ROLE miriam WITH LOGIN PASSWORD 'jw8s0F4' VALID UNTIL '2007-01-01';</programlisting>
  </para>

  <para>
   Créer un rôle qui peut créer des bases de données et gérer des rôles&nbsp;:
   <programlisting>CREATE ROLE admin WITH CREATEDB CREATEROLE;</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   L'instruction <command>CREATE ROLE</command> est définie dans le standard
   SQL. Ce dernier n'impose que la syntaxe
   <synopsis>CREATE ROLE <replaceable class="parameter">nom</replaceable> [ WITH ADMIN <replaceable class="parameter">nom_role</replaceable> ]</synopsis>
   La possibilité d'avoir plusieurs superutilisateurs initiaux et toutes les
   autres options de <command>CREATE ROLE</command> sont des extensions
   <productname>PostgreSQL</productname>.
  </para>

  <para>
   Le standard SQL définit les concepts d'utilisateurs et de rôles mais les
   considère comme des concepts distincts et laisse la spécification des
   commandes de définition des utilisateurs à l'implémentation de chaque
   moteur de bases de données. <productname>PostgreSQL</productname> a pris le
   parti d'unifier les utilisateurs et les rôles au sein d'une même entité.
   Ainsi, les rôles ont plus d'attributs optionnels que dans le standard.
  </para>

  <para>
   Le comportement spécifié par le standard SQL peut être approché en créant des
   utilisateurs du standard SQL comme des rôles
   <productname>PostgreSQL</productname> avec l'option
   <literal>NOINHERIT</literal>, et les rôles du standard SQL comme des rôles
   <productname>PostgreSQL</productname> avec l'option
   <literal>INHERIT</literal>.
  </para>

  <para>
   La clause <literal>USER</literal> a le même comportement que
   <literal>ROLE</literal> mais est obsolète&nbsp;:
<synopsis>
USER <replaceable class="parameter">nom_role</replaceable> [, ...]
</synopsis>
  </para>

  <para>
   La clause <literal>IN GROUP</literal> a le même comportement que
   <literal>IN ROLE</literal> mais est obsolète&nbsp;:
<synopsis>
IN GROUP <replaceable class="parameter">nom_role</replaceable> [, ...]
</synopsis>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-role"/></member>
   <member><xref linkend="sql-alterrole"/></member>
   <member><xref linkend="sql-droprole"/></member>
   <member><xref linkend="sql-grant"/></member>
   <member><xref linkend="sql-revoke"/></member>
   <member><xref linkend="app-createuser"/></member>
   <member><xref linkend="guc-createrole-self-grant"/></member>
  </simplelist>
 </refsect1>
</refentry>
