<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/alter_type.sgml,v 1.1 2004/06/25 21:55:50 tgl Exp $
PostgreSQL documentation
-->
<!-- SAS 20060616 -->

<refentry id="sql-altertype">
 <refmeta>
  <refentrytitle id="sql-altertype-title">ALTER TYPE</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>
   ALTER TYPE
  </refname>
  <refpurpose>
   Modifier la définition d'un type
  </refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <synopsis>ALTER TYPE <replaceable class="parameter">nom</replaceable> OWNER TO <replaceable class="parameter">nouveau_nom</replaceable> 
ALTER TYPE <replaceable class="parameter">nom</replaceable> SET SCHEMA <replaceable class="parameter">nouveau_schema</replaceable></synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-altertype">
   <primary>ALTER TYPE</primary>
  </indexterm>

  <para>
   <command>ALTER TYPE</command> modifie la définition d'un type existant.
   Les seules fonctionnalités actuellement disponibles sont de modifier le
   propriétaire et le schéma d'un type.
  </para>

  <para>
   Seul le propriétaire du type peut utiliser <command>ALTER TYPE</command>.
   Pour modifier le schéma d'un type, 
   le droit <literal>CREATE</literal> sur le nouveau schéma est requis.
   Pour modifier le propriétaire, il faut être un membre direct ou
   indirect du nouveau rôle propriétaire et ce rôle doit avoir le droit
   <literal>CREATE</literal> sur le schéma du type (ces
   restrictions assurent que la modification du propriétaire ne va pas au-delà de ce qui
   est possible par la suppression et la recréation du type&nbsp;; toutefois, un superutilisateur peut modifier
   le propriétaire de n'importe quel type).
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

   <para>
    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nom</replaceable></term>
      <listitem>
       <para>
        Le nom du type à modifier (éventuellement qualifié du nom du schéma).
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nouveau_propriétaire</replaceable></term>
      <listitem>
       <para>
        Le nom du nouveau propriétaire du type.
       </para>
      </listitem>
     </varlistentry>

    <varlistentry>
      <term><replaceable class="parameter">nouveau_schema</replaceable></term>
      <listitem>
       <para>
        Le nouveau schéma du type.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>

   </para>
  </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Donner la propriété du type utilisateur <literal>courriel</literal>
   à <literal>joe</literal>&nbsp;:
   <programlisting>ALTER TYPE courriel OWNER TO joe;</programlisting>
  </para>

  <para>
   Changer le schéma du type utilisateur <literal>courriel</literal>
   en <literal>clients</literal>&nbsp;:
   <programlisting>ALTER TYPE courriel SET SCHEMA clients;</programlisting>
  </para>
</refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'existe aucune instruction <command>ALTER TYPE</command> dans le
   standard SQL.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
