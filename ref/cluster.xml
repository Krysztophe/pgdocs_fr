<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20070921, PG825 -->

<refentry id="sql-cluster">
 <refmeta>
  <refentrytitle id="sql-cluster-title">CLUSTER</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CLUSTER</refname>
  <refpurpose>Réorganiser une table en fonction d'un index</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>CLUSTER [VERBOSE] <replaceable class="PARAMETER">nomtable</replaceable> [ USING <replaceable class="PARAMETER">nomindex</replaceable> ]
CLUSTER [VERBOSE]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-cluster">
   <primary>CLUSTER</primary>
  </indexterm>

  <para>
   <command>CLUSTER</command> réorganise (groupe) la table 
   <replaceable class="parameter">nomtable</replaceable>
   en fonction de l'index <replaceable class="parameter">nomindex</replaceable>. L'index doit avoir été 
   préalablement défini sur <replaceable class="parameter">nomtable</replaceable>.
  </para>

  <para>
   Une table reorganisée est physiquement réordonnée en fonction des informations de l'index.
   Ce regroupement est une opération ponctuelle&nbsp;:
   les actualisations ultérieures ne sont pas réorganisées. C'est-à-dire
   qu'aucune tentative n'est réalisée pour stocker les lignes nouvelles ou actualisées
   d'après l'ordre de l'index. (Une réorganisation périodique peut être
   obtenue en relançant la commande aussi souvent que souhaité. De plus,
   configurer le paramètre <literal>FILLFACTOR</literal> à moins de 100%
   peut aider à préserver l'ordre du cluster lors des mises à jour car les
   lignes mises à jour sont conservées de préférence dans la même page.)
  </para>

  <para>
   Quand une table est réorganisée, <productname>PostgreSQL</productname> 
   enregistre l'index utilisé à cet effet. La forme
   <command>CLUSTER <replaceable class="parameter">nomtable</replaceable></command>
   réorganise la table en utilisant le même index qu'auparavant.
  </para>

  <para>
   <command>CLUSTER</command>, sans paramètre, réorganise toutes les tables de
   la base de données courante qui ont déjà été réorganisées et dont
   l'utilisateur est propriétaire, ou toutes les tables s'il s'agit d'un
   superutilisateur. Cette forme de <command>CLUSTER</command> ne peut pas être
   exécutée à l'intérieur d'une transaction.
  </para>

  <para>
   Quand une table est en cours de réorganisation, un verrou
   <literal>ACCESS EXCLUSIVE</literal> est acquis. Cela empêche toute opération
   sur la table (à la fois en lecture et en écriture) pendant l'exécution de 
   <command>CLUSTER</command>.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nomtable</replaceable></term>
    <listitem>
     <para>
      Le nom d'une table (éventuellement qualifié du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nomindex</replaceable></term>
    <listitem>
     <para>
      Le nom d'un index.
     </para>
    </listitem>
   </varlistentry>
   
   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
      Affiche la progression pour chaque table traitée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

   <para>
    Lorsque les lignes d'une table sont accédées aléatoirement et unitairement,
    l'ordre réel des données dans la table n'a que peu d'importance.
    Toutefois, si certaines données sont plus accédées que d'autres, et qu'un
    index les regroupe, l'utilisation de <command>CLUSTER</command> peut s'avérer
    bénéfique. Si une requête porte sur un ensemble de valeurs indexées ou sur
    une seule valeur pour laquelle plusieurs lignes de la table correspondent,
    <command>CLUSTER</command> est utile. En effet, lorsque l'index
    identifie la page de la table pour la première ligne correspondante, toutes
    les autres lignes correspondantes sont déjà probablement sur la même page
    de table, ce qui diminue les accès disque et accélère la requête.
   </para>

   <para>
    Lors de l'opération de réorganisation, une copie temporaire de la table 
    est créée qui contient les données de la table dans l'ordre de l'index. Des
    copies temporaires de chaque index de la table sont également créées. De ce fait, 
    il est nécessaire de disposer d'un espace libre sur le disque au moins égal
    à la somme de la taille de la table et celles des index.
   </para>

   <para>
    Puisque <command>CLUSTER</command> enregistre les informations de
    réorganisation, il est possible de réorganiser manuellement les tables souhaitées
    la première fois et de planifier une réorganisation, à la
    manière de <command>VACUUM</command>, pour que les tables soient
    régulièrement réorganisées.
   </para>

   <para>
    Puisque le planificateur enregistre les statistiques d'ordonnancement
    des tables, il est conseillé de lancer
    <xref linkend="sql-analyze" endterm="sql-analyze-title"/> sur la table
    nouvellement réorganisée. Dans le cas contraire, les plans de requêtes
    peuvent être mal choisis par le planificateur.
   </para>

   <para>
    Il existe une autre façon de réorganiser les données. La commande
    <command>CLUSTER</command> réorganise la table originale en la parcourant
    en fonction de l'ordre de l'index indiqué&nbsp;; cela peut être lent pour les
    tables volumineuses parce que les lignes sont extraites de la table
    dans l'ordre de l'index et, si la table n'est pas ordonnée, les entrées sont
    disséminées sur des pages aléatoires. Une page disque est alors lue pour chaque
    ligne déplacée. (<productname>PostgreSQL</productname> dispose d'un cache mais une
    grande table n'y tient généralement pas dans sa totalité.) L'autre moyen de
    réorganiser une table est alors d'utiliser&nbsp;:

<programlisting>CREATE TABLE <replaceable class="parameter">nouvelletable</replaceable> AS
    SELECT * FROM <replaceable class="parameter">table</replaceable> ORDER BY <replaceable class="parameter">listecolonnes</replaceable>;
</programlisting>

    qui utilise le code de tri de <productname>PostgreSQL</productname> pour
    aboutir à l'ordre désiré&nbsp;; pour des données non triées, cela est
    généralement bien plus rapide qu'un parcours d'index.
    L'ancienne table peut alors être supprimée et <replaceable
    class="parameter">nouvelletable</replaceable> renommée en <replaceable
    class="parameter">table</replaceable> à l'aide de <command>ALTER TABLE ...
    RENAME</command>. Il ne reste plus qu'à recréer les index de la table.
    Le gros inconvénient de cette approche
    est qu'elle ne préserve pas les OID, les contraintes, les relations de clés
    étrangères, les droits et autres propriétés de la table &mdash; tous ces
    éléments doivent être recréés manuellement. Un autre inconvénient est la
    nécessité d'un fichier temporaire de tri de la même taille que
    la table elle-même. Le pic d'utilisation du disque est alors d'environ
    trois fois la taille de la table au lieu de deux fois.
   </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Réorganiser la table <literal>employes</literal> sur la base de son index
   <literal>employes_ind</literal>&nbsp;:
   <programlisting>CLUSTER employes ON employes_ind;
</programlisting>
  </para>

  <para>
   Réorganiser la relation <literal>employes</literal> en utilisant le même index
   que précédemment&nbsp;:
<programlisting>CLUSTER employes;
</programlisting>
  </para>

  <para>
   Réorganiser toutes les tables de la base de données qui ont déjà été préalablement
   réorganisées&nbsp;:
<programlisting>CLUSTER;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'existe pas d'instruction <command>CLUSTER</command> dans le standard
   SQL.
  </para>

  <para>
   La syntaxe
<synopsis>
CLUSTER <replaceable class="parameter">nomindex</replaceable> ON <replaceable class="parameter">nomtable</replaceable>
</synopsis>
  est aussi supportée pour la compatibilité avec les versions de
  <productname>PostgreSQL</productname> antérieures à la 8.3.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-clusterdb" endterm="app-clusterdb-title"/></member>
  </simplelist>
 </refsect1>
</refentry>
