<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/comment.sgml,v 1.10 2005/09/15 07:03:25 guillaume Exp $
PostgreSQL documentation
-->

<refentry id="SQL-COMMENT">
 <refmeta>
  <refentrytitle id="SQL-COMMENT-TITLE">COMMENT</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>COMMENT</refname>
  <refpurpose>définit ou modifie le commentaire sur un objet</refpurpose>
 </refnamediv>

 <indexterm zone="sql-comment">
  <primary>COMMENT</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
COMMENT ON
{
  TABLE <replaceable class="PARAMETER">nom_objet</replaceable> |
  COLUMN <replaceable class="PARAMETER">nom_table</replaceable>.<replaceable
class="PARAMETER">nom_colonne</replaceable> |
  AGGREGATE <replaceable class="PARAMETER">nom_agrégat</replaceable>
(<replaceable class="PARAMETER">type_agrégat</replaceable>) |
  CAST (<replaceable>typesource</replaceable> AS
<replaceable>typecible</replaceable>) |
  CONSTRAINT <replaceable class="PARAMETER">nom_contrainte</replaceable> ON
<replaceable class="PARAMETER">nom_table</replaceable> |
  CONVERSION <replaceable class="PARAMETER">nom_objet</replaceable> |
  DATABASE <replaceable class="PARAMETER">nom_objet</replaceable> |
  DOMAIN <replaceable class="PARAMETER">nom_objet</replaceable> |
  FUNCTION <replaceable class="PARAMETER">nom_fonction</replaceable> ( [ [ <replaceable class="parameter">modearg</replaceable> ] [ <replaceable class="parameter">nomarg</replaceable> ] <replaceable class="parameter">typearg</replaceable> [, ...] ] ) |
  INDEX <replaceable class="PARAMETER">nom_objet</replaceable> |
  LARGE OBJECT <replaceable class="PARAMETER">oid_large_objet</replaceable> |
  OPERATOR <replaceable class="PARAMETER">op</replaceable> (<replaceable
class="PARAMETER">type_operande1</replaceable>, <replaceable
class="PARAMETER">type_operande2</replaceable>) |
  OPERATOR CLASS <replaceable class="PARAMETER">nom_objet</replaceable> USING
<replaceable class="parameter">méthode_indexage</replaceable> |
  RULE <replaceable class="PARAMETER">nom_role</replaceable> ON <replaceable
class="PARAMETER">nom_table</replaceable> |
  SCHEMA <replaceable class="PARAMETER">nom_objet</replaceable> |
  SEQUENCE <replaceable class="PARAMETER">nom_objet</replaceable> |
  TRIGGER <replaceable class="PARAMETER">nom_declencheur</replaceable> ON
<replaceable class="PARAMETER">nom_table</replaceable> |
  TYPE <replaceable class="PARAMETER">nom_objet</replaceable> |
  VIEW <replaceable class="PARAMETER">nom_objet</replaceable>
} IS <replaceable class="PARAMETER">'texte'</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>COMMENT</command> stocke un commentaire sur un objet de base de
    données.
  </para>

  <para>
    Pour modifier un commentaire, lancez une nouvelle commande
    <command>COMMENT</> pour le même objet. Seule une chaîne de commentaire est
    stockée pour chaque objet. Pour supprimer un commentaire, écrivez
    <literal>NULL</literal> à la place de la chaîne de texte. Les commentaires
    sont automatiquement supprimés lorsque l'objet est supprimé.
  </para>
  
  <para>
    Les commentaires peuvent être facilement récupérés avec les
    commandes de <application>psql</application> <command>\dd</command>,
    <command>\d+</command> et <command>\l+</command>. Les autres interfaces
    utilisateur permettant de récupérer les commentaires peuvent être
    construites au-dessus des même fonctions intégrées que celles utilisées par
    <application>psql</application>, nommément <function>obj_description</> et
    <function>col_description</>. (Voir <xref
    linkend="functions-info-comment-table">.)
  </para>
 
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom_objet</replaceable></term>
    <term><replaceable
     class="parameter">nom_table.nom_colonne</replaceable></term>
    <term><replaceable class="parameter">nom_agregat</replaceable></term>
    <term><replaceable class="parameter">nom_contrainte</replaceable></term>
    <term><replaceable class="parameter">nom_fonction</replaceable></term>
    <term><replaceable class="parameter">op</replaceable></term>
    <term><replaceable class="parameter">nom_regle</replaceable></term>
    <term><replaceable class="parameter">nom_declencheur</replaceable></term>
    <listitem>
     <para>
      Le nom de l'objet à commenter. Les noms des tables, agrégats, domaines,
      fonctions, index, opérateurs, classes d'opérateurs, séquences,
      types et vues pourraient être qualifiés du nom du schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_agregat</replaceable></term>
    <listitem>
     <para>
      Le type de données de l'argument de la fonction d'agrégat ou
      <literal>*</literal> si la fonction accepte tout type de données.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
     <term><replaceable>typesource</replaceable></term>
     <listitem>
      <para>
       Le nom du type de donnée source dans la conversion.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><replaceable>typecible</replaceable></term>
     <listitem>
      <para>
       Le nom du type de données cible dans la conversion.
      </para>
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">modearg</replaceable></term>

    <listitem>
     <para>
      Le mode d'un argument de la fonction&nbsp;: soit <literal>IN</>, soit
      <literal>OUT</>, soit <literal>INOUT</>. En cas d'omission, la valeur par
      défaut est <literal>IN</>. Notez que <command>COMMENT ON
      FUNCTION</command> ne fait actuellement pas attention aux arguments
      <literal>OUT</> car seuls les arguments en entrée sont nécessaires pour
      déterminer l'identité de la fonction. Donc, il est suffisant de lister les
      arguments <literal>IN</> et <literal>INOUT</>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nomarg</replaceable></term>

    <listitem>
     <para>
      Le nom d'un argument de la fonction name of a function argument.
      Notez que <command>COMMENT ON FUNCTION</command> ne fait actuellement pas
      attention aux noms des arguments car seuls les types de données des
      arguments sont nécessaires pour déterminer l'identité de la fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">typearg</replaceable></term>

    <listitem>
     <para>
      Le(s) type(s) de données des arguments de la fonction (pouvant être
      qualifié(s) du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">oid_objet_large</replaceable></term>
    <listitem>
     <para>
      L'OID de l'objet large.
     </para>
    </listitem>
   </varlistentry>

    <varlistentry>
     <term><literal>PROCEDURAL</literal></term>

     <listitem>
      <para>
       Inutilisé.
      </para>
     </listitem>
    </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">texte</replaceable></term>
    <listitem>
     <para>
      Le nouveau commentaire, écrit comme une chaîne littérale&nbsp;; ou
      <literal>NULL</> pour supprimer le commentaire.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Un commentaire pour une base de données peut seulement être créé dans cette
   base de données et ne sera visible que de cette base de données, pas des
   autres.
  </para>

  <para>
   Il n'existe pas de mécanisme de sécurité pour les commentaires&nbsp;:
   tout utilisateur connecté à une base de données peut voir tous les
   commentaires des objets dans la base de données (bien que seuls les
   superutilisateurs peuvent modifier les commentaires sur des objets qu'ils
   ne possèdent pas). Du coup, ne placez pas d'informations critiques en terme
   de sécurité dans vos commentaires.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Attacher un commentaire sur la table <literal>matable</literal>&nbsp;:

<programlisting>
COMMENT ON TABLE matable IS 'Ceci est ma table.';
</programlisting>

   Supprimez-le de nouveau&nbsp;:

<programlisting>
COMMENT ON TABLE matable IS NULL;
</programlisting>
  </para>

  <para>
   Quelques exemples supplémentaires&nbsp;:

<programlisting>
COMMENT ON AGGREGATE mon_agregat (double precision) IS 'Calcule une variance
type';
COMMENT ON CAST (text AS int4) IS 'Autorise les conversions de text vers int4';
COMMENT ON COLUMN ma_table.ma_colonne IS 'Numéro employé';
COMMENT ON CONVERSION ma_conv IS 'Conversion vers UTF8';
COMMENT ON DATABASE ma_database IS 'Base de données de développement';
COMMENT ON DOMAIN mon_domaine IS 'Domaine des adresses email';
COMMENT ON FUNCTION ma_fonction (timestamp) IS 'Renvoit en chiffres romain';
COMMENT ON INDEX mon_index IS 'Renforce l'unicité de l'ID de l'employé';
COMMENT ON LANGUAGE plpython IS 'Support de Python pour les procedures
stockées';
COMMENT ON LARGE OBJECT 346344 IS 'Document de planification';
COMMENT ON OPERATOR ^ (text, text) IS 'Traite l\'intersection de deux textes';
COMMENT ON OPERATOR - (NONE, text) IS 'Opérateur de préfix sur un texte';
COMMENT ON OPERATOR CLASS int4ops USING btree IS 'Opérateurs d'entiers sur
quatre octets pour les index btrees';
COMMENT ON RULE ma_regle ON my_table IS 'Trace les mises à jour des
enregistrements d\'employé';
COMMENT ON SCHEMA mon_schema IS 'Données du département';
COMMENT ON SEQUENCE ma_sequence IS 'Utilisé pour générer des clés primaires';
COMMENT ON TABLE mon_schema.ma_table IS 'Informations sur les employés';
COMMENT ON TRIGGER mon_declencheur ON my_table IS 'Utilisé pour RI';
COMMENT ON TYPE complex IS 'Type de données pour les nombres complexes';
COMMENT ON VIEW ma_vue IS 'Vue des coûts départementaux';
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'existe pas de commande <command>COMMENT</command> dans le standard SQL.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->