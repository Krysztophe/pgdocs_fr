<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/create_opclass.sgml,v 1.8 2005/03/14 06:03:51 guillaume Exp $
PostgreSQL documentation
-->
<!-- SAS 20060410 -->

<refentry id="SQL-CREATEOPCLASS">
 <refmeta>
  <refentrytitle id="sql-createopclass-title">CREATE OPERATOR CLASS</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE OPERATOR CLASS</refname>
  <refpurpose>définir une nouvelle classe d'opérateur</refpurpose>
 </refnamediv>

 <indexterm zone="sql-createopclass">
  <primary>CREATE OPERATOR CLASS</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE OPERATOR CLASS <replaceable class="parameter">nom</replaceable> [ DEFAULT ] FOR TYPE <replaceable class="parameter">type_données</replaceable> USING <replaceable class="parameter">méthode_index</replaceable> AS
  {  OPERATOR <replaceable class="parameter">numéro_stratégie</replaceable> <replaceable class="parameter">nom_opérateur</replaceable> [ ( <replaceable class="parameter">op_type</replaceable>, <replaceable class="parameter">op_type</replaceable> ) ] [ RECHECK ]
   | FUNCTION <replaceable class="parameter">numéro_support</replaceable> <replaceable class="parameter">nom_fonction</replaceable> ( <replaceable class="parameter">type_argument</replaceable> [, ...] )
   | STORAGE <replaceable class="parameter">type_stockage</replaceable>
  } [, ... ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

<!-- ICI -->
  <para>
   <command>CREATE OPERATOR CLASS</command> crée une nouvelle classe
   d'opérateur. Une classe d'opérateur définit la façon dont un type de
   données particulier peut être utilisé avec un index. La classe d'opérateur spécifie que
   certains opérateurs joueront des rôles particuliers ou des
   <quote>stratégies</quote> pour ce type de données et cette méthode d'indexage. La
   classe d'opérateur spécifie aussi les procédures de support pour être
   utilisée par la méthode d'indexage quand la classe d'opérateur est
   sélectionnée pour une colonne d'index. Tous les opérateurs et fonctions
   utilisés par une classe d'opérateur doivent être définis avant la création de
   la classe d'opérateur.
  </para>

  <para>
   Si un nom de schéma est donné, alors la classe d'opérateur est créée dans le
   schéma spécifié. Sinon, elle est créée dans le schéma courant. Deux classes
   d'opérateur peuvent avoir le même nom seulement s'ils sont pour des méthodes
   d'indexage différentes.
  </para>

  <para>
   L'utilisateur qui définit une classe d'opérateur devient son propriétaire.
   Actuellement, le créateur doit être un superutilisateur. (Cette restriction
   est faite parce qu'une définition erronée d'une classe d'opérateur pourrait
   gêner le serveur, voire causer un arrêt brutal de celui-ci.)
  </para>

  <para>
   Actuellement, <command>CREATE OPERATOR CLASS</command> ne vérifie pas si la
   définition de la classe d'opérateur inclut tous les opérateurs et fonctions
   requis par la méthode d'indexage. C'est de la responsabilité de l'utilisateur
   de définir une classe d'opérateur valide.
  </para>

  <para>
   Référez-vous au <xref linkend="xindex"/> pour plus d'informations.
  </para>
 </refsect1>
  
 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom de la classe d'opérateur à créer. Ce nom pourrait être qualifié
      avec le nom du schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>DEFAULT</literal></term>
    <listitem>
     <para>
      Si présent, la classe d'opérateur deviendra la classe d'opérateur par
      défaut pour ce type de données. Au plus une classe d'opérateur peut être
      la classe par défaut pour un type de données et une méthode d'indexage
      spécifiques.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_données</replaceable></term>
    <listitem>
     <para>
      Le type de données de la colonne pour cette classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">méthode_index</replaceable></term>
    <listitem>
     <para>
      Le nom de la méthode d'indexage pour cette classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">numéro_stratégie</replaceable></term>
    <listitem>
     <para>
      Le numéro de stratégie de la méthode d'indexage pour un opérateur associé
      avec la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_opérateur</replaceable></term>
    <listitem>
     <para>
      Le nom (pouvant être qualifié du nom du schéma) d'un opérateur associé
      avec la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">op_type</replaceable></term>
    <listitem>
     <para>
      Le type de données de l'opérande d'un opérateur ou <literal>NONE</literal> pour
      signifier un opérateur unaire. Les types de données de l'opérande
      pourraient être omis dans le cas normal où ils sont identiques au type de
      données de la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>RECHECK</literal></term>
    <listitem>
     <para>
      Si présent, l'index est <quote>à perte</quote> pour cet opérateur. Du coup,
      les lignes récupérées en utilisant l'index doivent être de nouveau
      vérifiées pour s'assurer qu'elles satisfont réellement la clause de
      qualification impliquant cet opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">numéro_support</replaceable></term>
    <listitem>
     <para>
      Le numéro de procédure du support pour cette méthode d'indexage pour une
      fonction associée avec la classe d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_fonction</replaceable></term>
    <listitem>
     <para>
      Le nom (pouvant être qualifié avec le nom du schéma) d'une fonction qui
      est la procédure de support pour la méthode d'indexage sur la classe
      d'opérateur.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">types_argument</replaceable></term>
    <listitem>
     <para>
      Le(s) type(s) de données des paramètres de la fonction.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">type_stockage</replaceable></term>
    <listitem>
     <para>
      Le type de données réellement stocké dans l'index. Normalement, c'est le
      même que le type de données de la colonne mais certaines méthodes
      d'indexage (uniquement GiST au moment de l'écriture de ce document)
      autorisent une différence. La clause <literal>STORAGE</literal> doit être omise
      sauf si la méthode d'indexage autorise l'utilisation d'un type différent.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>

  <para>
   Les clauses <literal>OPERATOR</literal>, <literal>FUNCTION</literal> et <literal>STORAGE</literal>
   pourraient apparaître dans n'importe quel ordre.
  </para>
 </refsect1>
  
 <refsect1>
  <title>Notes</title>

  <para>
   Les opérators ne devraient pas être définis par des fonctions SQL. Une
   fonction SQL a des chances d'être intégrée dans la requête appelante, ce qui
   empêchera l'optimiseur de reconnaître que la requête correspond à un index.
  </para>
 </refsect1>
  
 <refsect1>
  <title>Exemples</title>

  <para>
   La commande issue de l'exemple suivant définit une classe d'opérateur
   d'indexage GiST pour le type de données <literal>_int4</literal> (tableau de
   <type>int4</type>). Voir <filename>contrib/intarray/</filename> pour l'exemple
   complet.
  </para>

<programlisting>
CREATE OPERATOR CLASS gist__int_ops
    DEFAULT FOR TYPE _int4 USING gist AS
        OPERATOR        3       &&,
        OPERATOR        6       =       RECHECK,
        OPERATOR        7       @,
        OPERATOR        8       ~,
        OPERATOR        20      @@ (_int4, query_int),
        FUNCTION        1       g_int_consistent (internal, _int4, int4),
        FUNCTION        2       g_int_union (bytea, internal),
        FUNCTION        3       g_int_compress (internal),
        FUNCTION        4       g_int_decompress (internal),
        FUNCTION        5       g_int_penalty (internal, internal, internal),
        FUNCTION        6       g_int_picksplit (internal, internal),
        FUNCTION        7       g_int_same (_int4, _int4, internal);
</programlisting>  
 </refsect1>
 
 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE OPERATOR CLASS</command> est une extension
   <productname>PostgreSQL</productname>. Il n'existe pas d'instruction
   <command>CREATE OPERATOR CLASS</command> dans le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alteropclass" endterm="sql-alteropclass-title"/></member>
   <member><xref linkend="sql-dropopclass" endterm="sql-dropopclass-title"/></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
