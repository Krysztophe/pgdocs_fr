<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/create_schema.sgml,v 1.8 2005/03/14 06:03:52 guillaume Exp $
PostgreSQL documentation
-->
<!-- SAS 20060412 -->

<refentry id="sql-createschema">
 <refmeta>
  <refentrytitle id="sql-createschema-title">CREATE SCHEMA</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE SCHEMA</refname>
  <refpurpose>définir un nouveau schéma</refpurpose>
 </refnamediv> 

 <refsynopsisdiv>
<synopsis>
CREATE SCHEMA <replaceable class="parameter">nom_schéma</replaceable> [ AUTHORIZATION <replaceable class="parameter">nom_utilisateur</replaceable> ] [ <replaceable class="parameter">élément_schéma</replaceable> [ ... ] ]
CREATE SCHEMA AUTHORIZATION <replaceable class="parameter">nom_utilisateur</replaceable> [ <replaceable class="parameter">élément_schéma</replaceable> [ ... ] ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-createschema">
   <primary>CREATE SCHEMA</primary>
  </indexterm>

  <para>
   <command>CREATE SCHEMA</command> crée un nouveau schéma dans la base de
   données. Le nom du schéma doit être unique au sein de la base de données.
  </para>

  <para>
   Un schéma est essentiellement un espace logique&nbsp;: il contient des
   objets nommés (tables, types de données, fonctions et opérateurs) dont les
   noms peuvent être identiques à ceux d'objets d'autres schémas.
   Les objets nommés sont accessibles en préfixant leur nom de celui du 
   schéma (on dit alors que le nom est <quote>qualifié</quote> du nom du schéma),
   ou par la configuration d'un chemin de recherche incluant
   le(s) schéma(s) désiré(s). Une commande <command>CREATE</command>
   qui spécifie un objet non qualifié crée l'objet dans le schéma courant 
   (le premier dans le chemin de recherche, obtenu par
   la fonction <function>current_schema</function>).
  </para>

  <para>
   <command>CREATE SCHEMA</command> peut éventuellement inclure des
   sous-commandes de création d'objets dans le nouveau schéma.
   Les sous-commandes sont traitées à la façon de commandes
   séparées lancées après la création du schéma. La différence réside dans l'utilisation
   de la clause <literal>AUTHORIZATION</literal>. Dans ce cas, l'utilisateur est
   propriétaire de tous les objets créés.
  </para>
 </refsect1>
  
 <refsect1>
  <title>Paramètres</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nom_schéma</replaceable></term>
      <listitem>
       <para>
	Le nom du schéma à créer. S'il est oublié, le nom de l'utilisateur
	est utilisé comme nom de schéma. Le nom ne peut pas débuter par
	<literal>pg_</literal>, ces noms étant réservés aux schémas du
	système.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nom_utilisateur</replaceable></term>
      <listitem>
       <para>
        Le nom de l'utilisateur à qui appartient le schéma. Par défaut, 
	l'utilisateur qui exécute la commande. Seuls les
	superutilisateurs peuvent créer des schémas possédés par d'autres
	utilisateurs.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">élément_schéma</replaceable></term>
      <listitem>
       <para>
        Une instruction SQL qui définit un objet à créer dans le schéma.
	À ce jour, seules <command>CREATE TABLE</command>,
	<command>CREATE	VIEW</command>, <command>CREATE SEQUENCE</command>,
	<command>CREATE TRIGGER</command> et <command>GRANT</command>
	peuvent être utilisées dans la commande <command>CREATE SCHEMA</command>.
	Les autres types d'objets sont créés dans des commandes séparées
	après la création du schéma.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Pour créer un schéma, l'utilisateur doit avoir le droit
   <literal>CREATE</literal> sur la base de données. (Les
   superutilisateurs contournent cette vérification.)
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer un schéma&nbsp;:
<programlisting>
CREATE SCHEMA mon_schema;
</programlisting>
  </para>

  <para>
   Créer un schéma pour l'utilisateur <literal>joe</literal>, schéma
   nommé <literal>joe</literal> :
<programlisting>
CREATE SCHEMA AUTHORIZATION joe;
</programlisting>
  </para>

  <para>
   Créer un schéma et lui ajouter une table et une vue :
<programlisting>
CREATE SCHEMA hollywood
    CREATE TABLE films (titre text, sortie date, recompenses text[])
    CREATE VIEW gagnants AS
        SELECT titre, sortie FROM films WHERE recompenses IS NOT NULL;
</programlisting>
   Les sous-commandes ne sont pas terminées par un point-virgule.
  </para>

  <para>
   La même chose, autre écriture&nbsp;:
<programlisting>
CREATE SCHEMA hollywood;
CREATE TABLE hollywood.films (titre text, sortie date, recompenses text[]);
CREATE VIEW hollywood.gagnants AS
    SELECT titre, sortie FROM hollywood.films WHERE recompenses IS NOT NULL;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Le standard SQL autorise une clause <literal>DEFAULT CHARACTER SET</literal> dans
   <command>CREATE SCHEMA</command>, et des types de sous-commandes
   en plus grand nombre que ceux supportés actuellement par <productname>PostgreSQL</productname>.
  </para>

  <para>
   Le standard SQL n'impose pas d'ordre d'apparition des sous-commandes dans
   <command>CREATE SCHEMA</command>.
   L'implantation actuelle de <productname>PostgreSQL</productname> ne gère
   pas tous les cas de références futures dans les sous-commandes. Il peut
   s'avérer nécessaire de réordonner les sous-commandes pour éviter ces
   références.
  </para>

  <para>
   Dans le standard SQL, le propriétaire d'un schéma est également propriétaire
   de tous les objets qui s'y trouvent.
   <productname>PostgreSQL</productname> permet à un schéma de contenir
   des objets qui n'appartiennent pas à son propriétaire.
   Cela n'est possible que si le propriétaire du schéma transmet le privilège
   <literal>CREATE</literal> sur son schéma.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterschema" endterm="sql-alterschema-title"/></member>
   <member><xref linkend="sql-dropschema" endterm="sql-dropschema-title"/></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
