<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/create_schema.sgml,v 1.8 2005/03/14 06:03:52 guillaume Exp $
PostgreSQL documentation
-->

<refentry id="SQL-CREATESCHEMA">
 <refmeta>
  <refentrytitle id="sql-createschema-title">CREATE SCHEMA</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE SCHEMA</refname>
  <refpurpose>définit un nouveau schéma</refpurpose>
 </refnamediv> 

 <indexterm zone="sql-createschema">
  <primary>CREATE SCHEMA</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
CREATE SCHEMA <replaceable class="parameter">nom_schéma</replaceable> [ AUTHORIZATION <replaceable class="parameter">nom_utilisateur</replaceable> ] [ <replaceable class="parameter">élément_schéma</replaceable> [ ... ] ]
CREATE SCHEMA AUTHORIZATION <replaceable class="parameter">nom_utilisateur</replaceable> [ <replaceable class="parameter">élément_schéma</replaceable> [ ... ] ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>CREATE SCHEMA</command> crée un nouveau schéma dans la base de
   données en cours. Le nom du schéma doit être distinct du nom des différents
   schémas existants dans la base de données en cours.
  </para>

  <para>
   Un schéma est essentiellement un espace logique, il contient des
   objets nommés (tables, types de données, fonctions et opérateurs) dont les
   noms pourraient être ceux d'autres objets existants dans d'autres schémas.
   Les noms d'objets sont accessible soit en <quote>qualifiant</quote> leur noms avec
   le nom du schéma en préfixe ou en configurant un chemin de recherche qui
   inclut le(s) schéma(s) désiré(s). Une commande <command>CREATE</command>
   spécifiant un objet non qualifié crée l'objet dans le schéma actuel (celui
   qui se trouve au début du chemin de rechercher, qui peut être déterminé avec
   la fonction <function>current_schema</function>).
  </para>

  <para>
   De façon optionnelle, <command>CREATE SCHEMA</command> peut inclure des
   sous-commandes pour créer des objets à l'intérieur du nouveau schéma.
   Les sous-commandes sont traitées essentiellement comme des commandes
   séparées lancées après la création du schéma, sauf que, si la clause
   <literal>AUTHORIZATION</literal> est utilisée, tous les objets créés seront possédés
   par cet utilisateur.
  </para>
 </refsect1>
  
 <refsect1>
  <title>Paramètres</title>

    <variablelist>
     <varlistentry>
      <term><replaceable class="parameter">nom_schéma</replaceable></term>
      <listitem>
       <para>
	Le nom d'un schéma à créer. Si il est oublié, le nom de l'utilisateur
	est utilisé comme nom de schéma. Le nom ne peut pas commencer avec
	<literal>pg_</literal> car de tels noms sont réservés aux schémas du
	système.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">nom_utilisateur</replaceable></term>
      <listitem>
       <para>
        Le nom de l'utilisateur qui possédera le schéma. Si oublié, récupère
	par défaut l'utilisateur exécutant la commande. Seuls les
	superutilisateurs peuvent créer des schémas possédés par d'autres
	utilisateurs qu'eux-mêmes.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry>
      <term><replaceable class="parameter">élément_schéma</replaceable></term>
      <listitem>
       <para>
        Une instruction SQL définissant un objet à créer à l'intérieur du
	schéma. Actuellement, seules <command>CREATE TABLE</command>, <command>CREATE
	VIEW</command>, <command>CREATE SEQUENCE</command>, <command>CREATE TRIGGER</command> et
	<command>GRANT</command> sont acceptées comme clauses à l'intérieur
	de <command>CREATE SCHEMA</command>. D'autres types d'objets peuvent être
	créés dans des commandes séparées une fois le schéma créé.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Pour créer un schéma, l'utilisateur appelant doit avoir le droit
   <literal>CREATE</literal> sur la base de données actuelle. (Bien sûr, les
   superutilisateurs n'ont pas besoin de cette vérification.)
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer un schéma&nbsp;:
<programlisting>
CREATE SCHEMA mon_schema;
</programlisting>
  </para>

  <para>
   Créer un schéma pour l'utilisateur <literal>joe</literal>, le schéma sera
   aussi nommé <literal>joe</literal> :
<programlisting>
CREATE SCHEMA AUTHORIZATION joe;
</programlisting>
  </para>

  <para>
   Créer un schéma et lui ajouter une table et une vue :
<programlisting>
CREATE SCHEMA hollywood
    CREATE TABLE films (titre text, sortie date, recompenses text[])
    CREATE VIEW gagnants AS
        SELECT titre, sortie FROM films WHERE recompenses IS NOT NULL;
</programlisting>
   Notez que les sous-commandes individuelles ne se terminent pas avec des
   points-virgules.
  </para>

  <para>
   Ce qui suit est une façon équivalente d'accomplir la même chose :
<programlisting>
CREATE SCHEMA hollywood;
CREATE TABLE hollywood.films (titre text, sortie date, recompenses text[]);
CREATE VIEW hollywood.gagnants AS
    SELECT titre, sortie FROM hollywood.films WHERE recompenses IS NOT NULL;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Le standard SQL autorise une clause <literal>DEFAULT CHARACTER SET</literal> dans
   <command>CREATE SCHEMA</command>, ainsi que plus de types de sous-commandes
   que ce qui est actuellement accepté par
   <productname>PostgreSQL</productname>.
  </para>

  <para>
   Le standard SQL spécifie que les sous-commandes dans <command>CREATE
   SCHEMA</command> peuvent apparaître dans n'importe quel ordre.
   L'implémentation actuelle de <productname>PostgreSQL</productname> ne gère
   pas tous les cas de références dans les sous-commandes, il pourrait
   être nécessaire de réordonner les sous-commandes pour éviter certaines
   références.
  </para>

  <para>
   Suivant le standard SQL, le propriétaire d'un schéma possède toujours des
   objets. <productname>PostgreSQL</productname> permet aux schémas de contenir
   des objets possédés par d'autres utilisateurs que le propriétaire du schéma.
   Ceci peut arriver seulement si le propriétaire du schéma donne le privilège
   <literal>CREATE</literal> de son schéma à d'autres personnes.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-alterschema" endterm="sql-alterschema-title"></member>
   <member><xref linkend="sql-dropschema" endterm="sql-dropschema-title"></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
