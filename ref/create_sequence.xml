<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/create_sequence.sgml,v 1.9 2005/07/10 17:28:01 guillaume Exp $
PostgreSQL documentation
-->
<!-- SAS 20060618 -->

<refentry id="sql-createsequence">
 <refmeta>
  <refentrytitle id="sql-createsequence-title">CREATE SEQUENCE</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE SEQUENCE</refname>
  <refpurpose>Définir un nouveau générateur de séquence</refpurpose>
 </refnamediv> 

 <refsynopsisdiv>
<synopsis>CREATE [ TEMPORARY | TEMP ] SEQUENCE <replaceable class="parameter">nom</replaceable> [ INCREMENT [ BY ] <replaceable class="parameter">incrément</replaceable> ]
    [ MINVALUE <replaceable class="parameter">valeurmin</replaceable> | NO MINVALUE ]
    [ MAXVALUE <replaceable class="parameter">valeurmax</replaceable> | NO MAXVALUE ]
    [ START [ WITH ] <replaceable class="parameter">début</replaceable> ]
    [ CACHE <replaceable class="parameter">cache</replaceable> ]
    [ [ NO ] CYCLE ]
    [ OWNED BY { <replaceable class="parameter">table</replaceable>.<replaceable class="parameter">colonne</replaceable> | NONE } ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-createsequence">
   <primary>CREATE SEQUENCE</primary>
  </indexterm>

  <para>
   <command>CREATE SEQUENCE</command> crée un nouveau générateur de
   séquence de nombres. Cela implique la création et l'initialisation d'une nouvelle table
   à une seule ligne nommée <replaceable class="parameter">nom</replaceable>. Le générateur appartient à
   l'utilisateur qui exécute la commande.
  </para>

  <para>
   Si un nom de schéma est donné, la séquence est créée dans le schéma
   spécifié. Sinon, elle est créée dans le schéma courant. Les séquences
   temporaires existent dans un schéma spécial, il n'est donc pas utile
   de préciser un nom de schéma lors de la création d'une séquence temporaire. Le nom de
   la séquence doit être distinct du nom de toute autre séquence, table,
   index ou vue du schéma.
  </para>

  <para>
   Après la création d'une séquence, les fonctions
   <function>nextval</function>, <function>currval</function> et
   <function>setval</function> sont utilisées pour agir sur la séquence. Ces fonctions sont
   documentées dans <xref linkend="functions-sequence"/>.
  </para>

  <para>
   Bien qu'il ne soit pas possible de mettre à jour une séquence en accédant directement
   à la table, une requête telle que

<programlisting>SELECT * FROM <replaceable>nom</replaceable>;
</programlisting>

   peut être utilisée pour examiner les paramètres et l'état courant d'une séquence. En
   particulier, le champ <literal>last_value</literal> affiche la
   dernière valeur allouée par une session. (Cette valeur peut être rendue obsolète à 
   l'affichage par des appels effectifs de <function>nextval</function> dans des sessions
   concurrentes.)
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>TEMPORARY</literal> ou <literal>TEMP</literal></term>
    <listitem>
     <para>
      Si ce paramètre est spécifié, l'objet séquence n'est créé que pour la session en cours
      et est automatiquement supprimé lors de la sortie de session. Les
      séquences permanentes portant le même nom ne sont pas visibles
      (dans cette session) tant que la séquence temporaire existe, sauf à être
      référencées par les noms qualifiés du schéma.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom</replaceable></term>
    <listitem>
     <para>
      Le nom (éventuellement qualifié du nom du schéma) de la séquence à
      créer.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">incrément</replaceable></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>INCREMENT BY <replaceable class="parameter">incrément</replaceable></literal>
      précise la
      valeur à ajouter à la valeur courante de la séquence pour créer une
      nouvelle valeur. Une valeur positive crée une séquence ascendante, une
      valeur négative une séquence descendante. 1 est la valeur par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">valeurmin</replaceable></term>
    <term><literal>NO MINVALUE</literal></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>MINVALUE <replaceable class="parameter">valeurmin</replaceable></literal>
      détermine la valeur
      minimale de la séquence. Si cette clause n'est pas fournie
      ou si <option>NO MINVALUE</option> est spécifié, alors les valeurs par
      défaut sont utilisées. Ces valeurs sont, respectivement, 1 et
      -2<superscript>63</superscript>-1 pour les séquences ascendantes et
      descendantes.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">valeurmax</replaceable></term>
    <term><literal>NO MAXVALUE</literal></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>MAXVALUE <replaceable class="parameter">valeurmax</replaceable></literal>
      détermine la valeur
      maximale de la séquence. Si cette clause n'est pas fournie ou si
      <option>NO MAXVALUE</option> est specifié, alors les valeurs par défaut
      sont utilisées. Ces valeurs sont, respectivement, 2<superscript>63</superscript>-1 et -1
      pour les séquences ascendantes et descendantes.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">début</replaceable></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>START WITH <replaceable class="parameter">début</replaceable> </literal>
      permet à la séquence de démarrer n'importe où.
      La valeur de début par défaut est
      <replaceable class="parameter">valeurmin</replaceable> pour les séquences ascendantes 
      et <replaceable class="parameter">valeurmax</replaceable> pour les
      séquences descendantes.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">cache</replaceable></term>
    <listitem>
     <para>
      La clause optionnelle
      <literal>CACHE <replaceable class="parameter">cache</replaceable></literal>
      spécifie le nombre de numéros de séquence à préallouer et stocker en mémoire pour un
      accès plus rapide. 1 est la valeur minimale (une seule valeur est
      engendrée à la fois, soit pas de cache) et la valeur
      par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>CYCLE</literal></term>
    <term><literal>NO CYCLE</literal></term>
    <listitem>
     <para>
      L'option <literal>CYCLE</literal> autorise la séquence à recommencer au
      début lorsque <replaceable class="parameter">valeurmax</replaceable> ou
      <replaceable class="parameter">valeurmin</replaceable> sont atteintes, respectivement, par
      une séquence ascendante ou descendante. Si la limite est
      atteinte, le prochain nombre engendré est respectivement
      <replaceable class="parameter">valeurmin</replaceable> ou
      <replaceable class="parameter">valeurmax</replaceable>.
     </para>

     <para>
      Si <literal>NO CYCLE</literal> est spécifié, tout appel à
      <function>nextval</function> alors que la séquence a atteint la valeur
      maximale (dans le cas d'une séquence ascendante) ou la valeur minimale (dans l'autre cas)
      retourne une erreur. En l'absence de précision, <literal>NO CYCLE</literal>
      est la valeur par défaut.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>OWNED BY</literal> <replaceable class="parameter">table</replaceable>.<replaceable class="parameter">column</replaceable></term>
    <term><literal>OWNED BY NONE</literal></term>
    <listitem>
     <para>
      The <literal>OWNED BY</literal> option causes the sequence to be
      associated with a specific table column, such that if that column
      (or its whole table) is dropped, the sequence will be automatically
      dropped as well.  The specified table must have the same owner and be in
      the same schema as the sequence.
      <literal>OWNED BY NONE</literal>, the default, specifies that there
      is no such association.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <command>DROP SEQUENCE</command> est utilisé pour supprimer une séquence.
  </para>

  <para>
   Les séquences sont fondées sur l'arithmétique <type>bigint</type>, leur échelle
   ne peut donc pas excéder l'échelle d'un entier sur huit octets
   (-9223372036854775808 à 9223372036854775807). Sur certaines vieilles
   plateformes, il peut ne pas y avoir de support compilateur pour les
   entiers codés sur huit octets. Dans ce cas les séquences utilisent l'arithmétique
   des entiers traditionnels (type <type>integer</type>) (de -2147483648 à
   +2147483647).
  </para>

  <para>
   Des résultats inattendus peuvent être obtenus dans le cas d'un
   paramétrage de <replaceable class="parameter">cache</replaceable> supérieur
   à un pour une séquence utilisée concurrentiellement par
   plusieurs sessions. Chaque session alloue et cache des valeurs de
   séquences successives lors d'un accès à la séquence et augmente en conséquence la
   valeur de <literal>last_value</literal>. Les <replaceable class="parameter">cache</replaceable>-1
   appels suivants de <function>nextval</function> au cours de la session
   session retourne simplement les valeurs préallouées sans toucher à la
   séquence. De ce fait, tout nombre alloué mais non utilisé au cours d'une session est
   perdu à la fin de la session, créant ainsi des <quote>trous</quote> dans
   la séquence.
  </para>

  <para>
   De plus, bien qu'il soit garanti que des sessions différentes engendrent
   des valeurs de séquence distinctes, si l'on considère toutes les sessions,
   les valeurs peuvent ne pas être engendrées séquentiellement.
   Par exemple, avec un paramétrage du
   <replaceable class="parameter">cache</replaceable> à 10, la session A peut réserver
   les valeurs 1..10 et récupérer <function>nextval</function>=1&nbsp;; la
   session B peut alors réserver les valeurs 11..20 et récupérer
   <function>nextval</function>=11 avant que la session A n'ait engendré
   <literal>nextval</literal>=2. 
   De ce fait, un paramétrage de <replaceable class="parameter">cache</replaceable> à un
   permet d'assumer que les valeurs retournées par <function>nextval</function> sont 
   engendrées séquentiellement&nbsp;; avec un
   <replaceable class="parameter">cache</replaceable> supérieur, 
   on ne peut qu'assumer que les valeurs retournées par <function>nextval</function>
   sont tous distinctes, non qu'elles sont réellement engendrées
   séquentiellement. De plus, <literal>last_value</literal> reflète la dernière
   valeur réservée pour toutes les sessions, que <function>nextval</function> ait ou non
   retourné cette valeur.
  </para>

  <para>
   D'autre part, <function>setval</function> exécuté sur une telle
   séquence n'est pas pris en compte par les autres sessions avant qu'elle n'aient
   utilisé toutes les valeurs préallouées et cachées.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une séquence ascendante appelée <literal>serie</literal>, démarrant à
   101&nbsp;:
<programlisting>CREATE SEQUENCE serie START 101;
</programlisting>
  </para>

  <para>
   Sélectionner le prochain numéro de cette séquence&nbsp;:
<programlisting>SELECT nextval('serie');
    
 nextval
---------
     114
</programlisting>
  </para>

  <para>
   Utiliser cette séquence dans une commande <command>INSERT</command>&nbsp;:
<programlisting>INSERT INTO distributors VALUES (nextval('serie'), 'nothing');
</programlisting>
  </para>

  <para>
   Mettre à jour la valeur de la séquence après un <command>COPY
   FROM</command>&nbsp;:
<programlisting>BEGIN;
COPY distributeurs FROM 'fichier_entrees';
SELECT setval('serie', max(id)) FROM distributeurs;
END;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE SEQUENCE</command> est conforme au standard
   <acronym>SQL</acronym>, exception faites des remarques suivantes&nbsp;:
   <itemizedlist>
    <listitem>
     <para>
      The standard's <literal>AS &lt;data type&gt;</literal> expression is not
      supported.
     </para>
    </listitem>
    <listitem>
     <para>
      Obtaining the next value is done using the <function>nextval()</function>
      function instead of the standard's <command>NEXT VALUE FOR</command>
      expression.
     </para>
    </listitem>
    <listitem>
     <para>
      The <literal>OWNED BY</literal> clause is a <productname>PostgreSQL</productname>
      extension. 
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-altersequence" endterm="sql-altersequence-title"/></member>
   <member><xref linkend="sql-dropsequence" endterm="sql-dropsequence-title"/></member>
  </simplelist>
 </refsect1>

</refentry>