<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060618 -->

<refentry id="sql-createtableas">
 <refmeta>
  <refentrytitle id="sql-createtableas-title">CREATE TABLE AS</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>CREATE TABLE AS</refname>
  <refpurpose>Définir une nouvelle table à partir des résultats d'une
   requête</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>CREATE [ [ GLOBAL | LOCAL ] { TEMPORARY | TEMP } ] TABLE <replaceable>nom_table</replaceable>
    [ (<replaceable>nom_colonne</replaceable> [, ...] ) ]
    [ WITH ( <replaceable class="parameter">parametre_stockage</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] ) | WITH OIDS | WITHOUT OIDS ]
    [ ON COMMIT { PRESERVE ROWS | DELETE ROWS | DROP } ]
    [ TABLESPACE <replaceable class="parameter">espace_logique</replaceable> ]
    AS <replaceable>requête</replaceable>
</synopsis>
 </refsynopsisdiv>
  
 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-createtableas">
   <primary>CREATE TABLE AS</primary>
  </indexterm>

  <para>
   <command>CREATE TABLE AS</command> crée une table et y insère les
   données récupérées par une commande <command>SELECT</command>. Les
   colonnes de la table ont les noms et les types de
   données associés aux colonnes en sortie du <command>SELECT</command>
   (les noms des colonnes peuvent toutefois être surchargés).
  </para>

  <para>
   <command>CREATE TABLE AS</command> semble possèder des similitudes avec la création 
   d'une vue mais est, en fait, assez différente&nbsp;: elle crée une nouvelle
   table et n'évalue la requête qu'une seule fois, pour le chargement initial de la nouvelle table.
   Les modifications ultérieures de la table source ne sont pas prises en compte. Au contraire, 
   une vue réévalue l'instruction <command>SELECT</command> de définition à chaque appel.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>GLOBAL</literal> ou <literal>LOCAL</literal></term>
    <listitem>
     <para>
      Ignoré. Conservé pour la compatibilité
      (cf. <xref linkend="sql-createtable" endterm="sql-createtable-title"/>).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TEMPORARY</literal> ou <literal>TEMP</literal></term>
    <listitem>
     <para>
      Si spécifié, la table est temporaire
      (cf. <xref linkend="sql-createtable" endterm="sql-createtable-title"/>).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>nom_table</replaceable></term>
    <listitem>
     <para>
      Le nom de la table à créer (éventuellement qualifié du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>nom_colonne</replaceable></term>
    <listitem>
     <para>
      Le nom d'une colonne dans la nouvelle table. Si les noms de colonnes ne
      sont pas précisés, ils sont issus des noms des colonnes en sortie de la
      requête. Les noms des colonnes ne peuvent pas être précisés lorsque la table est créée à partir d'une commande
      <command>EXECUTE</command>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH ( <replaceable class="parameter">paramètre_stockage</replaceable> [= <replaceable class="parameter">valeur</replaceable>] [, ... ] )</literal></term>
    <listitem>
     <para>
      Cette clause indique les paramètres de stockage optionnels pour la nouvelle
      table&nbsp;; voir <xref linkend="sql-createtable-storage-parameters"
      endterm="sql-createtable-storage-parameters-title"/> pour plus
      d'informations. La clause <literal>WITH</literal> peut aussi inclure
      <literal>OIDS=TRUE</literal> (ou simplement <literal>OIDS</literal>) pour
      indiquer que les lignes de la nouvelle table doivent avoir des OID
      (identifiants d'objets) ou <literal>OIDS=FALSE</literal> pour indiquer le
      contraire. Voir <xref linkend="sql-createtable"
      endterm="sql-createtable-title"/> pour plus d'informations.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>WITH OIDS</literal></term>
    <term><literal>WITHOUT OIDS</literal></term>
    <listitem>
     <para>
      Ce sont les syntaxes obsolètes mais équivalentes, respectivement de
      <literal>WITH (OIDS)</literal> et <literal>WITH (OIDS=FALSE)</literal>. Si
      vous souhaitez indiquer à la fois l'option <literal>OIDS</literal> et les
      paramètres de stockage, vous devez utiliser la syntaxe
      <literal>WITH ( ... )</literal>&nbsp;; voir ci-dessus.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ON COMMIT</literal></term>
    <listitem>
     <para>
      Le comportement des tables temporaires à la fin d'un bloc de transaction
      est contrôlable en utilisant <literal>ON COMMIT</literal>. Voici les
      trois options&nbsp;:

      <variablelist>
       <varlistentry>
        <term><literal>PRESERVE ROWS</literal></term>
        <listitem>
         <para>
          Aucune action spéciale n'est effectuée à la fin de la transaction.
          C'est le comportement par défaut.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>DELETE ROWS</literal></term>
        <listitem>
         <para>
          Toutes les lignes de la table temporaire seront supprimées à la fin de
          chaque bloc de transaction. Habituellement, un <xref
          linkend="sql-truncate" endterm="sql-truncate-title"/> automatique est
          effectué à chaque COMMIT.
         </para>
        </listitem>
       </varlistentry>

       <varlistentry>
        <term><literal>DROP</literal></term>
        <listitem>
         <para>
          La table temporaire sera supprimée à la fin du bloc de transaction
          en cours.
         </para>
        </listitem>
       </varlistentry>
      </variablelist>
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>TABLESPACE <replaceable class="parameter">espace_logique</replaceable></literal></term>
    <listitem>
     <para>
      L'<replaceable class="parameter">espace_logique</replaceable> est le nom
      du tablespace dans lequel est créée la nouvelle table. S'il n'est
      pas indiqué, <xref linkend="guc-default-tablespace"/> est consulté, sauf
      si la table est temporaire auquel cas <xref linkend="guc-temp-tablespaces"/>
      est utilisé.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable>requête</replaceable></term>
    <listitem>
     <para>
      Une commande <xref linkend="sql-select" endterm="sql-select-title"/> ou
      <xref linkend="sql-values" endterm="sql-values-title"/>, voire une commande
      <xref linkend="sql-execute" endterm="sql-execute-title"/> qui exécute un
      <command>SELECT</command> préparé ou une requête <command>VALUES</command>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Cette commande est fonctionnellement équivalente à
   <xref linkend="sql-selectinto" endterm="sql-selectinto-title"/>. Elle lui est
   cependant préférée car elle présente moins de risques de confusion avec les autres utilisations
   de la syntaxe <command>SELECT INTO</command>. De plus,
   <command>CREATE TABLE AS</command> offre plus de fonctionnalités 
   que <command>SELECT INTO</command>.
  </para>

  <para>
   Avant <productname>PostgreSQL</productname> 8.0,
   <command>CREATE TABLE AS</command> incluait toujours les OIDs dans la table créée.
   À partir de <productname>PostgresSQL</productname> 8.0, la commande
   <command>CREATE TABLE AS</command> autorise l'utilisateur à spécifier
   explicitement la présence des OID. En l'absence de précision,
   la variable de configuration <xref linkend="guc-default-with-oids"/> est utilisée. À partir de
   <productname>PostgreSQL</productname> 8.1, la valeur par défaut de cette variable est &laquo;&nbsp;faux&nbsp;&raquo;&nbsp;;
   le comportement par défaut n'est donc pas identique à celui des versions
   précédant la 8.0. Il est préférable que les applications qui nécessitent des OID dans la table créée
   par <command>CREATE TABLE AS</command> indiquent explicitement
   <literal>WITH (OIDS)</literal> pour s'assurer du comportement souhaité.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Créer une table <literal>films_recent</literal> contenant les
   entrées récentes de la table <literal>films</literal> :

<programlisting>CREATE TABLE films_recent AS
  SELECT * FROM films WHERE date_prod &gt;= '2006-01-01';
</programlisting>
  </para>

  <para>
   Créer une nouvelle table temporaire <literal>films_recents</literal> consistant
   des seules entrées récentes provenant de la table <literal>films</literal> en
   utilisant une instruction préparée. La nouvelle table a des OID et sera
   supprimée à la validation (COMMIT)&nbsp;:

<programlisting>
PREPARE films_recents(date) AS
  SELECT * FROM films WHERE date_prod &gt; $1;
CREATE TEMP TABLE films_recents WITH (OIDS) ON COMMIT DROP AS
  EXECUTE films_recents('2002-01-01');
</programlisting>
  </para>
 </refsect1>


 <refsect1>
  <title>Compatibilité</title>

  <para>
   <command>CREATE TABLE AS</command> est conforme au standard
   <acronym>SQL</acronym>, avec les exceptions suivantes&nbsp;:

   <itemizedlist spacing="compact">
    <listitem>
     <para>
      Le standard requiert des parenthèses autour de la clause de la
      sous-requête&nbsp;; elles sont optionnelles dans <productname>PostgreSQL</productname>.
     </para>
    </listitem>

    <listitem>
     <para>
      Le standard définit une clause <literal>WITH [ NO ] DATA</literal>&nbsp;;
      ceci n'est pas encore implémenté dans <productname>PostgreSQL</productname>.
      Le comportement proposé par <productname>PostgreSQL</productname> est
      équivalent au cas standard <literal>WITH DATA</literal>.
      <literal>WITH NO DATA</literal> peut être simulé en ajoutant
      <literal>LIMIT 0</literal> à la requête.
     </para>
    </listitem>

    <listitem>
     <para>
      <productname>PostgreSQL</productname> gère les tables temporaires d'une
      façon bien différente de celle du standard&nbsp;; voir
      <xref linkend="sql-createtable" endterm="sql-createtable-title"/> pour
      les détails.
     </para>
    </listitem>

    <listitem>
     <para>
      La clause <literal>WITH</literal> est une extension
      <productname>PostgreSQL</productname>&nbsp;; ni les paramètres de stockage
      ni les OID ne sont dans le standard.
     </para>
    </listitem>

    <listitem>
     <para>
      Le concept <productname>PostgreSQL</productname> des tablespaces ne
      fait pas partie du standard. Du coup, la clause <literal>TABLESPACE</literal>
      est une extension.
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-createtable" endterm="sql-createtable-title"/></member>
   <member><xref linkend="sql-execute" endterm="sql-execute-title"/></member>
   <member><xref linkend="sql-select" endterm="sql-select-title"/></member>
   <member><xref linkend="sql-selectinto" endterm="sql-selectinto-title"/></member>
   <member><xref linkend="sql-values" endterm="sql-values-title"/></member>
  </simplelist>
 </refsect1>
 
</refentry>
