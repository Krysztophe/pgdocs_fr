<?xml version="1.0" encoding="ISO-8859-15"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060619 -->

<refentry id="sql-delete">
 <refmeta>
  <refentrytitle id="sql-delete-title">DELETE</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>DELETE</refname>
  <refpurpose>Supprimer des lignes d'une table</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>DELETE FROM [ ONLY ] <replaceable class="parameter">table</replaceable> [ [ AS ] <replaceable class="parameter">alias</replaceable> ]
    [ USING <replaceable class="parameter">liste_using</replaceable> ]
    [ WHERE <replaceable class="parameter">condition</replaceable> | WHERE CURRENT OF <replaceable class="parameter">nom_curseur</replaceable> ]
    [ RETURNING * | <replaceable class="parameter">expression_sortie</replaceable> [ [ AS ] <replaceable class="parameter">output_name</replaceable> ] [, ...] ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-delete">
   <primary>DELETE</primary>
  </indexterm>

  <para>
   <command>DELETE</command> supprime de la table spécifiée les lignes qui satisfont la clause
   <literal>WHERE</literal>. Si la clause
   <literal>WHERE</literal> est absente, toutes les lignes de la table sont
   supprimées. Le résultat est une table valide, mais vide.
  </para>

   <tip>
    <para>
     <xref linkend="sql-truncate" endterm="sql-truncate-title"/> est une
     extension <productname>PostgreSQL</productname> qui fournit un mécanisme
     plus rapide de suppression de l'ensemble des lignes d'une table.
    </para>
   </tip>

  <para>
   Par défaut, <command>DELETE</command> supprime les lignes de la table
   spécifiée et de ses tables filles. La clause <literal>ONLY</literal>
   est utilisée pour ne supprimer que les lignes de la table mentionnée.
  </para>

  <para>
   Il existe deux façons de supprimer des lignes d'une table en utilisant
   les informations d'autres tables de la base de données&nbsp;:
   les sous-sélections ou la spécification de tables supplémentaires dans la
   clause <literal>USING</literal>. La technique la plus appropriée dépend des
   circonstances.
  </para>

  <para>
   La clause <literal>RETURNING</literal> optionnelle fait que
   <command>DELETE</command> calcule et renvoie le(s) valeur(s) basée(s) sur
   chaque ligne en cours de suppression. Toute expression utilisant les
   colonnes de la table et/ou les colonnes de toutes les tables mentionnées
   dans <literal>USING</literal> peut être calculée. La syntaxe de la liste
   <literal>RETURNING</literal> est identique à celle de la commande
   <command>SELECT</command>.
  </para>

  <para>
   Il est nécessaire de posséder le droit <literal>DELETE</literal> sur la table
   pour en supprimer des lignes, et le droit <literal>SELECT</literal> sur toute
   table de la clause <literal>USING</literal> et sur toute table dont les valeurs sont lues
   dans la <replaceable class="parameter">condition</replaceable>.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>ONLY</literal></term>
    <listitem>
     <para>
      Si cette option est spécifiée, les lignes ne sont supprimées que dans la table
      nommée. Dans le cas contraire, toutes les tables qui héritent de la table
      nommée sont considérées.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table</replaceable></term>
    <listitem>
     <para>
      Le nom de la table (éventuellement qualifié du nom du schéma).
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">alias</replaceable></term>
    <listitem>
     <para>
      Un nom de substitution pour la table cible. Quand un alias est fourni,
      il cache complètement le nom réel de la table. Par exemple, avec
      <literal>DELETE FROM foo AS f</literal>, le reste de l'instruction
      <command>DELETE</command> doit référencer la table avec
      <literal>f</literal> et non plus <literal>foo</literal>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">liste_using</replaceable></term>
    <listitem>
     <para>
      Une liste d'expressions de table, qui permet de faire apparaître des colonnes
      d'autres tables dans la condition <literal>WHERE</literal>. 
	  C'est semblable à la liste des tables utilisées dans la clause
	  <xref linkend="sql-from" endterm="sql-from-title"/> d'une instruction
      <command>SELECT</command>&nbsp;; un alias du nom d'une
      table peut ainsi être utilisé. La table cible ne doit pas être précisée
	  dans <replaceable class="parameter">liste_using</replaceable>, sauf si 
	  une auto-jointure est envisagée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">condition</replaceable></term>
    <listitem>
     <para>
      Une expression retournant une valeur de type
      <type>boolean</type>.
      Seules les lignes pour lesquelles cette expression renvoie
      <literal>true</literal> seront supprimées.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_curseur</replaceable></term>
    <listitem>
     <para>
      Le nom du curseur à utiliser dans une condition <literal>WHERE CURRENT
      OF</literal>. La ligne à supprimer est la dernière ligne récupérée avec
      ce curseur. Le curseur doit être une requête sans regroupement
      sur la table cible du <command>DELETE</command>.
      Notez que <literal>WHERE CURRENT OF</literal> ne peut pas se voir ajouter
      de condition booléenne. See
      <xref linkend="sql-declare" endterm="sql-declare-title">
      for more information about using cursors with
      <literal>WHERE CURRENT OF</>.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">expression_sortie</replaceable></term>
    <listitem>
     <para>
      Une expression à calculer et renvoyée par la commande <command>DELETE</command>
      après chaque suppression de ligne. L'expression peut utiliser tout nom de
      colonne de la <replaceable class="parameter">table</replaceable> ou des
      tables listées dans la clause <literal>USING</literal>.
      Indiquez <literal>*</literal> pour que toutes les colonnes soient renvoyées.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">nom_sortie</replaceable></term>
    <listitem>
     <para>
      Un nom à utiliser pour une colonne renvoyée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Sorties</title>

  <para>
   En cas de succès, une commande <command>DELETE</command> renvoie une information de
   la forme
<screen>DELETE <replaceable class="parameter">nombre</replaceable>
</screen>
   Le <replaceable class="parameter">nombre</replaceable> correspond au nombre
   de lignes supprimées. Si <replaceable class="parameter">nombre</replaceable>
   vaut 0, c'est qu'aucune ligne ne correspond à
   <replaceable class="parameter">condition</replaceable> (ce qui n'est pas considéré comme
   une erreur).
  </para>

  <para>
   Si la commande <command>DELETE</command> contient une clause
   <literal>RETURNING</literal>, le résultat sera similaire à celui d'une
   instruction <command>SELECT</command> contenant les colonnes et les valeurs
   définies dans la liste <literal>RETURNING</literal>, à partir de la liste
   des lignes supprimées par la commande.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <productname>PostgreSQL</productname> autorise les références à des colonnes
   d'autres tables dans la condition <literal>WHERE</literal> par la spécification des autres
   tables dans la clause <literal>USING</literal>. Par exemple, pour
   supprimer tous les films produits par un producteur donné&nbsp;:
<programlisting>DELETE FROM films USING producteurs
  WHERE id_producteur = producteurs.id AND producteurs.nom = 'foo';
</programlisting>

   Pour l'essentiel, une jointure est établie entre <structname>films</structname>
   et <structname>producteurs</structname> avec toutes les lignes jointes marquées pour
   suppression. Cette syntaxe n'est pas standard. Une façon plus standard de procéder
   consiste à utiliser une sous-selection&nbsp;:
<programlisting>DELETE FROM films
  WHERE id_producteur IN (SELECT id FROM producteur WHERE nom = 'foo');
</programlisting>
   Dans certains cas, la jointure est plus facile à écrire ou plus rapide à
   exécuter que la sous-sélection.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Supprimer tous les films qui ne sont pas des films musicaux&nbsp;:
<programlisting>DELETE FROM films WHERE genre &lt;&gt; 'Comédie musicale';
</programlisting>
  </para>

  <para>
   Effacer toutes les lignes de la table <literal>films</literal>&nbsp;:
<programlisting>DELETE FROM films;
</programlisting>
  </para>

  <para>
   Supprimer les tâches terminées tout en renvoyant le détail complet
   des lignes supprimées&nbsp;:
<programlisting>DELETE FROM taches WHERE statut = 'DONE' RETURNING *;
</programlisting>      
  </para>

   <para>
   Supprimer la ligne de <structname>taches</structname> sur lequel est
   positionné le curseur <literal>c_taches</literal>&nbsp;:
<programlisting>
DELETE FROM taches WHERE CURRENT OF c_taches;
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Cette commande est conforme au standard SQL, à l'exception des clauses
   <literal>USING</literal> et <literal>RETURNING</literal>, qui sont
   des extensions de <productname>PostgreSQL</productname>.
  </para>
 </refsect1>
</refentry>
