<?xml version="1.0" encoding="ISO-8859-15"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060619 : Relecture initiale -->

<refentry id="sql-grant">
 <refmeta>
  <refentrytitle id="sql-grant-title">GRANT</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>GRANT</refname>
  <refpurpose>Définir les droits d'accès</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>GRANT { { SELECT | INSERT | UPDATE | DELETE | REFERENCES | TRIGGER }
    [,...] | ALL [ PRIVILEGES ] }
    ON [ TABLE ] <replaceable class="parameter">nomtable</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { USAGE | SELECT | UPDATE }
    [,...] | ALL [ PRIVILEGES ] }
    ON SEQUENCE <replaceable class="parameter">nomséquence</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | CONNECT | TEMPORARY | TEMP } [,...] | ALL [ PRIVILEGES ] }
    ON DATABASE <replaceable>nombase</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { EXECUTE | ALL [ PRIVILEGES ] }
    ON FUNCTION <replaceable>nomfonction</replaceable> ( [ [ <replaceable class="parameter">modearg</replaceable> ] [ <replaceable class="parameter">nomarg</replaceable> ] <replaceable class="parameter">typearg</replaceable> [, ...] ] ) [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { USAGE | ALL [ PRIVILEGES ] }
    ON LANGUAGE <replaceable>nomlangage</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { { CREATE | USAGE } [,...] | ALL [ PRIVILEGES ] }
    ON SCHEMA <replaceable>nomschéma</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT { CREATE | ALL [ PRIVILEGES ] }
    ON TABLESPACE <replaceable>nomespacelogique</replaceable> [, ...]
    TO { [ GROUP ] <replaceable class="PARAMETER">nomrole</replaceable> | PUBLIC } [, ...] [ WITH GRANT OPTION ]

GRANT <replaceable class="PARAMETER">role</replaceable> [, ...] TO <replaceable class="PARAMETER">nomrole</replaceable> [, ...] [ WITH ADMIN OPTION ]
</synopsis>
 </refsynopsisdiv>

 <refsect1 id="sql-grant-description">
  <title>Description</title>
  <indexterm zone="sql-grant">
   <primary>GRANT</primary>
  </indexterm>

  <para>
   La commande <command>GRANT</command> a deux variantes basiques&nbsp;: la première
   donne des droits sur un objet de la base de données (table, vue,
   séquence, base de données, fonction, langage de procédure, schéma ou espace
   logique), la seconde gère les appartenances à un rôle. Ces variantes sont
   assez similaires mais somme toute assez différentes pour être
   décrites séparément.
  </para>

  <para>
   A partir de <productname>PostgreSQL</productname> 8.1, les concepts
   d'utilisateurs et de groupes ont été unifiés en un seul type d'entité appelé
   rôle. Il n'est ainsi plus nécessaire d'utiliser le mot clé 
   <literal>GROUP</literal> pour préciser si celui à qui le droit est donné est un
   utilisateur ou un groupe. <literal>GROUP</literal> est toujours accepté dans la
   commande, mais est devenu inutile.
  </para>

 <refsect2 id="sql-grant-description-objects">
  <title>GRANT sur les objets de la base de données</title>

  <para>
   Cette variante de la commande <command>GRANT</command> donne des droits
   spécifiques sur un objet de la base de données a un ou plusieurs rôles.
   Ces droits sont ajoutés à ceux déjà possédés, s'il y en a.
  </para>

  <para>
   Le mot clé <literal>PUBLIC</literal> indique que les droits sont donnés à
   tous les rôles, y compris ceux créés ultérieurement.
   <literal>PUBLIC</literal> peut être vu comme un groupe implicitement
   défini qui inclut en permanence tous les rôles. Un rôle
   particulier dispose de la somme des droits qui lui sont acquis en propre, des droits
   de tout rôle dont il est membre et des droits donnés à <literal>PUBLIC</literal>.
  </para>

  <para>
   Si <literal>WITH GRANT OPTION</literal> est précisé, celui qui reçoit le
   droit peut le transmettre à son tour (NDT&nbsp;: par la suite on parlera
   d'&laquo;&nbsp;option de transmission de droit&nbsp;&raquo;, là où en anglais il fait mention de
   &laquo;&nbsp;grant options&nbsp;&raquo;). Sans l'option GRANT, l'utilisateur ne peut
   pas le faire. Cette option ne peut pas être donnée à <literal>PUBLIC</literal>.
  </para>

  <para>
   Il n'est pas nécessaire d'accorder des droits au propriétaire d'un objet
   (habituellement l'utilisateur qui l'a créé) car, par défaut, le propriétaire possède tous les
   droits. (Le propriétaire peut toutefois choisir de révoquer
   certains de ses propres droits.) Le droit de supprimer un objet ou de
   modifier sa définition n'est pas décrit par un droit transmissible&nbsp;;
   il est inhérent au propriétaire et ne peut être ni donné ni
   enlevé. Le propriétaire possède également toutes les options de transmission de droits
   sur cet objet.
  </para>

  <para>
   En fonction du type de l'objet, les privilèges initiaux par défaut peuvent inclure
   la transmission de certains privilèges à <literal>PUBLIC</literal>. Par
   défaut, aucun accès public n'est accordé sur les tables, schémas et tablespaces&nbsp;;
   le droit de création de table <literal>CONNECT</literal> et <literal>TEMP</literal>
   est accordé sur les bases de données&nbsp;;
   le droit <literal>EXECUTE</literal> sur les fonctions&nbsp;; et le droit
   <literal>USAGE</literal> sur les langages. Le propriétaire de l'objet peut évidemment
   choisir de révoquer ces droits. (Pour un maximum de sécurité, 
   <command>REVOKE</command> est lancé dans la même transaction que la création de l'objet&nbsp;;
   ainsi, il n'y a pas de laps de temps pendant lequel un autre utilisateur 
   peut utiliser l'objet.)
  </para>

  <para>
   Les droits possibles sont&nbsp;:

   <variablelist>
    <varlistentry>
     <term>SELECT</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-select" endterm="sql-select-title"/> sur
       toutes les colonnes de la table, vue ou séquence indiquée. Autorise
       aussi l'utilisation de <xref linkend="sql-copy" endterm="sql-copy-title">
       TO.
       Ce droit est aussi nécessaire pour référencer des valeurs de colonnes
       existantes avec <xref linkend="sql-update" endterm="sql-update-title"/>
       ou <xref linkend="sql-delete" endterm="sql-delete-title"/>.
       Pour les séquences, ce droit autorise aussi l'utilisation de la
       fonction <function>currval</function>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>INSERT</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-insert" endterm="sql-insert-title"/> d'une
       nouvelle ligne dans la table indiquée. Autorise aussi
	   <xref linkend="sql-copy" endterm="sql-copy-title"/> FROM.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>UPDATE</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-update" endterm="sql-update-title"/> sur toute
       colonne de la table spécifiée. (En fait, toute commande
       <command>UPDATE</command> non triviale nécessite aussi le droit
       <literal>SELECT</literal> car elle doit référencer les colonnes pour
       déterminer les lignes à mettre à jour et/ou calculer les nouvelles
       valeurs des colonnes.) <literal>SELECT ... FOR UPDATE</literal>
       et <literal>SELECT ... FOR SHARE</literal> requièrent également ce droit
       en plus du droit <literal>SELECT</literal>.
       Pour les séquences, ce droit autorise l'utilisation des fonctions
       <function>nextval</function> et <function>setval</function>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>DELETE</term>
     <listitem>
      <para>
       Autorise <xref linkend="sql-delete" endterm="sql-delete-title"/> d'une
       ligne sur la table indiquée. (En fait, toute commande
       <command>DELETE</command> non triviale nécessite aussi le droit
       <literal>SELECT</literal> car elle doit référencer les colonnes pour
       déterminer les lignes à supprimer.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>REFERENCES</term>
     <listitem>
      <para>
       Ce privilège est requis sur la table de référence et la table qui référence pour
	   créer une contrainte de clé étrangère.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>TRIGGER</term>
     <listitem>
      <para>
       Autorise la création d'un déclencheur sur la table indiquée. (Voir
       l'instruction <xref linkend="sql-createtrigger" endterm="sql-createtrigger-title"/>.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>CREATE</term>
     <listitem>
      <para>
       Pour les bases de données, autorise la création de nouveaux schémas
       dans la base de données.
      </para>
      <para>
       Pour les schémas, autorise la création de nouveaux objets dans le schéma.
       Pour renommer un objet existant, il est nécessaire d'en être le propriétaire
       <emphasis>et</emphasis> de posséder ce droit sur le schéma qui le contient.
      </para>
      <para>
       Pour les tablespaces, autorise la création 
       de tables, d'index et de fichiers temporaires dans le tablespace et autorise la création de bases de
       données utilisant ce tablespace par défaut. (Révoquer ce
       privilège ne modifie pas l'emplacement des objets existants.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>CONNECT</term>
     <listitem>
      <para>
       Autorise l'utilisateur à se connecter à la base indiquée. Ce droit
       est vérifié à la connexion (en plus de la vérification des restrictions
       imposées par <filename>pg_hba.conf</filename>).
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>TEMPORARY</term>
     <term>TEMP</term>
     <listitem>
      <para>
       Autorise la création de tables temporaires lors de l'utilisation
       de la base de données spécifiée.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>EXECUTE</term>
     <listitem>
      <para>
       Autorise l'utilisation de la fonction indiquée et l'utilisation de tout
       opérateur défini sur cette fonction. C'est le seul type de
       droit applicable aux fonctions. (Cette syntaxe fonctionne aussi
       pour les fonctions d'agrégat.)
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>USAGE</term>
     <listitem>
      <para>
       Pour les langages procéduraux, autorise l'utilisation du langage
       indiqué pour la création de fonctions. C'est le seul
       type de droit applicable aux langages procéduraux.
      </para>
      <para>
       Pour les schémas, autorise l'accès aux objets contenus dans le schéma
       indiqué (en supposant que les droits des objets soient
       respectés). Cela octroie, pour l'essentiel, au bénéficiaire le 
       droit de <quote>consulter</quote> les objets contenus dans ce schéma.
       Sans ce droit, il est toujours possible de voir les noms des objets
       en lançant des requêtes sur les tables système. De plus, après avoir
       révoqué ce droit, les processus serveur existants pourraient recevoir
       des requêtes qui ont déjà réalisé cette recherche auparavant, donc ce
       n'est pas un moyen complètement sécurisé d'empêcher l'accès aux objets.
      </para>
      <para>
       Pour les séquences, ce droit autorise l'utilisation des fonctions
       <function>currval</function> et <function>nextval</function>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>ALL PRIVILEGES</term>
     <listitem>
      <para>
       Octroie tous les droits disponibles en une seule opération.
       Le mot clé <literal>PRIVILEGES</literal> est optionnel sous
       <productname>PostgreSQL</productname> mais est requis dans le standard SQL.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>

   Les droits requis par les autres commandes sont listés sur les pages de référence
   de ces commandes.
  </para>
 </refsect2>


 <refsect2 id="sql-grant-description-roles">
  <title>GRANT sur les rôles</title>

  <para>
   Cette variante de la commande <command>GRANT</command> définit l'appartenance
   d'un (ou plusieurs) rôle(s) à un autre. L'appartenance à un rôle est importante
   car elle offre tous les droits accordés à un rôle à l'ensemble de ses membres.
  </para>

  <para>
   Si <literal>WITH ADMIN OPTION</literal> est spécifié, le membre peut
   à la fois en octroyer l'appartenance à d'autres rôles, et la révoquer.
   Sans cette option, les utilisateurs ordinaires ne peuvent
   pas le faire. Toutefois, les superutilisateurs peuvent
   donner ou enlever à tout rôle l'appartenance à un rôle. Les rôles
   qui possèdent le droit <literal>CREATEROLE</literal> peuvent agir ainsi sur tout rôle
   qui n'est pas superutilisateur.
  </para>

  <para>
   Contrairement au cas avec les droits, l'appartenance à un rôle ne peut pas
   être donné à <literal>PUBLIC</literal>. Notez aussi que ce format de la
   commande n'autorise pas le mot <literal>GROUP</literal>.
  </para>
 </refsect2>
 </refsect1>


 <refsect1 id="sql-grant-notes">
  <title>Notes</title>

   <para>
    La commande <xref linkend="sql-revoke" endterm="sql-revoke-title"/> est
    utilisée pour retirer les droits d'accès.
   </para>

   <para>
    Quand un utilisateur, non propriétaire d'un objet, essaie d'octroyer des
    droits sur cet objet, la commande échoue si l'utilisateur
    n'a aucun droit sur l'objet. Tant que des privilèges existent, la commande
	s'exécute, mais n'octroie que les droits pour lesquels l'utilisateur dispose
	de l'option de transmission.
	Les formes <command>GRANT ALL PRIVILEGES</command> engendrent un message d'avertissement
	si aucune option de transmission de droit n'est détenue, tandis que les autres formes
	n'engendrent un message que lorsque les options de transmission du privilège concerné
	par la commande ne sont pas détenues. (Cela s'applique aussi au
    propriétaire de l'objet, mais comme on considère toujours que ce dernier détient
    toutes les options de transmission, le problème ne se pose jamais.)
   </para>

   <para>
    Les superutilisateurs de la base de données
    peuvent accéder à tous les objets sans tenir compte des droits qui les régissent.
    Cela est comparable aux droits de <literal>root</literal> sur un système
    Unix. Comme avec <literal>root</literal>, il est déconseillé d'opérer en tant que
    superutilisateur, sauf en cas d'impérieuse nécessité.
   </para>

   <para>
    Si un superutilisateur lance une commande <command>GRANT</command> ou
    <command>REVOKE</command>, tout se passe comme si la commande était exécutée
	par le propriétaire de l'objet concerné. Les droits octroyés par
    cette commande semblent ainsi l'avoir été par le propriétaire de l'objet.
    (L'appartenance à rôle, elle, semble être donnée par le rôle conteneur.)
   </para>

   <para>
    <command>GRANT</command> et <command>REVOKE</command> peuvent aussi être exécutées par un
    rôle qui n'est pas le propriétaire de l'objet considéré, mais est membre
    du rôle propriétaire de l'objet, ou membre du rôle titulaire du privilège
    <literal>WITH GRANT OPTION</literal> sur cet objet. Dans ce cas, les droits
    sont enregistrés comme donnés par le rôle propriétaire de l'objet ou 
	titulaire du privilège <literal>WITH GRANT OPTION</literal>.
	Par exemple, si la table <literal>t1</literal> appartient au
    rôle <literal>g1</literal>, dont le rôle <literal>u1</literal> est membre, alors
    <literal>u1</literal> peut donner les droits sur <literal>t1</literal> à <literal>u2</literal>,
    mais ces droits apparaissent octroyés directement par
    <literal>g1</literal>. Tout autre membre du rôle <literal>g1</literal> peut les révoquer par
	la suite.
   </para>

   <para>
    Si le rôle qui exécute <command>GRANT</command> détient, de manière indirecte,
	les droits souhaités à travers plus d'un niveau d'appartenance, il est difficile
	de prévoir le rôle reconnu comme fournisseur du privilège. Dans de tels cas,
	le meilleur moyen d'utiliser <command>SET ROLE</command> est de devenir le rôle
	qui doit octroyer les droits.
   </para>

   <para>
    Donner un droit sur une table n'étend pas automatiquement les droits
    sur les séquences utilisées par cette table, ceci incluant les
    séquences liées par des colonnes de type <type>SERIAL</type>. Les droits
    sur les séquences doivent être donnés séparément.
   </para>

   <para>
    Actuellement, <productname>PostgreSQL</productname> ne permet pas
    d'attribuer ou de révoquer des droits sur les colonnes individuelles d'une
    table. Une manière de mimer ce comportement consiste à créer une vue composée des
    colonnes désirées et d'attribuer les droits sur cette vue.
   </para>

   <para>
    La commande <command>\z</command> de <xref linkend="app-psql"/> permet
    d'obtenir des informations sur les droits existants, par exemple&nbsp;:
<programlisting>=&gt; \z matable
                        Access privileges for database "lusitania"
 Schema |  Name   | Type  |                     Access privileges
--------+---------+-------+-----------------------------------------------------------
 public | matable | table | {miriam=arwdxt/miriam,=r/miriam,"group todos=arw/miriam"}
(1 row)
</programlisting>
    Les entrées affichées par <command>\z</command> sont interprétées
    ainsi&nbsp;:
<programlisting>      rolename=xxxx -- privileges granted to a role
              =xxxx -- privileges granted to PUBLIC


                  r -- SELECT ("lecture")
                  w -- UPDATE ("écriture")
                  a -- INSERT ("ajout")
                  d -- DELETE
                  x -- REFERENCES
                  t -- TRIGGER
                  X -- EXECUTE
                  U -- USAGE
		  C -- CREATE
		  c -- CONNECT
                  T -- TEMPORARY
             arwdxt -- ALL PRIVILEGES (pour les tables)
                  * -- option de transmission du privilège qui précède

              /yyyy -- role qui a donné le droit
</programlisting>

    L'exemple ci-dessus présente ce que voit l'utilisatrice
    <literal>miriam</literal> après la création de la table <literal>matable</literal> et
    l'exécution de&nbsp;:

<programlisting>GRANT SELECT ON matable TO PUBLIC;
GRANT SELECT, UPDATE, INSERT ON matable TO admin;
</programlisting>
   </para>

   <para>
   Si la colonne <quote>Access privileges</quote> est vide pour un objet donné, cela
   signifie que l'objet possède les droits par défaut (c'est-à-dire que la
   colonne des droits est NULL). Les droits par défaut incluent toujours les
   droits complets pour le propriétaire et peuvent inclure quelques droits pour
   <literal>PUBLIC</literal> en fonction du type d'objet comme cela est expliqué plus haut. Le
   premier <command>GRANT</command> ou <command>REVOKE</command> sur un objet instancie les
   droits par défaut (produisant, par exemple,
   <literal>{=,miriam=arwdxt/miriam}</literal>) puis les modifie en fonction de la requête
   spécifiée.
   </para>

   <para>
    Les options de transmission de privilèges implicites du propriétaire ne sont pas indiquées
    dans l'affichage des droits d'accès. Une <literal>*</literal> apparaît uniquement
    lorsque les options de transmission ont été explicitement octroyées.
   </para>
 </refsect1>

 <refsect1 id="sql-grant-examples">
  <title>Exemples</title>

  <para>
   Donner le droit d'insertion à tous les utilisateurs sur la table
   <literal>films</literal>&nbsp;:

<programlisting>GRANT INSERT ON films TO PUBLIC;
</programlisting>
  </para>

  <para>
   Donner tous les droits possibles à l'utilisateur <literal>manuel</literal> sur la vue
   <literal>genres</literal>&nbsp;:

<programlisting>GRANT ALL PRIVILEGES ON genres TO manuel;
</programlisting>

   Bien que la commande ci-dessus donne tous les droits lorsqu'elle
   est exécutée par un superutilisateur ou par le propriétaire de
   <literal>genres</literal>, exécutée par quelqu'un d'autre, elle
   n'accorde que les droits pour lesquels cet utilisateur possède l'option de transmission.
  </para>

  <para>
   Rendre <literal>joe</literal> membre de <literal>admins</literal>&nbsp;:

<programlisting>GRANT admins TO joe;
</programlisting>
  </para>
 </refsect1>

 <refsect1 id="sql-grant-compatibility">
  <title>Compatibilité</title>
    
   <para>
    Conformément au standard SQL, le mot clé <literal>PRIVILEGES</literal>
    est requis dans <literal>ALL PRIVILEGES</literal>. Le standard SQL
    n'autorise pas l'initialisation des droits sur plus d'un objet par commande.
   </para>

   <para>
    <productname>PostgreSQL</productname> autorise un propriétaire d'objet
    à révoquer ses propres droits ordinaires&nbsp;: par exemple, le
    propriétaire d'un objet peut le placer en lecture seule pour lui-même en
    révoquant ses propres droits INSERT, UPDATE et DELETE. Le standard SQL
	ne l'autorise pas. La raison en est que 
    <productname>PostgreSQL</productname> traite les droits du propriétaire
    comme ayant été donnés par le propriétaire&nbsp;; il peut, de ce fait, aussi les
    révoquer. Dans le standard SQL, les droits du propriétaire sont donnés par
    une entité <quote>_SYSTEM</quote>. N'étant pas <quote>_SYSTEM</quote>, le propriétaire
    ne peut pas révoquer ces droits.
   </para>

   <para>
    <productname>PostgreSQL</productname> ne dispose pas de la fonctionnalité
    du standard SQL qui autorise l'ajout de droits pour certaines colonnes
    spécifiques d'une table.
   </para>

   <para>
    Le standard SQL fournit un droit <literal>USAGE</literal> sur d'autres
    types d'objet&nbsp;: jeux de caractères, collations, conversions,
    domaines.
   </para>

   <para>
    Les droits sur les bases de données, tablespaces, langages, schémas et
    séquences sont des extensions <productname>PostgreSQL</productname>.
   </para>
 </refsect1>


 <refsect1>
  <title>Voir aussi</title>

  <simpara>
   <xref linkend="sql-revoke" endterm="sql-revoke-title"/>
  </simpara>
 </refsect1>

</refentry>
