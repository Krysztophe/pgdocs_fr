<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/pg_resetxlog.sgml,v 1.7 2005/09/15 07:03:27 guillaume Exp $
PostgreSQL documentation
-->
<!-- SAS 20060914 : Relecture initiale -->

<refentry id="app-pgresetxlog">
 <refmeta>
  <refentrytitle id="app-pgresetxlog-title"><application>pg_resetxlog</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_resetxlog</refname>
  <refpurpose>réinitialiser les WAL et les autres informations de contrôle d'une
   grappe de bases de données <productname>PostgreSQL</productname></refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_resetxlog</command>
   <arg>-f</arg>
   <arg>-n</arg>
   <arg>-o<replaceable class="parameter">oid</replaceable> </arg>
   <arg>-x <replaceable class="parameter">xid</replaceable> </arg>
   <arg>-e <replaceable class="parameter">xid_epoch</replaceable> </arg>
   <arg>-m <replaceable class="parameter">mxid</replaceable> </arg>
   <arg>-O <replaceable class="parameter">mxoff</replaceable> </arg>
   <arg>-l <replaceable class="parameter">timelineid</replaceable>,<replaceable class="parameter">fileid</replaceable>,<replaceable class="parameter">seg</replaceable> </arg>
   <arg choice="plain"><replaceable>rép_données</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1 id="r1-app-pgresetxlog-1">
  <title>Description</title>
  <para>
   <command>pg_resetxlog</command> efface les jouranux d'écritures anticipées
   (<foreignphrase>Write-Ahead Log</foreignphrase> ou WAL) et réinitialise
   optionnellement quelques autres informations de contrôle stockées dans le fichier
   <filename>pg_control</filename>. Cette fonction est parfois nécessaire si ces
   fichiers ont été corrompus. Elle ne doit être utilisée qu'en dernier
   ressort quand le serveur ne démarre plus du fait d'une telle corruption.
  </para>

  <para>
   À la suite de cette commande, le serveur doit pouvoir redémarrer. Toutefois, 
   il ne faut pas perdre de vue que la base de données peut contenir des 
   données inconsistantes du fait de transactions partiellement validées.
   Il est alors opportun de sauvegarder les données, lancer 
   <command>initdb</command> et de les recharger. Après cela, les inconsistances 
   doivent être recharchées et le cas échéant corrigées.
  </para>

  <para>
   Seul l'utilisateur qui a installé le serveur peut utiliser cet outil.
   Il requiert, en effet, un accès en lecture/écriture au répertoire
   des données. Pour des raisons de sécurité, <command>pg_resetxlog</command>
   n'utilise pas la variable d'environnement <envar>PGDATA</envar>. Le répertoire
   des données doit donc être précisé sur la ligne de commande.
  </para>

  <para>
<!-- ICI -->   
   Si <command>pg_resetxlog</command> se plaint de ne pas pouvoir déterminer de
   données valides pour <filename>pg_control</filename>, vous pouvez malgré tout le
   forcer à continuer en spécifiant l'option <literal>-f</literal> (force). Dans ce
   cas, des valeurs probables sont substituées aux données manquantes. La
   plupart des champs correspondent mais une aide manuelle pourrait être
   nécessaire pour le prochain OID, le prochain TID et sa date, le prochain ID
   multi-transaction et son décalage, l'adresse de début des WAL et les
   champs locale des bases de données. Les six premiers
   peuvent être initialisés en utilisant les options discutées plus bas. Le
   propre environnement de <command>pg_resetxlog</command> est la source de ses
   suppositions quant aux champs locale&nbsp;; faites attention que
   <envar>LANG</envar> et d'autres correspondent à l'environnement avec lequel
   <command>initdb</command> a été exécuté. Si vous n'êtes pas capable de déterminer
   les bonnes valeurs pour tous ces champs, <literal>-f</literal> peut toujours être
   utilisé mais la base de données récupérée doit être traitée avec encore plus
   de suspicion que d'habitude&nbsp;: une sauvegarde immédiate et un
   rechargement sont impératifs. <emphasis>Ne pas</emphasis> exécuter d'opérations de
   modifications de données dans la base avant de sauvegarder&nbsp;; ce type
   d'action risque de faire empirer la corruption.
  </para>

  <para>
   Les options <literal>-o</literal>, <literal>-x</literal>, <literal>-e</literal>,
   <literal>-m</literal>, <literal>-O</literal> et <literal>-l</literal> permettent
   d'initialiser manuellement le prochain OID, le prochain TID et sa date, le prochain ID
   multitransaction, son décalage et l'adresse de début des WAL. Elles sont
   seulement nécessaires si <command>pg_resetxlog</command> est incapable de
   déterminer les valeurs appropriées en lisant <filename>pg_control</filename>. Les
   valeurs saines pour le prochain ID en transaction peuvent se déterminer
   ainsi&nbsp;:

   <itemizedlist>
    <listitem>
     <para>
      Une bonne valeur du prochain ID de transaction (<literal>-x</literal>) peut être
      déterminée en recherchant le fichier le plus large numériquement dans le
      répertoire <filename>pg_clog</filename> sous le répertoire des données, en
      ajoutant un et en multipliant par 1048576. Notez que les noms de fichiers
      sont en hexadécimal. Il est habituellement plus facile de spécifier la
      valeur de l'option en hexadécimal aussi. Par exemple, si <filename>0011</filename>
      est l'entrée la plus large dans <filename>pg_clog</filename>, <literal>-x
      0x1200000</literal> fonctionnera (cinq zéros à la fin fournissent le bon
      multiplieur).
     </para>
    </listitem>

    <listitem>
     <para>
      Une valeur saine pour le prochain ID multitransaction (<literal>-m</literal>)
      peut être déterminée en recherchant le nom de fichier le plus important
      numériquement dans le sous-répertoire <filename>pg_multixact/offsets</filename>
      du répertoire data, en lui ajoutant un, puis en le multipliant par 65536.
      Comme ci-dessus, les noms de fichiers sont en hexadécimal, donc la façon
      la plus simple de le faire est de spécifier la valeur de l'option en
      hexadécimal et de lui ajouter quatre zéros.
     </para>
    </listitem>

    <listitem>
     <para>
      Une valeur saine pour le prochain décalage multitransaction 
      (<literal>-O</literal>) peut être déterminée en recherchant le nom de fichier le
      plus important numériquement dans le sous-répertoire
      <filename>pg_multixact/members</filename> du répertoire data, en lui ajoutant
      un, puis en le multipliant par 65536. Comme ci-dessus, les noms de
      fichiers sont en hexadécimal, donc la façon la plus simple de le faire
      est de spécifier la valeur de l'option en hexadécimal et de lui ajouter
      quatre zéros.
     </para>
    </listitem>

    <listitem>
     <para>
      L'adresse de début des WAL doit être plus large que tout numéro de
      fichier déjà existant dans le répertoire <filename>pg_xlog</filename> sous le
      répertoire des données. Ces noms sont aussi en hexadécimal et ont trois
      parties. La première est le <quote>timeline ID</quote> et doit habituellement
      être conservée identique. Ne choisissez pas de valeur plus importante que
      255 (<literal>0xFF</literal>) pour la troisième partie&nbsp;; à la place,
      incrémentez la deuxième partie et réinitialisez la troisième partie à 0.
      Par exemple, si <filename>00000001000000320000004A</filename> est l'entrée la
      plus importante de <filename>pg_xlog</filename>, <literal>-l 0x1,0x32,0x4B</literal>
      fonctionnera&nbsp;; mais si l'entrée la plus importante est
      <filename>000000010000003A000000FF</filename>, choisissez <literal>-l 0x1,0x3B,0x0</literal>
      ou plus.
     </para>
    </listitem>

    <listitem>
     <para>
      Il n'y a pas de façon plus simple pour déterminer un OID suivant qui
      se trouve après celui de la base de données mais, heureusement, il n'est
      pas critique d'obtenir le bon OID suivant.
     </para>
    </listitem>

    <listitem>
     <para>
      La valeur epoch de l'identifiant de transaction n'est pas réellement
      stockée dans la base, sauf dans le champ qui est initialisé par
      <command>pg_resetxlog</command>, donc toute valeur sera correcte en
      ce qui concerne la base de données elle-même. Vous pourrez avoir
      besoin d'ajuster cette valeur pour vous assurer que les systèmes de
      réplication comme <application>Slony-I</application> fonctionnent
      correctement &mdash; dans ce cas, une valeur appropriée doit être
      obtenue à partir de l'état de la base répliquée.
     </para>
    </listitem>
   </itemizedlist>
  </para>

  <para>
   L'option <literal>-n</literal> (sans opération) demande à
   <command>pg_resetxlog</command> d'afficher les valeurs reconstruites à partir
   de <filename>pg_control</filename> puis quitte sans rien modifier. C'est
   principalement un outil de débogage mais qui peut être utile pour une
   vérification avant de permettre à <command>pg_resetxlog</command> de
   traiter réellement la base.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Cette commande ne doit pas être utilisée si le serveur est en cours
   d'exécution. <command>pg_resetxlog</command> refuse de se lancer s'il
   trouve un fichier de verrouillage du serveur dans le répertoire des données&nbsp;;
   Si le serveur s'est arrêté brutalement, il peut subsister un tel fichier.
   Dans ce cas, vous pouvez supprimer le fichier de verrouillage pour permettre
   à <command>pg_resetxlog</command> de se lancer. Mais avant de le faire, soyez
   doublement certain qu'il n'y a pas de processus serveur en cours.
  </para>
 </refsect1>

</refentry>
