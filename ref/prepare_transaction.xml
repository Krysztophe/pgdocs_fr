<?xml version="1.0" encoding="UTF-8"?>
<!-- Dernière modification
     le       $Date$
     par      $Author$
     révision $Revision$ -->
<!-- SAS 20060228 pour la relecture -->

<refentry id="sql-prepare-transaction">
 <refmeta>
  <refentrytitle id="sql-prepare-transaction-title">PREPARE TRANSACTION</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>PREPARE TRANSACTION</refname>
  <refpurpose>prépare la transaction en cours pour une validation en deux phases</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>PREPARE TRANSACTION <replaceable class="parameter">id_transaction</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-prepare-transaction">
   <primary>PREPARE TRANSACTION</primary>
  </indexterm>


  <para>
   <command>PREPARE TRANSACTION</command> prépare la transaction courante en vue
   d'une validation en deux phases. À la suite de cette commande, la transaction n'est
   plus associée à la session courante&nbsp;; au lieu de cela, son état est
   entièrement stocké sur disque. La probabilité est donc forte qu'elle
   puisse être validée avec succès, y compris en cas d'arrêt brutal de la base de
   données avant la demande de validation.
  </para>

  <para>
   Une fois préparée, une transaction peut être validée ou annulée ultérieurement
   par, respectivement, <xref linkend="sql-commit-prepared"
   endterm="sql-commit-prepared-title"/> et <xref linkend="sql-rollback-prepared"
   endterm="sql-rollback-prepared-title"/>. Ces commandes peuvent être exécutées
   à partir d'une session quelconque. Il n'est pas nécessaire de le faire depuis
   celle qui a exécuté la transaction initiale.
  </para>

  <para>
   Du point de vue de la session l'initiant, <command>PREPARE
   TRANSACTION</command> diffère peu de la commande
   <command>ROLLBACK</command>&nbsp;: après son exécution, il n'y a plus de transaction
   active et les effets de la transaction préparée ne sont plus visibles. (Les
   effets redeviendront visibles si la transaction est validée.)
  </para>

  <para>
   Si la commande <command>PREPARE TRANSACTION</command> échoue, quelqu'en soit
   la raison, elle devient une commande <command>ROLLBACK</command>&nbsp;: la
   transaction courante est annulée.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="parameter">id_transaction</replaceable></term>
    <listitem>
     <para>
      Un identifiant arbitraire de la transaction pour les
      commandes <command>COMMIT PREPARED</command> et <command>ROLLBACK PREPARED</command>.
      L'identifiant, obligatoirement de type chaîne littérale, doit être
      d'une longueur inférieure à 200 octets. Il ne peut être identique à un autre
      identifiant de transaction préparée.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Cette commande doit être utilisée dans un bloc de transaction, initié par
   <xref linkend="sql-begin" endterm="sql-begin-title"/>.
  </para>

  <para>
   Il n'est actuellement pas possible de préparer
   (<command>PREPARE</command>) une transaction qui a exécuté des opérations
   impliquant des tables temporaires ou qui a créé des curseurs
   <literal>WITH HOLD</literal>, ou qui a exécuté <command>LISTEN</command>
   ou <command>UNLISTEN</command>. Ces fonctionnalités sont trop intégrées
   à la session en cours pour avoir la moindre utilité dans une transaction
   préparée.
  </para>

  <para>
   Si la transaction a modifié des paramètres en exécution à l'aide de la commande <command>SET</command>
   (sans l'option <literal>LOCAL</literal>),
ces effets persistent au-delà du <command>PREPARE TRANSACTION</command> et ne seront
   pas affectés par les commandes <command>COMMIT PREPARED</command> et
   <command>ROLLBACK PREPARED</command>. Du coup, dans ce cas,
   <command>PREPARE TRANSACTION</command> agit plus comme <command>COMMIT</command> que comme
   <command>ROLLBACK</command>.
  </para>

  <para>
   Toutes les transactions préparées disponibles sont listées dans
   la vue système <link linkend="view-pg-prepared-xacts"><structname>pg_prepared_xacts</structname></link>.
  </para>

  <para>
   Pour des raisons de performances, il est préférable de ne pas
   conserver trop longtemps des transactions préparées dans cet état&nbsp;;
   cela compromet, par exemple, les possibilités de récupération de l'espace 
   par <command>VACUUM</command>. 
   Il ne faut pas oublier non plus qu'une telle transaction maintient
   les verrous qu'elle a posé.
   L'usage principal de cette fonctionnalité consiste à valider ou annuler une
   transaction préparée dès lors qu'un gestionnaire de transactions externe
   a pu s'assurer que les autres bases de données sont préparées à la validation.
  </para>

  <para>
   Dans le cas où une utilisation importante des transactions préparées est
   envisagé, il peut être utile d'augmenter la valeur de 
   <xref linkend="guc-max-prepared-transactions"/> car sa valeur par défaut est assez
   petite (pour éviter d'utiliser inutilement des ressources lorsqu'aucun usage
   des transactions préparées n'est fait). Il est recommandé de mettre une valeur au moins identique à
   <xref linkend="guc-max-connections"/>, de façon à ce que chaque session puisse
   créer une transaction préparée.
  </para>
 </refsect1>

 <refsect1 id="sql-prepare-transaction-examples">
  <title id="sql-prepare-transaction-examples-title">Exemples</title>
  <para>
   Préparer la transaction en cours pour une validation en deux phases en
   utilisant <literal>foobar</literal> comme identifiant de transaction&nbsp;:
   
<programlisting>PREPARE TRANSACTION 'foobar';
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-commit-prepared" endterm="sql-commit-prepared-title"/></member>
   <member><xref linkend="sql-rollback-prepared" endterm="sql-rollback-prepared-title"/></member>
  </simplelist>
 </refsect1>

</refentry>
