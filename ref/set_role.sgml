<!--
$PostgreSQL: pgsql/doc/src/sgml/ref/set_role.sgml,v 1.2 2005/07/26 23:24:02 tgl Exp $
PostgreSQL documentation
-->

<refentry id="SQL-SET-ROLE">
 <refmeta>
  <refentrytitle id="sql-set-role-title">SET ROLE</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>SET ROLE</refname>
  <refpurpose>initialise l'identifiant de l'utilisateur en cours pour la session
    utilisée</refpurpose>
 </refnamediv>

 <indexterm zone="sql-set-role">
  <primary>SET ROLE</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
SET [ SESSION | LOCAL ] ROLE <replaceable class="parameter">nomrôle</replaceable>
SET [ SESSION | LOCAL ] ROLE NONE
RESET ROLE
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   Cette commande configure l'identifiant de l'utilisateur courant suivant le
   contexte de la session SQL en cours avec <replaceable
   class="parameter">nomrôle</replaceable>. Le nom du rôle peut être écrit
   soit avec un identifiant soit avec une chaîne littérale. Après <command>SET
   ROLE</>, la vérification des droits des commandes SQL dépend du rôle nommé
   comme s'il s'agissait de celui utilisé pour la connexion initiale.
  </para>

  <para>
   Le paramètre <replaceable class="parameter">nomrôle</replaceable> spécifié
   doit être un rôle dont l'utilisateur de la session en cours fait partie.
   (Si l'utilisateur de la session est un superutilisateur, tous les rôles sont
   utilisables.)
  </para>

  <para>
   Les modifieurs <literal>SESSION</> et <literal>LOCAL</> agissent de la même
   façon que pour la commande <xref linkend="SQL-SET" endterm="SQL-SET-title">.
  </para>

  <para>
   Les formes <literal>NONE</> et <literal>RESET</> réinitialisent l'identifiant
   de l'utilisateur à la valeur initiale lors de la connexion. Ces formes
   peuvent être exécutées par tout utilisateur.
  </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   En utilisant cette commande, il est possible soi d'ajouter des droits soit
   de supprimer des droits à quelqu'un. Si le rôle de l'utilisateur de la
   session comprend l'attribut <literal>INHERITS</>, alors il a automatiquement
   tous les droits de chaque rôle que lui donne <command>SET ROLE</>&nbsp;; dans
   ce cas, <command>SET ROLE</> supprime en fait tous les droits affectés
   directement par l'utilisateur de la session et les autres droits des rôles
   dont il est membre, laissant seulement les droits disponibles sur le rôle
   nommé. Autrement, si le rôle de l'utilisateur de la session dispose de
   l'attribut <literal>NOINHERITS</>, <command>SET ROLE</> supprime les droits
   affectés directement à l'utilisateur de la session et acquiert à la place les
   droits disponibles par le rôle nommé.
  </para>

  <para>
   En particulier, quand un utilisateur choisit un rôle autre que
   superutilisateur via <command>SET ROLE</>, il perd les droits de
   superutilisateur.
  </para>

  <para>
   <command>SET ROLE</> a des effets comparables à
   <xref linkend="sql-set-session-authorization"
   endterm="sql-set-session-authorization-title"> mais la vérification des
   droits impliqués est assez différente. De plus,
   <command>SET SESSION AUTHORIZATION</> détermine quels rôles sont autorisables
   pour les prochaines commandes <command>SET ROLE</> alors que changer de rôle
   avec <command>SET ROLE</> ne modifie pas l'ensemble des rôles autorisés par
   un futur <command>SET ROLE</>.
  </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

<programlisting>
SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | peter

SET ROLE 'paul';

SELECT SESSION_USER, CURRENT_USER;

 session_user | current_user 
--------------+--------------
 peter        | paul
</programlisting>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   <productname>PostgreSQL</productname> autorise la syntaxe de l'identifiant
   allows identifier syntax (<literal>"rolename"</literal>) alors que le SQL
   standard requiert que le nom du rôle soit écrit comme une chaîne littérale.
   SQL n'autorise pas cette commande lors d'une transaction&nbsp;;
   <productname>PostgreSQL</productname> ne fait pas cette restriction parce
   qu'il n'existe pas de raison de la faire. Les modifieurs
   <literal>SESSION</> et <literal>LOCAL</> sont une extension
   <productname>PostgreSQL</productname> ainsi que la syntaxe <literal>RESET</>.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="sql-set-session-authorization" endterm="sql-set-session-authorization-title"></member>
  </simplelist>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
