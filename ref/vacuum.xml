<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/vacuum.sgml,v 1.9 2005/09/15 07:03:28 guillaume Exp $
PostgreSQL documentation
-->
<!-- SAS 20060327 : Correction de tags -->

<refentry id="sql-vacuum">
 <refmeta>
  <refentrytitle id="sql-vacuum-title">VACUUM</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>VACUUM</refname>
  <refpurpose>récupère l'espace inutilisé et, optionnellement, analyse une base</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
<synopsis>VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] [ <replaceable
class="parameter">table</replaceable> ]
VACUUM [ FULL ] [ FREEZE ] [ VERBOSE ] ANALYZE [ <replaceable
class="parameter">table</replaceable> [ (<replaceable
class="parameter">colonne</replaceable> [, ...] ) ] ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>
  <indexterm zone="sql-vacuum">
   <primary>VACUUM</primary>
  </indexterm>


  <para>
   <command>VACUUM</command> récupère l'espace de stockage occupé par des 
   lignes mortes.
   Lors des opérations normales de <productname>PostgreSQL</productname>, 
   les lignes supprimées ou rendues obsolètes par une mise à jour
   ne sont pas physiquement supprimées de leur table. Elles restent présentes
   jusqu'à ce qu'un <command>VACUUM</command> soit lancé.
   C'est pourquoi, il est nécessaire de faire un <command>VACUUM</command>
   régulièrement, spécialement sur les tables fréquemment mises à jour.
  </para>

  <para>
   Sans paramètre, <command>VACUUM</command> traite toutes les tables de la 
   base de données courante. Avec un paramètre,  <command>VACUUM</command>
   ne traite que cette table.
  </para>

  <para>
   <command>VACUUM ANALYZE</command> fait un <command>VACUUM</command>,
   puis un <command>ANALYZE</command> sur chaque table sélectionnée.
   C'est une combinaison pratique pour les scripts de maintenance de
   routine. Voir 
   <xref linkend="sql-analyze" endterm="sql-analyze-title"/> pour avoir 
   plus de détails sur ce qu'il traite.
  </para>

  <para>
   Le <command>VACUUM</command> standard (sans <literal>FULL</literal>) récupère
   simplement l'espace et le rend disponible pour une réutilisation.
   Cette forme de la commande peut opérer en parallèle avec les opérations
   normales de lecture et d'écriture de la table, car elle n'utilise pas de 
   verrou exclusif.
   <command>VACUUM FULL</command> fait un traitement plus complet et, en 
   particulier, déplace des lignes dans d'autres blocs pour compacter la 
   table au maximum sur le disque. Cette forme est beaucoup plus lente et 
   pose un verrou exclusif sur la table pour faire son traitement.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><literal>FULL</literal></term>
    <listitem>
     <para>
      Choisit un vacuum <quote>full</quote>, qui récupère plus d'espace,
      mais est beaucoup plus long et prend un verrou exclusif sur la table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>FREEZE</literal></term>
    <listitem>
     <para>
      Choisit un <quote>gel</quote> agressif des lignes.
      Indiquer <literal>FREEZE</literal> est équivalent à réaliser un
      <command>VACUUM</command> avec le paramètre
      <xref linkend="guc-vacuum-freeze-min-age"/> configuré à zéro. L'option
      <literal>FREEZE</literal> est obsolète et sera supprimée dans une version
      future&nbsp;; configurez ce paramètre à la place.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>VERBOSE</literal></term>
    <listitem>
     <para>
      Affiche un rapport détaillé de l'activité de vacuum sur chaque table.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><literal>ANALYZE</literal></term>
    <listitem>
     <para>
      Met à jour les statistiques utilisées par l'optimiseur pour
      déterminer la méthode la plus efficace pour exécuter une
      requête.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">table</replaceable></term>
    <listitem>
     <para>
      Le nom (optionnellement qualifié par le nom d'un schéma) d'une table à
      traiter par vacuum. Par défaut, toutes les tables de la base de
      données courante sont traitées.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="parameter">colonne</replaceable></term>
    <listitem>
     <para>
      Le nom d'une colonne spécifique à analyser. Par défaut, toutes les
      colonnes.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Sorties</title>

   <para>
    Lorsque <literal>VERBOSE</literal> est précisé, <command>VACUUM</command> indique sa
    progression par des messages indiquant la table en cours
    de traitement. Différentes statistiques sur les tables sont aussi
    affichées.
   </para>
 </refsect1>

 <refsect1>
  <title>Notes</title>

   <para>
    <command>VACUUM</command> ne peut pas être exécuté à l'intérieur
    d'un bloc de transactions.
   </para>

   <para>
    Nous recommandons que les bases de données actives de production soient
    traitées par vacuum fréquemment (au moins toutes les nuits), pour supprimer
    les lignes mortes. Après avoir ajouté ou supprimé un grand nombre de
    lignes, il peut être utile de faire un <command>VACUUM ANALYZE</command> 
    sur la table affectée. Cela met les catalogues système à jour
    de tous les changements récents et permet à l'optimiseur de
    requêtes de <productname>PostgreSQL</productname> de faire de meilleurs
    choix lors de l'optimisation des requêtes.
   </para>

   <para>
    L'option <option>FULL</option> n'est pas recommandée en usage normal, mais
    elle peut être utile dans certains cas. Par exemple, si vous avez supprimé
    ou mis à jour l'essentiel des lignes d'une table et si vous voulez que la table diminue
    physiquement sur le disque pour n'occuper que l'espace réellement 
    nécessaire et pour que les parcours de table soient plus rapides.
    Généralement, <command>VACUUM FULL</command> réduit plus la table qu'un 
    simple <command>VACUUM</command>.
    L'option <option>FULL</option> ne réduit pas la taille des index&nbsp;; un
    <command>REINDEX</command> périodique est toujours recommandé. En fait, il
    est souvent plus rapide de supprimer tous les index, d'exécuter un
    <command>VACUUM FULL</command> puis de recréer les index.
   </para>

   <para>
    <command>VACUUM</command> peut engendrer une
    augmentation substantielle du trafic en entrées/sorties pouvant causer
    des performances diminuées pour les autres sessions actives. Du coup,
    il est quelque fois conseillé d'utiliser la fonctionnalité du délai du
    vacuum basé sur le coût. Voir <xref
    linkend="runtime" endterm="runtime-config-resource-vacuum-cost-title"/>
    pour des informations supplémentaires.
   </para>

   <para>
    <productname>PostgreSQL</productname> inclut un <quote>autovacuum</quote>
    qui peut automatiser la maintenance par VACUUM. Pour plus d'informations
    sur le VACUUM automatique et manuel, voir
    <xref linkend="routine-vacuuming"/>.
   </para>
 </refsect1>

 <refsect1>
  <title>Exemples</title>

  <para>
   Ce qui suit est un exemple de lancement de <command>VACUUM</command>
   sur une table de la base de données regression.

<programlisting>regression=# VACUUM VERBOSE ANALYZE onek;
INFO:  vacuuming "public.onek"
INFO:  index "onek_unique1" now contains 1000 tuples in 14 pages
DETAIL:  3000 index tuples were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.01s/0.08u sec elapsed 0.18 sec.
INFO:  index "onek_unique2" now contains 1000 tuples in 16 pages
DETAIL:  3000 index tuples were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.00s/0.07u sec elapsed 0.23 sec.
INFO:  index "onek_hundred" now contains 1000 tuples in 13 pages
DETAIL:  3000 index tuples were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.01s/0.08u sec elapsed 0.17 sec.
INFO:  index "onek_stringu1" now contains 1000 tuples in 48 pages
DETAIL:  3000 index tuples were removed.
0 index pages have been deleted, 0 are currently reusable.
CPU 0.01s/0.09u sec elapsed 0.59 sec.
INFO:  "onek": removed 3000 tuples in 108 pages
DETAIL:  CPU 0.01s/0.06u sec elapsed 0.07 sec.
INFO:  "onek": found 3000 removable, 1000 nonremovable tuples in 143 pages
DETAIL:  0 dead tuples cannot be removed yet.
There were 0 unused item pointers.
0 pages are entirely empty.
CPU 0.07s/0.39u sec elapsed 1.56 sec.
INFO:  analyzing "public.onek"
INFO:  "onek": 36 pages, 1000 rows sampled, 1000 estimated total rows
VACUUM
</programlisting>
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Il n'y a pas de commande <command>VACUUM</command> dans le standard SQL.
  </para>
 </refsect1>

 <refsect1>
  <title>Voir aussi</title>

  <simplelist type="inline">
   <member><xref linkend="app-vacuumdb" endterm="app-vacuumdb-title"/></member>
   <member><xref linkend="runtime-config-resource-vacuum-cost" endterm="runtime-config-resource-vacuum-cost-title"/></member>
  </simplelist>
 </refsect1>
</refentry>
