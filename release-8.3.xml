<?xml version="1.0" encoding="ISO-8859-15"?>
<!-- Dernière modification
     le       $Date: 2009-05-03 13:57:02 +0200 (dim. 03 mai 2009) $
     par      $Author: gleu $
     révision $Revision: 1317 $ -->

 <sect1 id="release-8-3-9">
  <title>Release 8.3.9</title>

  <note>
  <title>Release date</title>
  <simpara>2009-12-14</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.3.8.
   For information about new features in the 8.3 major release, see
   <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.3.9</title>

   <para>
    A dump/restore is not required for those running 8.3.X.
    However, if you are upgrading from a version earlier than 8.3.8,
    see the release notes for 8.3.8.
   </para>

  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
     <para>
      Protect against indirect security threats caused by index functions
      changing session-local state (Gurjeet Singh, Tom)
     </para>

     <para>
      This change prevents allegedly-immutable index functions from possibly
      subverting a superuser's session (CVE-2009-4136).
     </para>
    </listitem>

    <listitem>
     <para>
      Reject SSL certificates containing an embedded null byte in the common
      name (CN) field (Magnus)
     </para>

     <para>
      This prevents unintended matching of a certificate to a server or client
      name during SSL validation (CVE-2009-4034).
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash during backend-startup-time cache initialization (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid crash on empty thesaurus dictionary (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent signals from interrupting <literal>VACUUM</literal> at unsafe times
      (Alvaro)
     </para>

     <para>
      This fix prevents a PANIC if a <literal>VACUUM FULL</literal> is cancelled
      after it's already committed its tuple movements, as well as transient
      errors if a plain <literal>VACUUM</literal> is interrupted after having
      truncated the table.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash due to integer overflow in hash table size
      calculation (Tom)
     </para>

     <para>
      This could occur with extremely large planner estimates for the size of
      a hashjoin's result.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix very rare crash in <type>inet</type>/<type>cidr</type> comparisons (Chris
      Mikkelson)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that shared tuple-level locks held by prepared transactions are
      not ignored (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix premature drop of temporary files used for a cursor that is accessed
      within a subtransaction (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix memory leak in syslogger process when rotating to a new CSV logfile
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix Windows permission-downgrade logic (Jesse Morris)
     </para>

     <para>
      This fixes some cases where the database failed to start on Windows,
      often with misleading error messages such as <quote>could not locate
      matching postgres executable</quote>.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect logic for GiST index page splits, when the split depends
      on a non-first column of the index (Paul Ramsey)
     </para>
    </listitem>

    <listitem>
     <para>
      Don't error out if recycling or removing an old WAL file fails at the
      end of checkpoint (Heikki)
     </para>

     <para>
      It's better to treat the problem as non-fatal and allow the checkpoint
      to complete.  Future checkpoints will retry the removal.  Such problems
      are not expected in normal operation, but have been seen to be
      caused by misdesigned Windows anti-virus and backup software.
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure WAL files aren't repeatedly archived on Windows (Heikki)
     </para>

     <para>
      This is another symptom that could happen if some other process
      interfered with deletion of a no-longer-needed file.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix PAM password processing to be more robust (Tom)
     </para>

     <para>
      The previous code is known to fail with the combination of the Linux
      <literal>pam_krb5</literal> PAM module with Microsoft Active Directory as the
      domain controller.  It might have problems elsewhere too, since it was
      making unjustified assumptions about what arguments the PAM stack would
      pass to it.
     </para>
    </listitem>

    <listitem>
     <para>
      Raise the maximum authentication token (Kerberos ticket) size in GSSAPI
      and SSPI authentication methods (Ian Turner)
     </para>

     <para>
      While the old 2000-byte limit was more than enough for Unix Kerberos
      implementations, tickets issued by Windows Domain Controllers can be
      much larger.
     </para>
    </listitem>

    <listitem>
     <para>
      Re-enable collection of access statistics for sequences (Akira Kurosawa)
     </para>

     <para>
      This used to work but was broken in 8.3.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix processing of ownership dependencies during <literal>CREATE OR
      REPLACE FUNCTION</literal> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect handling of <literal>WHERE</literal>
      <replaceable>x</replaceable>=<replaceable>x</replaceable> conditions (Tom)
     </para>

     <para>
      In some cases these could get ignored as redundant, but they aren't
      &mdash; they're equivalent to <replaceable>x</replaceable> <literal>IS NOT NULL</literal>.
     </para>
    </listitem>

    <listitem>
     <para>
      Make text search parser accept underscores in XML attributes (Peter)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix encoding handling in <type>xml</type> binary input (Heikki)
     </para>

     <para>
      If the XML header doesn't specify an encoding, we now assume UTF-8 by
      default; the previous handling was inconsistent.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug with calling <literal>plperl</literal> from <literal>plperlu</literal> or vice
      versa (Tom)
     </para>

     <para>
      An error exit from the inner function could result in crashes due to
      failure to re-select the correct Perl interpreter for the outer function.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix session-lifespan memory leak when a PL/Perl function is redefined
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that Perl arrays are properly converted to
      <productname>PostgreSQL</productname> arrays when returned by a set-returning
      PL/Perl function (Andrew Dunstan, Abhijit Menon-Sen)
     </para>

     <para>
      This worked correctly already for non-set-returning functions.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix rare crash in exception processing in PL/Python (Peter)
     </para>
    </listitem>

    <listitem>
     <para>
      In <filename>contrib/pg_standby</filename>, disable triggering failover with a
      signal on Windows (Fujii Masao)
     </para>

     <para>
      This never did anything useful, because Windows doesn't have Unix-style
      signals, but recent changes made it actually crash.
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure <application>psql</application>'s flex module is compiled with the correct
      system header definitions (Tom)
     </para>

     <para>
      This fixes build failures on platforms where
      <literal>--enable-largefile</literal> causes incompatible changes in the
      generated code.
     </para>
    </listitem>

    <listitem>
     <para>
      Make the postmaster ignore any <literal>application_name</literal> parameter in
      connection request packets, to improve compatibility with future libpq
      versions (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Update the timezone abbreviation files to match current reality (Joachim
      Wieland)
     </para>

     <para>
      This includes adding <literal>IDT</literal> and <literal>SGT</literal> to the default
      timezone abbreviation set.
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2009s
      for DST law changes in Antarctica, Argentina, Bangladesh, Fiji,
      Novokuznetsk, Pakistan, Palestine, Samoa, Syria; also historical
      corrections for Hong Kong.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-8">
  <title>Release 8.3.8</title>

  <note>
  <title>Release date</title>
  <simpara>2009-09-09</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.3.7.
   For information about new features in the 8.3 major release, see
   <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.3.8</title>

   <para>
    A dump/restore is not required for those running 8.3.X.
    However, if you have any hash indexes on <type>interval</type> columns,
    you must <command>REINDEX</command> them after updating to 8.3.8.
    Also, if you are upgrading from a version earlier than 8.3.5,
    see the release notes for 8.3.5.
   </para>

  </sect2>

  <sect2>
   <title>Changes</title>

   <itemizedlist>

    <listitem>
     <para>
      Fix Windows shared-memory allocation code (Tsutomu Yamada, Magnus)
     </para>

     <para>
      This bug led to the often-reported <quote>could not reattach
      to shared memory</quote> error message.
     </para>
    </listitem>

    <listitem>
     <para>
      Force WAL segment switch during <function>pg_start_backup()</function>
      (Heikki)
     </para>

     <para>
      This avoids corner cases that could render a base backup unusable.
     </para>
    </listitem>

    <listitem>
     <para>
      Disallow <command>RESET ROLE</command> and <command>RESET SESSION
      AUTHORIZATION</command> inside security-definer functions (Tom, Heikki)
     </para>

     <para>
      This covers a case that was missed in the previous patch that
      disallowed <command>SET ROLE</command> and <command>SET SESSION
      AUTHORIZATION</command> inside security-definer functions.
      (See CVE-2007-6600)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <command>LOAD</command> of an already-loaded loadable module
      into a no-op (Tom)
     </para>

     <para>
      Formerly, <command>LOAD</command> would attempt to unload and re-load the
      module, but this is unsafe and not all that useful.
     </para>
    </listitem>

    <listitem>
     <para>
      Disallow empty passwords during LDAP authentication (Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix handling of sub-SELECTs appearing in the arguments of
      an outer-level aggregate function (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bugs associated with fetching a whole-row value from the
      output of a Sort or Materialize plan node (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent <varname>synchronize_seqscans</varname> from changing the results of
      scrollable and <literal>WITH HOLD</literal> cursors (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Revert planner change that disabled partial-index and constraint
      exclusion optimizations when there were more than 100 clauses in
      an AND or OR list (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix hash calculation for data type <type>interval</type> (Tom)
     </para>

     <para>
      This corrects wrong results for hash joins on interval values.
      It also changes the contents of hash indexes on interval columns.
      If you have any such indexes, you must <command>REINDEX</command> them
      after updating.
     </para>
    </listitem>

    <listitem>
     <para>
      Treat <function>to_char(..., 'TH')</function> as an uppercase ordinal
      suffix with <literal>'HH'</literal>/<literal>'HH12'</literal> (Heikki)
     </para>

     <para>
      It was previously handled as <literal>'th'</literal> (lowercase).
     </para>
    </listitem>

    <listitem>
     <para>
      Fix overflow for <literal>INTERVAL '<replaceable>x</replaceable> ms'</literal>
      when <replaceable>x</replaceable> is more than 2 million and integer
      datetimes are in use (Alex Hunsaker)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix calculation of distance between a point and a line segment (Tom)
     </para>

     <para>
      This led to incorrect results from a number of geometric operators.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <type>money</type> data type to work in locales where currency
      amounts have no fractional digits, e.g. Japan (Itagaki Takahiro)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <literal>LIKE</literal> for case where pattern contains <literal>%_</literal>
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Properly round datetime input like
      <literal>00:12:57.9999999999999999999999999999</literal> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix memory leaks in XML operations (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix poor choice of page split point in GiST R-tree operator classes
      (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure that a <quote>fast shutdown</quote> request will forcibly terminate
      open sessions, even if a <quote>smart shutdown</quote> was already in progress
      (Fujii Masao)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid performance degradation in bulk inserts into GIN indexes
      when the input values are (nearly) in sorted order (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correctly enforce NOT NULL domain constraints in some contexts in
      PL/pgSQL (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix portability issues in plperl initialization (Andrew Dunstan)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>pg_ctl</application> to not go into an infinite loop if
      <filename>postgresql.conf</filename> is empty (Jeff Davis)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve <application>pg_dump</application>'s efficiency when there are
      many large objects (Tamas Vincze)
     </para>
    </listitem>

    <listitem>
     <para>
      Use <literal>SIGUSR1</literal>, not <literal>SIGQUIT</literal>, as the
      failover signal for <application>pg_standby</application> (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <application>pg_standby</application>'s <literal>maxretries</literal> option
      behave as documented (Fujii Masao)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <filename>contrib/hstore</filename> throw an error when a key or
      value is too long to fit in its data structure, rather than
      silently truncating it (Andrew Gierth)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <filename>contrib/xml2</filename>'s <function>xslt_process()</function> to
      properly handle the maximum number of parameters (twenty) (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve robustness of <application>libpq</application>'s code to recover
      from errors during <command>COPY FROM STDIN</command> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid including conflicting readline and editline header files
      when both libraries are installed (Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2009l
      for DST law changes in Bangladesh, Egypt, Jordan, Pakistan,
      Argentina/San_Luis, Cuba, Jordan (historical correction only),
      Mauritius, Morocco, Palestine, Syria, Tunisia.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-7">
  <title>Version 8.3.7</title>

  <note>
  <title>Date de version</title>
  <simpara>2009-03-16</simpara>
  </note>

  <para>
   Cette version contient des corrections de la version 8.3.6.
   Pour plus d'informations sur les nouvelles fonctionnalités de la
   version majeure 8.3, voir <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration to Version 8.3.7</title>

   <para>
    Une sauvegarde/restauration n'est pas requise pour ceux utilisant une
    version 8.3.X. Néanmoins, si vous mettez à jour à partir d'une version
    antérieure à la 8.3.5, voir les notes de sortie de la 8.3.5.
   </para>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <itemizedlist>

    <listitem>
     <para>
      Correction de crashs suite à des récursions erronées dûes à l'échec d'une
      conversion d'encodage (Tom)
     </para>

     <para>
      Cette modification étend les corrections réalisées lors des deux
      précédentes versions mineures pour les même scénarios. Les corrections
      déjà réalisées étaient ciblées sur les problèmes rencontrés, mais nous
      nous apercevons maintenant que <emphasis>toute</emphasis> erreur renvoyée
      par une fonction de conversion d'encodage pouvait entraîner une récursion
      infinie pour indiquer l'erreur. La solution est donc de désactiver toute
      traduction et conversion d'encodage. Le message d'erreur est renvoyé en
      ASCII simple si nous découvrons que nous sommes dans une situation
      susceptible d'entraîner une récursion infinie.
     </para>
    </listitem>

    <listitem>
     <para>
      N'autorise plus <command>CREATE CONVERSION</command> avec les mauvais
      encodages pour la fonction de conversion spécifiée (Heikki)
     </para>

     <para>
      Ceci permet de prévenir un scénario possible pour un échec de conversion
      d'encodage. Le changement précédent permet de se protéger contre les
      autres échecs du même type.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de <function>xpath()</function> pour ne modifier l'expression
      du chemin que si nécessaire, et de faire une tentative plus saine quand
      c'est nécessaire (Andrew)
     </para>

     <para>
      Le standard SQL suggère que <function>xpath</function> devrait fonctionner
      sur des données qui sont un fragment de document mais
      <application>libxml</application> ne supporte pas cela et il n'est pas
      clair que ce soit intéressant d'après le standard XPatch.
      <function>xpath</function> tentait de contourner cette différence en
      modifiant les données et l'expression du chemin mais la modification était
      erronnée et pouvait causer l'échec de recherches valides. Maintenant,
      <function>xpath</function> vérifie sir les données sont en fait un
      document bien formé et, dans ce cas, appelle
      <application>libxml</application> sans modification des données ou de
      l'expression du chemin. Sinon, une méthode différente de modification
      qui est moins sujette à l'échec est utilisée.
     </para>

     <note>
      <para>
       La nouvelle méthode de modification n'est pas satisfaisante à 100% et il
       semble qu'il n'existe pas de solution réelle. Ce correctif doit donc
       etre vu seulement comme une aide pour ne pas casser les applications
       existantes. Il est probable que <productname>PostgreSQL</productname>
       8.4 rejettera simplement l'utilisation de <function>xpath</function>
       sur des données qui ne constituent pas un document bien formé.
      </para>
     </note>
    </listitem>

    <listitem>
     <para>
      Correction d'un crash lorsque <function>to_char()</function> a pour
      argument des codes de format inappropriés pour la donnée en argument
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un échec possible dans <filename>contrib/tsearch2</filename>
      lorsque la locale C est utilisée avec un encodage multi-octets (Teodor)
     </para>

     <para>
      Les crashes étaient possibles sur les plateformes où <type>wchar_t</type>
      est plus petit que <type>int</type>&nbsp;; Windows en particulier.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de l'inefficacité extrême dans la gestion par l'analyseur
      <filename>contrib/tsearch2</filename> d'une chaîne de type email contenant de
      nombreux caractères <literal>@</literal> (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un problème du planificateur avec les
      sous-<command>SELECT</command> dans la liste en sortie d'une sous-requête
      importante (Tom)
     </para>

     <para>
      Le symptôme connu de ce bogue est une erreur <quote>failed to locate
      grouping columns</quote> dépendant du type de donnée impliqué mais il
      pourrait y avoir d'autres problèmes.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de la décompilation de <literal>CASE WHEN</literal> lorsque
      cette instruction est utilisée avec une coercion explicite
      (Tom)
     </para>

     <para>
      Cette erreur pouvait entraîner des échecs de type Assert pour les binaires
      compilés avec l'option Assert activé. Elle pouvait aussi entraîner des
      des messages d'erreur <quote>unexpected CASE WHEN clause</quote> dans
      d'autres cas lors de l'examen ou de la sauvegarde d'une vue.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une mauvaise affectation possible du propriétaire du rowtype
      d'une table TOAST (Tom)
     </para>

     <para>
      Si <command>CLUSTER</command> ou une variante de <command>ALTER
      TABLE</command> qui ré-écrit la table étaient exécutées par quelqu'un
      d'autre que le propriétaire de la table, l'entrée
      <structname>pg_type</structname> pour la table TOAST pouvait se trouver
      changer de propriétaire (en utilisant l'identifiant de l'utilisateur qui
      a exécuté la commande). Ceci ne pose pas de problèmes immédiatement car
      les droits sur le rowtype du TOAST ne sont pas examinés après chaque
      opération ordinaire de la base de données. Néanmoins, cela peut amener
      des échecs inattendus si une personne tente plus tard de supprimer le rôle
      qui a exécuté la commande (en 8.1 ou 8.2) ou des messages d'avertissement
      du type <quote>propriétaire du type de données semble invalide</quote>
      avec <application>pg_dump</application> après avoir supprimé l'utilisateur
      (en 8.3).
     </para>
    </listitem>

    <listitem>
     <para>
      Modification de <command>UNLISTEN</command> pour qu'il quitte rapidement
      si la session en cours n'a jamais exécuté de commande
      <command>LISTEN</command> (Tom)
     </para>

     <para>
      La plupart du temps, cela n'est pas une optimisation particulièrement
      utile mais comme <command>DISCARD ALL</command> appelle
      <command>UNLISTEN</command>, le codage précédent causait un problème de
      performances substantiel pour les applications utilisant beaucoup
      <command>DISCARD ALL</command>.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de PL/pgSQL pour qu'il ne traite pas <literal>INTO</literal>
      après un <command>INSERT</command> comme une clause d'affectation de
      variables, quelque soit son emplacement&nbsp;; en particulier, cela
      permet d'éviter un échec sur un <command>INSERT INTO</command> compris
      dans une commande <command>CREATE RULE</command> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Nettoyage complet des variables de statut de PL/pgSQL à la sortie d'un
      bloc (Ashesh Vashi et Dave Page)
     </para>

     <para>
      Ceci n'est pas un problème avec PL/pgSQL lui-même, mais l'omission pouvait
      entraîner un crash du debogueur PL/pgSQL lors de l'examen de l'état d'une
      fonction.
     </para>
    </listitem>

    <listitem>
     <para>
      Ré-essaie d'appeler <function>CallNamedPipe()</function> après un échec
      sur Windows (Steve Marshall, Magnus)
     </para>

     <para>
      Il semble que cette fonction puisse échouer de temps en temps&nbsp;;
      auparavant, nous avons traiter toute erreur comme une erreur grave
      qui pourrait poser problème aux instructions <command>LISTEN</command>
      / <command>NOTIFY</command> ainsi qu'à d'autres opérations.
     </para>
    </listitem>

    <listitem>
     <para>
      Ajout de <literal>MUST</literal> (Mauritius Island Summer Time) dans la
      liste par défaut des abréviations connues de fuseau horaire (Xavier
      Bugaud)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-6">
  <title>Version 8.3.6</title>

  <note>
  <title>Date de version</title>
  <simpara>2009-02-02</simpara>
  </note>

  <para>
   Cette version contient des corrections de la version 8.3.5.
   Pour plus d'informations sur les nouvelles fonctionnalités de la
   version majeure 8.3, voir <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration vers la version 8.3.6</title>

   <para>
    Une sauvegarde/restauration n'est pas requise pour ceux utilisant une
    version 8.3.X. Néanmoins, si vous mettez à jour à partir d'une version
    antérieure à la 8.3.5, voir les notes de sortie de la 8.3.5.
   </para>

  </sect2>

  <sect2>
   <title>Changements</title>

   <itemizedlist>

    <listitem>
     <para>
      <command>DISCARD ALL</command> lâche aussi les verrous informatifs, en
      plus de tout ce qu'il faisait déjà (Tom)
     </para>

     <para>
      Il a été décidé que c'est le comportement le plus approprié. Néanmoins,
      cela pourrait affecter les applications existantes.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction des parcours complets d'index GiST (Teodor)
     </para>

     <para>
      Cette erreur peut faire que des lignes soient perdues si CLUSTER est
      utilisé avec une table et son index GiST.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de l'arrêt brutal de <literal>xmlconcat(NULL)</literal> (Peter)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un arrêt brutal possible dans le dictionnaire
      <literal>ispell</literal> si des caractères avec le bit de poids fort
      levé sont utilisés comme des drapeaux (Teodor)
     </para>

     <para>
      C'est survenu avec le dictionnaire norvégien disponible mais ces conditions
      pourraient en affecter d'autres.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un mauvais ordre dans la sortie de
      <application>pg_dump</application> pour les types composites (Tom)
     </para>

     <para>
      Le problème le plus fréquent concernait des classes d'opérateur définies
      par l'utilisateur, qui sont sauvegardées après les index et vues qui les
      utilisent.
     </para>
    </listitem>

    <listitem>
     <para>
      Amélioration de la gestion des URL dans la fonction
      <function>headline()</function> (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Amélioration de la gestion des lignes trop longues dans la fonction
      <function>headline()</function> (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Empêche des échecs ou des mauvaises conversions avec Assert si une
      conversion d'encodage est créé avec la mauvaise fonction de conversion
      pour la paire spécifiée des encodages (Tom, Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Empêche des échecs possibles avec Assert si une instruction exécutée en
      PL/pgSQL est ré-écrite dans un autre type d'instruction, par exemple si
      <command>INSERT</command> est ré-écrit en <command>UPDATE</command>
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure qu'une image de la base est disponible pour les fonctions en
      entrée des types (Tom)
     </para>

     <para>
      Ceci affecte principalement les domaines qui sont déclarés avec des
      contraintes <literal>CHECK</literal> impliquant des fonctions stables
      ou immutables définies par l'utilisateur. De telles fonctions échouent
      typiquement si aucune image de la base n'a été réalisée.
     </para>
    </listitem>

    <listitem>
     <para>
      Rend plus sûr l'utilisation des entrées/sorties de type avec les fonctions
      SPI&nbsp;; en particulier à utiliser aves les contraintes de vérifications
      pour les domaines (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Évite un verrou inutile des petites tables dans <command>VACUUM</command>
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un problème qui empêche quelque fois <command>ALTER TABLE
      ENABLE/DISABLE RULE</command> d'être reconnu par les sessions actives
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un problème faisant que <literal>UPDATE RETURNING
      tableoid</literal> renvoie zéro au lieu du bon OID (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Permet aux fonctions déclarées comme prenant <type>ANYARRAY</type> en
      argument de fonctionner avec les colonnes de ce type dans la table
      <structname>pg_statistic</structname> (Tom)
     </para>

     <para>
      Ceci fonctionnait mais a été cassé par erreur en 8.3.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une mauvaise estimation de la sélectivité du planificateur
      quand une égalité transitive est appliquée à une clause jointure externe
      (Tom)
     </para>

     <para>
      Ceci pourrait résulter en de mauvais plans pour les requêtes identiques à
      <literal>... from a left join b on a.a1 = b.b1 where a.a1 = 42 ...</literal>
     </para>
    </listitem>

    <listitem>
     <para>
      Amélioration de la gestion des grosses listes <literal>IN</literal> par
      l'optimiseur (Tom)
     </para>

     <para>
      Cette modification évite de perdre beaucoup de temps sur de telles listes
      dans la contrainte d'exclusion est activée.
     </para>
    </listitem>

    <listitem>
     <para>
      Empêche le parcours synchrone lors de la construction d'un index GIN
      (Tom)
     </para>

     <para>
      Comme GIN est optimisé pour insérer les lignes dans l'ordre croissant
      des TID, l'utilisation d'un parcours synchrone pourrait ralentir la
      construction par un facteur de trois, voire plus.
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure que le contenu d'un curseur conservable ne dépend pas du contenu
      des tables TOAST (Tom)
     </para>

     <para>
      Auparavant, des valeurs de champ large dans un résultat de curseur
      pouvaient être représentées comme des pointeurs TOAST, ce qui causerait
      un échec si la table référencée était supprimée avant la lecture du
      curseur ou si la valeur large était supprimée puis subissait un VACUUM.
      Ceci ne peut pas arriver avec un curseur standard mais le pourrait avec
      un curseur qui est conservé après sa transaction de création.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une fuite mémoire lorsqu'une fonction SRF se termine sans
      lecture du résultat complet (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de problèmes de conversion dans les fonctions XML quand
      l'encodage de la base de données n'est pas UTF-8 (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de la fonction <function>dblink_get_result(text,bool)</function>
      de <filename>contrib/dblink</filename> (Joe)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un mauvais retour des fonctions de
      <filename>contrib/sslinfo</filename> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un mauvais comportement du trigger de compatibilité de
      <filename>contrib/tsearch2</filename> lorsqu'il est exécuté plus d'une
      fois dans une commande (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un mauvais signal possible dans l'autovacuum (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Support de l'utilisation d'un service avec Windows 7 beta (Dave et Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de la gestion des structures varchar avec
      <application>ecpg</application> (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction du script <application>configure</application> pour rapporter
      correctement les échecs quand il est incapable d'obtenir les informations
      de liens pour PL/Perl (Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
      Toute la documentation référence maintenant <literal>pgsql-bugs</literal>
      et/ou <literal>pgsql-hackers</literal>, au lieu des listes obsolètes comme
      <literal>pgsql-ports</literal> et <literal>pgsql-patches</literal> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Mise à jour des fichiers de fuseaux horaires avec la version 2009a de
      <application>tzdata</application> (pour le Kathmandou et des corrections
      historiques de DST en Switzerland et à Cuba)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-5">
  <title>Version 8.3.5</title>

  <note>
  <title>Date de version</title>
  <simpara>2008-11-03</simpara>
  </note>

  <para>
   Cette version contient des corrections de la version 8.3.4.
   Pour plus d'informations sur les nouvelles fonctionnalités de la
   version majeure 8.3, voir <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration vers la version 8.3.5</title>

   <para>
    Une sauvegarde/restauration n'est pas requise pour ceux utilisant une
    version 8.3.X. Néanmoins, si vous mettez à jour à partir d'une version
    antérieure à la 8.3.1, voir les notes de sortie de la 8.3.1.
   </para>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <itemizedlist>

    <listitem>
     <para>
      Correction d'une corruption d'index GiST. L'entrée d'index marquée comme
      <quote>morte</quote> après une suppression n'était pas la bonne (Teodor)
     </para>

     <para>
      Cela peut avoir comme conséquence des échecs dans les recherches par
      index pour des lignes qu'elles auraient dû trouver.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un crash du serveur lorsque l'encodage client ne peut pas
      représenter une version convertie du message d'erreur (Tom)
     </para>

     <para>
      Nous avons déjà corrigé des problèmes identiques dans le passé, mais le
      problème est toujours d'actualité si le message <quote>le caratère n'a
      pas d'équivalent</quote> ne peut pas être converti. La correction revient à
      désactiver la transformation et à renvoyer le message d'erreur en ASCII
      brut quand nous détectons cette situation.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un crash possible dans la correspondance
      <type>bytea</type>-vers-XML (Michael McMaster)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un crash possible lorsque des fonctions profondément
      imbriquées sont appelées à partir d'un trigger (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Amélioration de l'optimisation des requêtes de type
      <replaceable>expression</replaceable> <literal>IN</literal>
      (<replaceable>liste-expression</replaceable>) (Tom, à partir d'une idée de
      Robert Haas)
     </para>

     <para>
      Les cas où il se trouve des variables de requpetes dans le côté droit
      étaient gérés moins efficacement dans les versions 8.2.x et 8.3.x que
      dans les versions précédentes. La correction restaure le comportement
      de la 8.1 pour ces cas.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une mauvaise expansion de requêtes de règles quand un
      sous-<literal>SELECT</literal> apparaît dans un appel de fonction d'un
      <literal>FROM</literal>, d'une liste <literal>VALUES</literal>
      multi-lignes ou d'une liste <literal>RETURNING</literal> (Tom)
     </para>

     <para>
      Le symptôme habituel de ce problème est une erreur <quote>type de noeud
      inconnu</quote>.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un échec Assert lors du parcours <literal>IS NULL</literal>
      pour une recherche dans un index GiST (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une fuite mémoire lors du parcours d'un plan d'aggrégation
      haché (Neil)
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure qu'une erreur est renvoyée quand une fonction trigger PL/pgsql
      nouvellement définie est appelée comme une fonction normale (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Force un point de vérification quand <command>CREATE DATABASE</command>
      commence à copier les fichiers (Heikki)
     </para>

     <para>
      Ceci empêche un échec possible si des fichiers ont récemment été supprimés
      de la base de données source.
     </para>
    </listitem>

    <listitem>
     <para>
      Empêche une collision possible du <structfield>relfilenode</structfield>
      lors du déplacement d'une table vers un autre tablespace avec
      <command>ALTER SET TABLESPACE</command> (Heikki)
     </para>

     <para>
      La commande essaie de ré-utiliser le nom du fichier existant au lieu d'un
      prendre un qu'on sait inutilisé dans le répertoire de destination.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de la génération du résumé (« headline ») par tsearch2 quand
      l'élément de la requête correspond au premier mot d'un texte (Sushant
      Sinha)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de l'affichage de secondes fractionnées dans des valeurs
      d'intervalle lors de l'utilisation d'un style de date non ISO dans une
      construction ayant utilisé l'option <option>--enable-integer-datetimes</option>
      (Ron Mayer)
     </para>
    </listitem>

    <listitem>
     <para>
      Fait que <literal>ILIKE</literal> compare les caractères sans attention à
      la casse même lorsqu'ils sont échappés (Andrew)
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure que <command>DISCARD</command> est géré correctement par les
      traces des instructions (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une trace incorrecte du moment de la dernière transaction
      restaurée lors d'une restauration PITR (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure que <function>SPI_getvalue</function> et <function>SPI_getbinval</function>
      fonctionnent correctement lorsque la ligne et le descripteur de ligne
      passés ont un nombre de colonnes différent (Tom)
     </para>

     <para>
      Cette situation est normale quand une table se voit ajouter ou supprimer
      des colonnes, mais ces deux fonctions ne le géraient pas correctement.
      La seule conséquence probable est l'envoi d'un message d'erreur erroné.
     </para>
    </listitem>

    <listitem>
     <para>
      Marque <varname>SessionReplicationRole</varname> comme
      <literal>PGDLLIMPORT</literal> pour qu'il puisse être utilisé par
      <application>Slony</application> sur Windows (Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une petite fuite mémoire lors de l'utilisation du paramètre
      <literal>gsslib</literal> de <application>libpq</application> (Magnus)
     </para>

     <para>
      L'espace utilisée par la chaîne de paramètres n'était pas libérée à la
      fermeture de la connexion.
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure que <application>libgssapi</application> est liée à
      <application>libpq</application> si nécessaire (Markus Schaaf)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de l'analyse de <command>CREATE USER</command> par
      <application>ecpg</application> (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une régression récente de <literal>pg_ctl restart</literal> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      S'assure que <filename>pg_control</filename> en ouvert en mode binaire
      seul (Itagaki Takahiro)
     </para>

     <para>
      <application>pg_controldata</application> et <application>pg_resetxlog</application>
      ne le faisaient pas correction, ce qui provoquait un échec sur Windows.
     </para>
    </listitem>

    <listitem>
     <para>
      Mise à jour des fichiers de données de fuseaux horaires vers la version
      2008i de <application>tzdata</application> (pour les modifications légales de DST en
      Argentine, au Brésil, à l'Île Maurice et en Syrie)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-4">
  <title>Version 8.3.4</title>

  <note>
  <title>Date de sortie</title>
  <simpara>2008-09-22</simpara>
  </note>

  <para>
   Cette version contient quelques correctifs de la version 8.3.3.
   Pour plus d'informations sur les nouvelles fonctionnalités de la
   version majeure 8.3, voir <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration vers la version 8.3.4</title>

   <para>
    Une sauvegarde/restauration n'est pas nécessaire aux utilisateurs de la
    version 8.3.X.
    Néanmoins, si vous mettez à jour à partir d'une version antérieure à la
    version 8.3.1, voir les notes de sortie de la 8.3.1.
   </para>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <itemizedlist>

    <listitem>
     <para>
      Correction d'un bogue dans le code de restauration d'un enregistrement
      btree (Heikki)
     </para>

     <para>
      La restauration échouait si l'enregistrement du journal se terminait à
      moitié lors d'une opération de division de page.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une utilisation potentielle d'un XID limite lors de la
      réduction des pages HOT (Alvaro)
     </para>

     <para>
      Cette erreur crée un risque de corruption dans les catalogues système
      qui sont consultés par <command>VACUUM</command>&nbsp;: les versions de
      lignes mortes pourraient être supprimées trop rapidement. L'impact de
      ceci sur les opérations actuelles de la base de données serait minimale
      car le système ne suit pas les règles MVCC lors de l'examen des
      catalogues, mais pourrait résultat en de mauvaises sorties temporaires
      de programmes clients comme <application>pg_dump</application>.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un mauvais calcul potentiel de
      <structfield>datfrozenxid</structfield> (Alvaro)
     </para>

     <para>
      Cette erreur pourrait expliquer certains rapports récents de suppression
      de vieilles données dans le répertoire <structname>pg_clog</structname>.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de mises à jour incorrectes de HOT après que
      <structname>pg_class</structname> soit ré-indexé (Tom)
     </para>

     <para>
      Une corruption de <structname>pg_class</structname> pourrait survenir si
      <literal>REINDEX TABLE pg_class</literal> était suivi dans la même
      session par une commande <literal>ALTER TABLE RENAME</literal> ou
      <literal>ALTER TABLE SET SCHEMA</literal>.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'une casse manquante <quote>combo cid</quote> (Karl Schnaitter)
     </para>

     <para>
      Cette erreur faisait que des lignes se trouvaient invisibles par erreur
      dans une transaction. Elles avaient été supprimées par plusieurs
      sous-transactions toutes annulées.
     </para>
    </listitem>

    <listitem>
     <para>
      Empêche l'autovacuum de s'arrêter inoppunément si la table qu'il vérifie
      est supprimée au mauvais moment (Alvaro)
     </para>
    </listitem>

    <listitem>
     <para>
      Augmentation du compteur de verrou local en le passant de 32 à 64 bits (Tom)
     </para>

     <para>
      Ceci est une réponse aux rapports indiquant que la capacité des
      compteurs pouvait être dépassée dans des transactions suffisamment
      longues, amenant à des erreurs inattendues du style <quote>le verrou
      est déjà détenu</quote>.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction d'un affichage dupliqué des lignes lors d'un parcours d'index
      GiST (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Regénération des requêtes de vérification des clés étrangères quand
      une des tables est modifiée (Tom)
     </para>

     <para>
      Auparavant, la version 8.3 essayait de replanifier la requête mais
      travaillait à partir des requêtes précédemment générées. Ceci pouvait
      amener des échecs si une table ou une colonne était renommée.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction des vérifications de droits oubliées quand une vue contient
      une construction <literal>UNION ALL</literal> simple (Heikki)
     </para>

     <para>
      Les droits pour les tables référencées étaient vérifiés correctement,
      mais pas les droits pour la vue elle-même.
     </para>
    </listitem>

    <listitem>
     <para>
      Ajout de vérifications dans le démarrage de l'exécuteur pour s'assurer
      que les lignes produites par une instruction <command>INSERT</command>
      ou <command>UPDATE</command> correspondront au type de ligne actuel de
      la table cible (Tom)
     </para>

     <para>
      Cette situation semblait impossible en 8.3, mais elle peut arriver dans
      les versions précédentes, donc une vérification est plus prudente.
     </para>
    </listitem>

    <listitem>
     <para>
      Correction des suppressions possibles répétées durant un
      <command>DROP OWNED</command> (Tom)
     </para>

     <para>
      Ceci pourrait résulter en des erreurs étranges comme <quote>recherche
      échouée dans le cache pour la relation NNN</quote>.
     </para>
    </listitem>

    <listitem>
     <para>
      Corrections de plusieurs pertes mémoire dans les opérations XML
      (Kris Jurka, Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de <function>xmlserialize()</function> pour augmenter le
      niveau d'erreur correctement pour les types de données cibles non
      acceptables (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de plusieurs places gérant mal les caractères multi-octets
      dans l'analyse des fichiers de configuration pour la recherche plein
      texte (Tom)
     </para>

     <para>
      Certains caractères des fichiers de configuration pouvaient toujours
      causer des échecs de type <quote>séquence d'octets invalide pour
      l'encodage</quote>.
     </para>
    </listitem>

    <listitem>
     <para>
      Fournit un nom de fichier et le numéro de ligne pour toutes les erreurs
      rapportées dans des fichiers de configuration de la recherche plein texte
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Correction de <literal>AT TIME ZONE</literal> pour essayer tout d'abord
      d'interpréter son argument de fuseau horaire en tant qu'abréviation de
      fuseau horaire, et essaiera seulement en tant que nom complet de fuseau
      horaire si la première tentative échoue (auparavant, c'était le
      contraire (Tom)
     </para>

     <para>
      Les fonctions de saisie des dates et heures ont toujours tenté de
      résoudre les noms de fuseaux horaires ambigus dans cet ordre.
      Faire en sorte que <literal>AT TIME ZONE</literal> fasse de même
      améliore la cohérence et corrige un bogue de compatibilité introduit
      en version 8.1&nbsp;: dans les cas ambigus, nous nous comportons
      maintenant comme en 8.0 car dans les anciennes versions <literal>AT
      TIME ZONE</literal> acceptaient <emphasis>seulement</emphasis> les
      abréviations.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix datetime input functions to correctly detect integer overflow when
      running on a 64-bit platform (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent integer overflows during units conversion when displaying a
      configuration parameter that has units (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve performance of writing very long log messages to syslog (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Allow spaces in the suffix part of an LDAP URL in
      <filename>pg_hba.conf</filename> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix bug in backwards scanning of a cursor on a <literal>SELECT DISTINCT
      ON</literal> query (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix planner bug that could improperly push down <literal>IS NULL</literal>
      tests below an outer join (Tom)
     </para>

     <para>
      This was triggered by occurrence of <literal>IS NULL</literal> tests for
      the same relation in all arms of an upper <literal>OR</literal> clause.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix planner bug with nested sub-select expressions (Tom)
     </para>

     <para>
      If the outer sub-select has no direct dependency on the parent query,
      but the inner one does, the outer value might not get recalculated
      for new parent query rows.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix planner to estimate that <literal>GROUP BY</literal> expressions yielding
      boolean results always result in two groups, regardless of the
      expressions' contents (Tom)
     </para>

     <para>
      This is very substantially more accurate than the regular <literal>GROUP
      BY</literal> estimate for certain boolean tests like <replaceable>col</replaceable>
      <literal>IS NULL</literal>.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix PL/PgSQL to not fail when a <literal>FOR</literal> loop's target variable
      is a record containing composite-type fields (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix PL/Tcl to behave correctly with Tcl 8.5, and to be more careful
      about the encoding of data sent to or from Tcl (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve performance of <function>PQescapeBytea()</function> (Rudolf Leitgeb)
     </para>
    </listitem>

    <listitem>
     <para>
      On Windows, work around a Microsoft bug by preventing
      <application>libpq</application> from trying to send more than 64kB per system call
      (Magnus)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>ecpg</application> to handle variables properly in <command>SET</command>
      commands (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve <application>pg_dump</application> and <application>pg_restore</application>'s
      error reporting after failure to send a SQL command (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>pg_ctl</application> to properly preserve postmaster
      command-line arguments across a <literal>restart</literal> (Bruce)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix erroneous WAL file cutoff point calculation in
      <application>pg_standby</application> (Simon)
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2008f (for
      DST law changes in Argentina, Bahamas, Brazil, Mauritius, Morocco,
      Pakistan, Palestine, and Paraguay)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-3">
  <title>Version 8.3.3</title>

  <note>
  <title>Date de sortie</title>
  <simpara>2008-06-12</simpara>
  </note>

  <para>
   This release contains one serious and one minor bug fix over 8.3.2.
   Pour plus d'informations sur les nouvelles fonctionnalités de la
   version majeure 8.3, voir <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration vers la version 8.3.3</title>

   <para>
    Une sauvegarde/restauration n'est pas nécessaire aux utilisateurs de la version 8.3.X.
    However, if you are upgrading from a version earlier than 8.3.1,
    see the release notes for 8.3.1.
   </para>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <itemizedlist>

    <listitem>
     <para>
      Make <function>pg_get_ruledef()</function> parenthesize negative constants (Tom)
     </para>

     <para>
      Before this fix, a negative constant in a view or rule might be dumped
      as, say, <literal>-42::integer</literal>, which is subtly incorrect: it should
      be <literal>(-42)::integer</literal> due to operator precedence rules.
      Usually this would make little difference, but it could interact with
      another recent patch to cause
      <productname>PostgreSQL</productname> to reject what had been a valid
      <command>SELECT DISTINCT</command> view query.  Since this could result in
      <application>pg_dump</application> output failing to reload, it is being treated
      as a high-priority fix.  The only released versions in which dump
      output is actually incorrect are 8.3.1 and 8.2.7.
     </para>
    </listitem>

    <listitem>
     <para>
      Make <command>ALTER AGGREGATE ... OWNER TO</command> update
      <structname>pg_shdepend</structname> (Tom)
     </para>

     <para>
      This oversight could lead to problems if the aggregate was later
      involved in a <command>DROP OWNED</command> or <command>REASSIGN OWNED</command>
      operation.
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-2">
  <title>Version 8.3.2</title>

  <note>
  <title>Date de sortie</title>
  <simpara>never released</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.3.1.
   Pour plus d'informations sur les nouvelles fonctionnalités de la
   version majeure 8.3, voir <xref linkend="release-8-3"/>.
  </para>

  <sect2>
   <title>Migration vers la version 8.3.2</title>

   <para>
    Une sauvegarde/restauration n'est pas nécessaire aux utilisateurs de la version 8.3.X.
    However, if you are upgrading from a version earlier than 8.3.1,
    see the release notes for 8.3.1.
   </para>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <itemizedlist>

    <listitem>
     <para>
      Fix <literal>ERRORDATA_STACK_SIZE exceeded</literal> crash that
      occurred on Windows when using UTF-8 database encoding and a different
      client encoding (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect archive truncation point calculation for the
      <literal>%r</literal> macro in <varname>recovery_command</varname> parameters
      (Simon)
     </para>

     <para>
      This could lead to data loss if a warm-standby script relied on
      <literal>%r</literal> to decide when to throw away WAL segment files.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <command>ALTER TABLE ADD COLUMN ... PRIMARY KEY</command> so that the new
      column is correctly checked to see if it's been initialized to all
      non-nulls (Brendan Jurd)
     </para>

     <para>
      Previous versions neglected to check this requirement at all.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <command>REASSIGN OWNED</command> so that it works on procedural
      languages too (Alvaro)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix problems with <command>SELECT FOR UPDATE/SHARE</command> occurring as a
      subquery in a query with a non-<command>SELECT</command> top-level operation
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible <command>CREATE TABLE</command> failure when inheriting the
      <quote>same</quote> constraint from multiple parent relations that
      inherited that constraint from a common ancestor (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <function>pg_get_ruledef()</function> to show the alias, if any, attached
      to the target table of an <command>UPDATE</command> or <command>DELETE</command>
      (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Restore the pre-8.3 behavior that an out-of-range block number in a
      TID being used in a TidScan plan results in silently not matching any
      rows (Tom)
     </para>

     <para>
      8.3.0 and 8.3.1 threw an error instead.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix GIN bug that could result in a <literal>too many LWLocks
      taken</literal> failure (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix broken GiST comparison function for <type>tsquery</type> (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <function>tsvector_update_trigger()</function> and <function>ts_stat()</function>
      to accept domains over the types they expect to work with (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix failure to support enum data types as foreign keys (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid possible crash when decompressing corrupted data
      (Zdenek Kotala)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix race conditions between delayed unlinks and <command>DROP
      DATABASE</command> (Heikki)
     </para>

     <para>
      In the worst case this could result in deleting a newly created table
      in a new database that happened to get the same OID as the
      recently-dropped one; but of course that is an extremely
      low-probability scenario.
     </para>
    </listitem>

    <listitem>
     <para>
      Repair two places where SIGTERM exit of a backend could leave corrupted
      state in shared memory (Tom)
     </para>

     <para>
      Neither case is very important if SIGTERM is used to shut down the
      whole database cluster together, but there was a problem if someone
      tried to SIGTERM individual backends.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crash due to incorrect plan generated for an
      <literal><replaceable>x</replaceable> IN (SELECT <replaceable>y</replaceable>
      FROM ...)</literal> clause when <replaceable>x</replaceable> and <replaceable>y</replaceable>
      have different data types; and make sure the behavior is semantically
      correct when the conversion from <replaceable>y</replaceable>'s type to
      <replaceable>x</replaceable>'s type is lossy (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix oversight that prevented the planner from substituting known Param
      values as if they were constants (Tom)
     </para>

     <para>
      This mistake partially disabled optimization of unnamed
      extended-Query statements in 8.3.0 and 8.3.1: in particular the
      LIKE-to-indexscan optimization would never be applied if the LIKE
      pattern was passed as a parameter, and constraint exclusion
      depending on a parameter value didn't work either.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix planner failure when an indexable <function>MIN</function> or
      <function>MAX</function> aggregate is used with <literal>DISTINCT</literal> or
      <literal>ORDER BY</literal> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix planner to ensure it never uses a <quote>physical tlist</quote> for a
      plan node that is feeding a Sort node (Tom)
     </para>

     <para>
      This led to the sort having to push around more data than it really
      needed to, since unused column values were included in the sorted
      data.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid unnecessary copying of query strings (Tom)
     </para>

     <para>
      This fixes a performance problem introduced in 8.3.0 when a very large
      number of commands are submitted as a single query string.
     </para>
    </listitem>

    <listitem>
     <para>
      Make <function>TransactionIdIsCurrentTransactionId()</function> use binary
      search instead of linear search when checking child-transaction XIDs
      (Heikki)
     </para>

     <para>
      This fixes some cases in which 8.3.0 was significantly
      slower than earlier releases.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix conversions between ISO-8859-5 and other encodings to handle
      Cyrillic <quote>Yo</quote> characters (<literal>e</literal> and <literal>E</literal> with
      two dots) (Sergey Burladyan)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix several datatype input functions, notably <function>array_in()</function>,
      that were allowing unused bytes in their results to contain
      uninitialized, unpredictable values (Tom)
     </para>

     <para>
      This could lead to failures in which two apparently identical literal
      values were not seen as equal, resulting in the parser complaining
      about unmatched <literal>ORDER BY</literal> and <literal>DISTINCT</literal>
      expressions.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix a corner case in regular-expression substring matching
      (<literal>substring(<replaceable>string</replaceable> from
      <replaceable>pattern</replaceable>)</literal>) (Tom)
     </para>

     <para>
      The problem occurs when there is a match to the pattern overall but
      the user has specified a parenthesized subexpression and that
      subexpression hasn't got a match.  An example is
      <literal>substring('foo' from 'foo(bar)?')</literal>.
      This should return NULL, since <literal>(bar)</literal> isn't matched, but
      it was mistakenly returning the whole-pattern match instead (ie,
      <literal>foo</literal>).
     </para>
    </listitem>

    <listitem>
     <para>
      Prevent cancellation of an auto-vacuum that was launched to prevent
      XID wraparound (Alvaro)
     </para>
    </listitem>

    <listitem>
     <para>
      Improve <command>ANALYZE</command>'s handling of in-doubt tuples (those
      inserted or deleted by a not-yet-committed transaction) so that the
      counts it reports to the stats collector are more likely to be correct
      (Pavan Deolasee)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>initdb</application> to reject a relative path for its
      <literal>--xlogdir</literal> (<literal>-X</literal>) option (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <application>psql</application> print tab characters as an appropriate
      number of spaces, rather than <literal>\x09</literal> as was done in
      8.3.0 and 8.3.1 (Bruce)
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2008c (for
      DST law changes in Morocco, Iraq, Choibalsan, Pakistan, Syria, Cuba, and
      Argentina/San_Luis)
     </para>
    </listitem>

    <listitem>
     <para>
      Add <function>ECPGget_PGconn()</function> function to
      <application>ecpglib</application> (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect result from <application>ecpg</application>'s
      <function>PGTYPEStimestamp_sub()</function> function (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix handling of continuation line markers in <application>ecpg</application>
      (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible crashes in <filename>contrib/cube</filename> functions (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix core dump in <filename>contrib/xml2</filename>'s
      <function>xpath_table()</function> function when the input query returns a
      NULL value (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <filename>contrib/xml2</filename>'s makefile to not override
      <literal>CFLAGS</literal>, and make it auto-configure properly for
      <application>libxslt</application> present or not (Tom)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3-1">
  <title>Version 8.3.1</title>

  <note>
  <title>Date de sortie</title>
  <simpara>2008-03-17</simpara>
  </note>

  <para>
   This release contains a variety of fixes from 8.3.0.
   However, if you are upgrading from a version earlier than 8.3.1,
   see the release notes for 8.3.1.
  </para>

  <sect2>
   <title>Migration vers la version 8.3.1</title>

   <para>
    Une sauvegarde/restauration n'est pas nécessaire aux utilisateurs de la version 8.3.X.
    However, you might need to <command>REINDEX</command> indexes on textual
    columns after updating, if you are affected by the Windows locale
    issue described below.
   </para>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <itemizedlist>

    <listitem>
     <para>
      Fix character string comparison for Windows locales that consider
      different character combinations as equal (Tom)
     </para>

     <para>
      This fix applies only on Windows and only when using UTF-8
      database encoding.  The same fix was made for all other cases
      over two years ago, but Windows with UTF-8 uses a separate code
      path that was not updated.  If you are using a locale that
      considers some non-identical strings as equal, you may need to
      <command>REINDEX</command> to fix existing indexes on textual columns.
     </para>
    </listitem>

    <listitem>
     <para>
      Repair corner-case bugs in <command>VACUUM FULL</command> (Tom)
     </para>

     <para>
      A potential deadlock between concurrent <command>VACUUM FULL</command>
      operations on different system catalogs was introduced in 8.2.
      This has now been corrected.  8.3 made this worse because the
      deadlock could occur within a critical code section, making it
      a PANIC rather than just ERROR condition.
     </para>

     <para>
      Also, a <command>VACUUM FULL</command> that failed partway through
      vacuuming a system catalog could result in cache corruption in
      concurrent database sessions.
     </para>

     <para>
      Another <command>VACUUM FULL</command> bug introduced in 8.3 could
      result in a crash or out-of-memory report when dealing with
      pages containing no live tuples.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix misbehavior of foreign key checks involving <type>character</type>
      or <type>bit</type> columns (Tom)
     </para>

     <para>
      If the referencing column were of a different but compatible type
      (for instance <type>varchar</type>), the constraint was enforced incorrectly.
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid needless deadlock failures in no-op foreign-key checks (Stephan
      Szabo, Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible core dump when re-planning a prepared query (Tom)
     </para>

     <para>
      This bug affected only protocol-level prepare operations, not
      SQL <command>PREPARE</command>, and so tended to be seen only with
      JDBC, DBI, and other client-side drivers that use prepared
      statements heavily.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix possible failure when re-planning a query that calls an SPI-using
      function (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix failure in row-wise comparisons involving columns of different
      datatypes (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix longstanding <command>LISTEN</command>/<command>NOTIFY</command>
      race condition (Tom)
     </para>

     <para>
      In rare cases a session that had just executed a
      <command>LISTEN</command> might not get a notification, even though
      one would be expected because the concurrent transaction executing
      <command>NOTIFY</command> was observed to commit later.
     </para>

     <para>
      A side effect of the fix is that a transaction that has executed
      a not-yet-committed <command>LISTEN</command> command will not see any
      row in <structname>pg_listener</structname> for the <command>LISTEN</command>,
      should it choose to look; formerly it would have.  This behavior
      was never documented one way or the other, but it is possible that
      some applications depend on the old behavior.
     </para>
    </listitem>

    <listitem>
     <para>
      Disallow <command>LISTEN</command> and <command>UNLISTEN</command> within a
      prepared transaction (Tom)
     </para>

     <para>
      This was formerly allowed but trying to do it had various unpleasant 
      consequences, notably that the originating backend could not exit
      as long as an <command>UNLISTEN</command> remained uncommitted.
     </para>
    </listitem>

    <listitem>
     <para>
      Disallow dropping a temporary table within a
      prepared transaction (Heikki)
     </para>

     <para>
      This was correctly disallowed by 8.1, but the check was inadvertently
      broken in 8.2 and 8.3.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix rare crash when an error occurs during a query using a hash index
      (Heikki)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect comparison of <type>tsquery</type> values (Teodor)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix incorrect behavior of <literal>LIKE</literal> with non-ASCII characters
      in single-byte encodings (Rolf Jentsch)
     </para>
    </listitem>

    <listitem>
     <para>
      Disable <function>xmlvalidate</function> (Tom)
     </para>

     <para>
      This function should have been removed before 8.3 release, but
      was inadvertently left in the source code.  It poses a small
      security risk since unprivileged users could use it to read the
      first few characters of any file accessible to the server.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix memory leaks in certain usages of set-returning functions (Neil)
     </para>
    </listitem>

    <listitem>
     <para>
      Make <function>encode(<replaceable>bytea</replaceable>, 'escape')</function> convert all
      high-bit-set byte values into <literal>\</literal><replaceable>nnn</replaceable> octal
      escape sequences (Tom)
     </para>

     <para>
      This is necessary to avoid encoding problems when the database
      encoding is multi-byte.  This change could pose compatibility issues
      for applications that are expecting specific results from
      <function>encode</function>.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix input of datetime values for February 29 in years BC (Tom)
     </para>

     <para>
      The former coding was mistaken about which years were leap years.
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <quote>unrecognized node type</quote> error in some variants of
      <command>ALTER OWNER</command> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Avoid tablespace permissions errors in <command>CREATE TABLE LIKE
      INCLUDING INDEXES</command> (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Ensure <structname>pg_stat_activity</structname>.<structfield>waiting</structfield> flag
      is cleared when a lock wait is aborted (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix handling of process permissions on Windows Vista (Dave, Magnus)
     </para>

     <para>
      In particular, this fix allows starting the server as the Administrator
      user.
     </para>
    </listitem>

    <listitem>
     <para>
      Update time zone data files to <application>tzdata</application> release 2008a
      (in particular, recent Chile changes); adjust timezone abbreviation
      <literal>VET</literal> (Venezuela) to mean UTC-4:30, not UTC-4:00 (Tom)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>ecpg</application> problems with arrays (Michael)
     </para>
    </listitem>

    <listitem>
     <para>
      Fix <application>pg_ctl</application> to correctly extract the postmaster's port
      number from command-line options (Itagaki Takahiro, Tom)
     </para>

     <para>
      Previously, <literal>pg_ctl start -w</literal> could try to contact the
      postmaster on the wrong port, leading to bogus reports of startup
      failure.
     </para>
    </listitem>

    <listitem>
     <para>
      Use <option>-fwrapv</option> to defend against possible misoptimization
      in recent <application>gcc</application> versions (Tom)
     </para>

     <para>
      This is known to be necessary when building <productname>PostgreSQL</productname>
      with <application>gcc</application> 4.3 or later.
     </para>
    </listitem>

    <listitem>
     <para>
      Enable building <filename>contrib/uuid-ossp</filename> with MSVC (Hiroshi Saito)
     </para>
    </listitem>

   </itemizedlist>

  </sect2>
 </sect1>

 <sect1 id="release-8-3">
  <title>Version 8.3</title>

  <note>
   <title>Date de sortie</title>
   <simpara>2008-02-04</simpara>
  </note>

  <sect2>
   <title>Overview</title>

   <para>
    With significant new functionality and performance enhancements,
    this release represents a major leap forward for
    <productname>PostgreSQL</productname>. This was made possible by a growing
    community that has dramatically accelerated the pace of
    development. This release adds the following major features:
   </para>

   <itemizedlist>

    <listitem>
     <para>
      Full text search is integrated into the core database system
     </para>
    </listitem>

    <listitem>
     <para>
      Support for the SQL/XML standard, including new operators and an
      <type>XML</type> data type
     </para>
    </listitem>

    <listitem>
     <para>
      Enumerated data types (<type>ENUM</type>)
     </para>
    </listitem>

    <listitem>
     <para>
      Arrays of composite types
     </para>
    </listitem>

    <listitem>
     <para>
      Universally Unique Identifier (<type>UUID</type>) data type
     </para>
    </listitem>

    <listitem>
     <para>
      Add control over whether <literal>NULL</literal>s sort first or last
     </para>
    </listitem>

    <listitem>
     <para>
      Updatable cursors
     </para>
    </listitem>

    <listitem>
     <para>
      Server configuration parameters can now be set on a per-function
      basis
     </para>
    </listitem>

    <listitem>
     <para>
      User-defined types can now have type modifiers
     </para>
    </listitem>

    <listitem>
     <para>
      Automatically re-plan cached queries when table
      definitions change or statistics are updated
     </para>
    </listitem>

    <listitem>
     <para>
      Numerous improvements in logging and statistics collection
     </para>
    </listitem>

    <listitem>
     <para>
      Support Security Service Provider Interface (<acronym>SSPI</acronym>) for
      authentication on Windows
     </para>
    </listitem>

    <listitem>
     <para>
      Support multiple concurrent autovacuum processes, and other
      autovacuum improvements
     </para>
    </listitem>

    <listitem>
     <para>
      Allow the whole <productname>PostgreSQL</productname> distribution to be compiled
      with <productname>Microsoft Visual C++</productname>
     </para>
    </listitem>

   </itemizedlist>

   <para>
    Major performance improvements are listed below.  Most of
    these enhancements are automatic and do not require user changes or
    tuning:
   </para>

  <itemizedlist>

    <listitem>
     <para>
      Asynchronous commit delays writes to WAL during transaction commit
     </para>
    </listitem>

    <listitem>
     <para>
      Checkpoint writes can be spread over a longer time period to smooth
      the I/O spike during each checkpoint
     </para>
    </listitem>

    <listitem>
     <para>
      Heap-Only Tuples (<acronym>HOT</acronym>) accelerate space reuse for
      most <command>UPDATE</command>s and <command>DELETE</command>s
     </para>
    </listitem>

    <listitem>
     <para>
      Just-in-time background writer strategy improves disk write
      efficiency
     </para>
    </listitem>

    <listitem>
     <para>
      Using non-persistent transaction IDs for read-only transactions
      reduces overhead and <command>VACUUM</command> requirements
     </para>
    </listitem>

    <listitem>
     <para>
      Per-field and per-row storage overhead has been reduced
     </para>
    </listitem>

    <listitem>
     <para>
      Large sequential scans no longer force out frequently used
      cached pages
     </para>
    </listitem>

    <listitem>
     <para>
      Concurrent large sequential scans can now share disk reads
     </para>
    </listitem>

    <listitem>
     <para>
      <literal>ORDER BY ... LIMIT</literal> can be done without sorting
     </para>
    </listitem>

   </itemizedlist>

   <para>
    The above items are explained in more detail in the sections below.
   </para>

  </sect2>

  <sect2>
   <title>Migration vers la version 8.3</title>

   <para>
    A dump/restore using <application>pg_dump</application> is
    required for those wishing to migrate data from any previous
    release.
   </para>

   <para>
    Observe the following incompatibilities:
   </para>

   <sect3>
    <title>General</title>
    <itemizedlist>

     <listitem>
      <para>
       Non-character data types are no longer automatically cast to
       <type>TEXT</type> (Peter, Tom)
      </para>

      <para>
       Previously, if a non-character value was supplied to an operator or
       function that requires <type>text</type> input, it was automatically
       cast to <type>text</type>, for most (though not all) built-in data types.
       This no longer happens: an explicit cast to <type>text</type> is now
       required for all non-character-string types.  For example, these
       expressions formerly worked:

<programlisting>
substr(current_date, 1, 4)
23 LIKE '2%'
</programlisting>

       but will now draw <quote>function does not exist</quote> and <quote>operator
       does not exist</quote> errors respectively.  Use an explicit cast instead:

<programlisting>
substr(current_date::text, 1, 4)
23::text LIKE '2%'
</programlisting>

       (Of course, you can use the more verbose <literal>CAST()</literal> syntax too.)
       The reason for the change is that these automatic casts too often caused
       surprising behavior.  An example is that in previous releases, this
       expression was accepted but did not do what was expected:

<programlisting>
current_date &lt; 2017-11-17
</programlisting>

       This is actually comparing a date to an integer, which should be
       (and now is) rejected &mdash; but in the presence of automatic
       casts both sides were cast to <type>text</type> and a textual comparison
       was done, because the <literal>text &lt; text</literal> operator was able
       to match the expression when no other <literal>&lt;</literal> operator could.
      </para>

      <para>
       Types <type>char(<replaceable>n</replaceable>)</type> and
       <type>varchar(<replaceable>n</replaceable>)</type> still cast to <type>text</type>
       automatically.  Also, automatic casting to <type>text</type> still works for
       inputs to the concatenation (<literal>||</literal>) operator, so long as least
       one input is a character-string type.
      </para>
     </listitem>

     <listitem>
      <para>
        Full text search features from <filename>contrib/tsearch2</filename> have
        been moved into the core server, with some minor syntax changes
      </para>

      <para>
       <filename>contrib/tsearch2</filename> now contains a compatibility
       interface.
      </para>
     </listitem>

     <listitem>
      <para>
       <literal>ARRAY(SELECT ...)</literal>, where the <command>SELECT</command>
       returns no rows, now returns an empty array, rather than NULL
       (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       The array type name for a base data type is no longer always the base
       type's name with an underscore prefix
      </para>

      <para>
       The old naming convention is still honored when possible, but
       application code should no longer depend on it. Instead
       use the new <literal>pg_type.typarray</literal> column to
       identify the array data type associated with a given type.
      </para>
     </listitem>

     <listitem>
      <para>
       <literal>ORDER BY ... USING</literal> <replaceable>operator</replaceable> must now
       use a less-than or greater-than <replaceable>operator</replaceable> that is
       defined in a btree operator class
      </para>

      <para>
       This restriction was added to prevent inconsistent results.
      </para>
     </listitem>

     <listitem>
      <para>
       <command>SET LOCAL</command> changes now persist until
       the end of the outermost transaction, unless rolled back (Tom)
      </para>

      <para>
       Previously <command>SET LOCAL</command>'s effects were lost
       after subtransaction commit (<command>RELEASE SAVEPOINT</command>
       or exit from a PL/pgSQL exception block).
      </para>
     </listitem>

     <listitem>
      <para>
       Commands rejected in transaction blocks are now also rejected in
       multiple-statement query strings (Tom)
      </para>

      <para>
       For example, <literal>"BEGIN; DROP DATABASE; COMMIT"</literal> will now be
       rejected even if submitted as a single query message.
      </para>
     </listitem>

     <listitem>
      <para>
       <command>ROLLBACK</command> outside a transaction block now
       issues <literal>NOTICE</literal> instead of <literal>WARNING</literal> (Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
       Prevent <command>NOTIFY</command>/<command>LISTEN</command>/<command>UNLISTEN</command>
       from accepting schema-qualified names (Bruce)
      </para>

      <para>
       Formerly, these commands accepted <literal>schema.relation</literal> but
       ignored the schema part, which was confusing.
      </para>
     </listitem>

     <listitem>
      <para>
       <command>ALTER SEQUENCE</command> no longer affects the sequence's
       <function>currval()</function> state (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Foreign keys now must match indexable conditions for
       cross-data-type references (Tom)
      </para>

      <para>
       This improves semantic consistency and helps avoid
       performance problems.
      </para>
     </listitem>

     <listitem>
      <para>
       Restrict object size functions to users who have reasonable
       permissions to view such information (Tom)
      </para>

      <para>
       For example, <function>pg_database_size()</function> now requires
       <literal>CONNECT</literal> permission, which is granted to everyone by
       default. <function>pg_tablespace_size()</function> requires
       <literal>CREATE</literal> permission in the tablespace, or is allowed if
       the tablespace is the default tablespace for the database.
      </para>
     </listitem>

     <listitem>
      <para>
       Remove the undocumented <literal>!!=</literal> (not in) operator (Tom)
      </para>

      <para>
       <literal>NOT IN (SELECT ...)</literal> is the proper way to
       perform this operation.
      </para>
     </listitem>

     <listitem>
      <para>
       Internal hashing functions are now more uniformly-distributed (Tom)
      </para>

      <para>
       If application code was computing and storing hash values using
       internal <productname>PostgreSQL</productname> hashing functions, the hash
       values must be regenerated.
      </para>
     </listitem>

     <listitem>
      <para>
       C-code conventions for handling variable-length data values
       have changed (Greg Stark, Tom)
      </para>

      <para>
       The new <function>SET_VARSIZE()</function> macro <emphasis>must</emphasis> be used
       to set the length of generated <type>varlena</type> values. Also, it
       might be necessary to expand (<quote>de-TOAST</quote>) input values
       in more cases.
      </para>
     </listitem>

     <listitem>
      <para>
       Continuous archiving no longer reports each successful archive
       operation to the server logs unless <literal>DEBUG</literal> level is used
       (Simon)
      </para>
     </listitem>

    </itemizedlist>

    </sect3>

    <sect3>
     <title>Configuration Parameters</title>

    <itemizedlist>

     <listitem>
      <para>
       Numerous changes in administrative server parameters
      </para>

      <para>
       <varname>bgwriter_lru_percent</varname>,
       <varname>bgwriter_all_percent</varname>,
       <varname>bgwriter_all_maxpages</varname>,
       <varname>stats_start_collector</varname>, and
       <varname>stats_reset_on_server_start</varname> are removed.
       <varname>redirect_stderr</varname> is renamed to
       <varname>logging_collector</varname>.
       <varname>stats_command_string</varname> is renamed to
       <varname>track_activities</varname>.
       <varname>stats_block_level</varname> and <varname>stats_row_level</varname>
       are merged into <varname>track_counts</varname>.
       A new boolean configuration parameter, <varname>archive_mode</varname>,
       controls archiving. Autovacuum's default settings have changed.
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <varname>stats_start_collector</varname> parameter (Tom)
      </para>

      <para>
       We now always start the collector process, unless <acronym>UDP</acronym>
       socket creation fails.
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <varname>stats_reset_on_server_start</varname> parameter (Tom)
      </para>

      <para>
       This was removed because <function>pg_stat_reset()</function>
       can be used for this purpose.
      </para>
     </listitem>

     <listitem>
      <para>
       Commenting out a parameter in <filename>postgresql.conf</filename> now
       causes it to revert to its default value (Joachim Wieland)
      </para>

      <para>
       Previously, commenting out an entry left the parameter's value unchanged
       until the next server restart.
      </para>
     </listitem>

    </itemizedlist>

    </sect3>


    <sect3>
     <title>Character Encodings</title>

    <itemizedlist>

     <listitem>
      <para>
       Add more checks for invalidly-encoded data (Andrew)
      </para>

      <para>
       This change plugs some holes that existed in literal backslash
       escape string processing and <command>COPY</command> escape
       processing. Now the de-escaped string is rechecked to see if the
       result created an invalid multi-byte character.
      </para>
     </listitem>

     <listitem>
      <para>
       Disallow database encodings that are inconsistent with the server's
       locale setting (Tom)
      </para>

      <para>
       On most platforms, <literal>C</literal> locale is the only locale that
       will work with any database encoding.  Other locale settings imply
       a specific encoding and will misbehave if the database encoding
       is something different.  (Typical symptoms include bogus textual
       sort order and wrong results from <function>upper()</function> or
       <function>lower()</function>.)  The server now rejects attempts to create
       databases that have an incompatible encoding.
      </para>
     </listitem>

     <listitem>
      <para>
       Ensure that <function>chr()</function> cannot create
       invalidly-encoded values (Andrew)
      </para>

      <para>
       In UTF8-encoded databases the argument of <function>chr()</function> is
       now treated as a Unicode code point. In other multi-byte encodings
       <function>chr()</function>'s argument must designate a 7-bit ASCII
       character.  Zero is no longer accepted.
       <function>ascii()</function> has been adjusted to match.
      </para>
     </listitem>

     <listitem>
      <para>
       Adjust <function>convert()</function> behavior to ensure encoding
       validity (Andrew)
      </para>

      <para>
       The two argument form of <function>convert()</function> has been
       removed. The three argument form now takes a <type>bytea</type>
       first argument and returns a <type>bytea</type>. To cover the
       loss of functionality, three new functions have been added:
      </para>

      <itemizedlist>
       <listitem>
        <para>
         <function>convert_from(bytea, name)</function> returns
         <type>text</type> &mdash; converts the first argument from the named
         encoding to the database encoding
        </para>
       </listitem>

       <listitem>
        <para>
         <function>convert_to(text, name)</function> returns
         <type>bytea</type> &mdash; converts the first argument from the
         database encoding to the named encoding
        </para>
       </listitem>

       <listitem>
        <para>
         <function>length(bytea, name)</function> returns
         <type>integer</type> &mdash; gives the length of the first
         argument in characters in the named encoding
        </para>
       </listitem>
      </itemizedlist>
     </listitem>

     <listitem>
      <para>
       Remove <literal>convert(argument USING conversion_name)</literal>
       (Andrew)
      </para>

      <para>
       Its behavior did not match the SQL standard.
      </para>
     </listitem>

     <listitem>
      <para>
       Make JOHAB encoding client-only (Tatsuo)
      </para>

      <para>
       JOHAB is not safe as a server-side encoding.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

  </sect2>

  <sect2>
   <title>Modifications</title>

   <para>
    Below you will find a detailed account of the
    changes between <productname>PostgreSQL</productname> 8.3 and
    the previous major release.
   </para>

   <sect3>
    <title>Performance</title>
    <itemizedlist>

     <listitem>
      <para>
       Asynchronous commit delays writes to WAL during transaction commit
       (Simon)
      </para>

      <para>
       This feature dramatically increases performance for short data-modifying
       transactions. The disadvantage is that because disk writes are
       delayed, if the operating system crashes before data is written to
       the disk, committed data will be lost. This feature is useful for
       applications that can accept some data loss.  Unlike turning off
       <varname>fsync</varname>, asynchronous commit does not put database
       consistency at risk; the worst case is that after a database or system
       crash the last few reportedly-committed transactions might be missing.
       This feature is enabled by turning off <varname>synchronous_commit</varname>
       (which can be done per-session or per-transaction, if some transactions
       are critical and others are not).
       <varname>wal_writer_delay</varname> can be adjusted to control the maximum
       delay before transactions actually reach disk.
      </para>
     </listitem>

     <listitem>
      <para>
       Checkpoint writes can be spread over a longer time period to smooth
       the I/O spike during each checkpoint (Itagaki Takahiro and Heikki
       Linnakangas)
      </para>

      <para>
       Previously all modified buffers were forced to disk as quickly as
       possible during a
       checkpoint, causing an I/O spike that decreased server performance.
       This new approach spreads out disk writes during checkpoints,
       reducing peak I/O usage. (User-requested and shutdown checkpoints
       are still written as quickly as possible.)
      </para>
     </listitem>

     <listitem>
      <para>
       Heap-Only Tuples (<acronym>HOT</acronym>) accelerate space reuse for most
       <command>UPDATE</command>s and <command>DELETE</command>s (Pavan Deolasee, with
       ideas from many others)
      </para>

      <para>
       <command>UPDATE</command>s and <command>DELETE</command>s leave dead tuples
       behind, as do failed <command>INSERT</command>s.  Previously only
       <command>VACUUM</command> could reclaim space taken by dead tuples. With
       <acronym>HOT</acronym> dead tuple space can be automatically reclaimed at the time of
       <command>INSERT</command> or <command>UPDATE</command> if no changes are made to
       indexed columns.  This allows for more consistent performance.
       Also, <acronym>HOT</acronym> avoids adding duplicate index entries.
      </para>
     </listitem>

     <listitem>
      <para>
       Just-in-time background writer strategy improves disk write
       efficiency (Greg Smith, Itagaki Takahiro)
      </para>

      <para>
       This greatly reduces the need for manual tuning of the background
       writer.
      </para>
     </listitem>

     <listitem>
      <para>
       Per-field and per-row storage overhead have been reduced
       (Greg Stark, Heikki Linnakangas)
      </para>

      <para>
       Variable-length data types with data values less than 128 bytes long
       will see a storage decrease of 3 to 6 bytes. For example, two adjacent
       <type>char(1)</type> fields now use 4 bytes instead of 16. Row headers
       are also 4 bytes shorter than before.
      </para>
     </listitem>

     <listitem>
      <para>
       Using non-persistent transaction IDs for read-only transactions
       reduces overhead and <command>VACUUM</command> requirements (Florian Pflug)
      </para>

      <para>
       Non-persistent transaction IDs do not increment the global
       transaction counter. Therefore, they reduce the load on
       <structname>pg_clog</structname> and increase the time between forced
       vacuums to prevent transaction ID wraparound.
       Other performance
       improvements were also made that should improve concurrency.
      </para>
     </listitem>

     <listitem>
      <para>
       Avoid incrementing the command counter after a read-only command (Tom)
      </para>

      <para>
       There was formerly a hard limit of 2<superscript>32</superscript>
       (4 billion) commands per transaction.  Now only commands that
       actually changed the database count, so while this limit still
       exists, it should be significantly less annoying.
      </para>
     </listitem>

     <listitem>
      <para>
       Create a dedicated <acronym>WAL</acronym> writer process to off-load
       work from backends (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Skip unnecessary WAL writes for <command>CLUSTER</command> and
       <command>COPY</command> (Simon)
      </para>

      <para>
       Unless WAL archiving is enabled, the system now avoids WAL writes
       for <command>CLUSTER</command> and just <function>fsync()</function>s the
       table at the end of the command.  It also does the same for
       <command>COPY</command> if the table was created in the same
       transaction.
      </para>
     </listitem>

     <listitem>
      <para>
       Large sequential scans no longer force out frequently used
       cached pages (Simon, Heikki, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Concurrent large sequential scans can now share disk reads (Jeff Davis)
      </para>

      <para>
       This is accomplished by starting the new sequential scan in the
       middle of the table (where another sequential scan is already
       in-progress) and wrapping around to the beginning to finish.  This
       can affect the order of returned rows in a query that does not
       specify <literal>ORDER BY</literal>. The <varname>synchronize_seqscans</varname>
       configuration parameter can be used to disable this if necessary.
      </para>
     </listitem>

     <listitem>
      <para>
       <literal>ORDER BY ... LIMIT</literal> can be done without sorting
       (Greg Stark)
      </para>

      <para>
       This is done by sequentially scanning the table and tracking just
       the <quote>top N</quote> candidate rows, rather than performing a
       full sort of the entire table.  This is useful when there is no
       matching index and the <literal>LIMIT</literal> is not large.
      </para>
     </listitem>

     <listitem>
      <para>
       Put a rate limit on messages sent to the statistics
       collector by backends
       (Tom)
      </para>

      <para>
       This reduces overhead for short transactions, but might sometimes
       increase the delay before statistics are tallied.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve hash join performance for cases with many NULLs (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Speed up operator lookup for cases with non-exact datatype matches (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Server</title>
    <itemizedlist>

     <listitem>
      <para>
       Autovacuum is now enabled by default (Alvaro)
      </para>

      <para>
       Several changes were made to eliminate disadvantages of having
       autovacuum enabled, thereby justifying the change in default.
       Several other autovacuum parameter defaults were also modified.
      </para>
     </listitem>

     <listitem>
      <para>
       Support multiple concurrent autovacuum processes (Alvaro, Itagaki
       Takahiro)
      </para>

      <para>
       This allows multiple vacuums to run concurrently.  This prevents
       vacuuming of a large table from delaying vacuuming of smaller tables.
      </para>
     </listitem>

     <listitem>
      <para>
       Automatically re-plan cached queries when table
       definitions change or statistics are updated (Tom)
      </para>

      <para>
       Previously PL/PgSQL functions that referenced temporary tables
       would fail if the temporary table was dropped and recreated
       between function invocations, unless <literal>EXECUTE</literal> was
       used.  This improvement fixes that problem and many related issues.
      </para>
     </listitem>

     <listitem>
      <para>
       Add a <varname>temp_tablespaces</varname> parameter to control
       the tablespaces for temporary tables and files (Jaime Casanova,
       Albert Cervera, Bernd Helmle)
      </para>

      <para>
       This parameter defines a list of tablespaces to be used.  This
       enables spreading the I/O load across multiple tablespaces. A random
       tablespace is chosen each time a temporary object is created.
       Temporary files are no longer stored in per-database
       <filename>pgsql_tmp/</filename> directories but in per-tablespace
       directories.
      </para>
     </listitem>

     <listitem>
      <para>
       Place temporary tables' TOAST tables in special schemas named
       <literal>pg_toast_temp_<replaceable>nnn</replaceable></literal> (Tom)
      </para>

      <para>
       This allows low-level code to recognize these tables as temporary,
       which enables various optimizations such as not WAL-logging changes
       and using local rather than shared buffers for access. This also
       fixes a bug wherein backends unexpectedly held open file references
       to temporary TOAST tables.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix problem that a constant flow of new connection requests could
       indefinitely delay the postmaster from completing a shutdown or
       a crash restart (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Guard against a very-low-probability data loss scenario by preventing
       re-use of a deleted table's relfilenode until after the next
       checkpoint (Heikki)
      </para>
     </listitem>

     <listitem>
      <para>
       Fix <command>CREATE CONSTRAINT TRIGGER</command>
       to convert old-style foreign key trigger definitions into regular
       foreign key constraints (Tom)
      </para>

      <para>
       This will ease porting of foreign key constraints carried forward from
       pre-7.3 databases, if they were never converted using
       <filename>contrib/adddepend</filename>.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix <literal>DEFAULT NULL</literal> to override inherited defaults (Tom)
      </para>

      <para>
       <literal>DEFAULT NULL</literal> was formerly considered a noise phrase, but it
       should (and now does) override non-null defaults that would otherwise
       be inherited from a parent table or domain.
      </para>
     </listitem>

     <listitem>
      <para>
       Add new encodings EUC_JIS_2004 and SHIFT_JIS_2004 (Tatsuo)
      </para>

      <para>
       These new encodings can be converted to and from UTF-8.
      </para>
     </listitem>

     <listitem>
      <para>
       Change server startup log message from <quote>database system is
       ready</quote> to <quote>database system is ready to accept
       connections</quote>, and adjust its timing
      </para>

      <para>
       The message now appears only when the postmaster is really ready
       to accept connections.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Monitoring</title>
    <itemizedlist>

     <listitem>
      <para>
       Add <varname>log_autovacuum_min_duration</varname> parameter to
       support configurable logging of autovacuum activity (Simon, Alvaro)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <varname>log_lock_waits</varname> parameter to log lock waiting
       (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <varname>log_temp_files</varname> parameter to log temporary
       file usage (Bill Moran)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <varname>log_checkpoints</varname> parameter to improve logging
       of checkpoints (Greg Smith, Heikki)
      </para>
     </listitem>

     <listitem>
      <para>
       <varname>log_line_prefix</varname> now supports
       <literal>%s</literal> and <literal>%c</literal> escapes in all
       processes (Andrew)
      </para>

      <para>
       Previously these escapes worked only for user sessions, not for
       background database processes.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <varname>log_restartpoints</varname> to control logging of
       point-in-time recovery restart points (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Last transaction end time is now logged at end of recovery and at
       each logged restart point (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Autovacuum now reports its activity start time in
       <literal>pg_stat_activity</literal> (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow server log output in comma-separated value (CSV) format (Arul
       Shaji, Greg Smith, Andrew Dunstan)
      </para>

      <para>
       CSV-format log files can easily be loaded into a database table for
       subsequent analysis.
      </para>
     </listitem>

     <listitem>
      <para>
       Use PostgreSQL-supplied timezone support for formatting timestamps
       displayed in the server log (Tom)
      </para>

      <para>
       This avoids Windows-specific problems with localized time zone
       names that are in the wrong encoding. There is a new
       <varname>log_timezone</varname> parameter that controls the timezone
       used in log messages, independently of the client-visible
       <varname>timezone</varname> parameter.
      </para>
     </listitem>

     <listitem>
      <para>
       New system view <literal>pg_stat_bgwriter</literal> displays
       statistics about background writer activity (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Add new columns for database-wide tuple statistics to
       <literal>pg_stat_database</literal> (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Add an <literal>xact_start</literal> (transaction start time) column to
       <literal>pg_stat_activity</literal> (Neil)
      </para>

      <para>
       This makes it easier to identify long-running transactions.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>n_live_tuples</literal> and <literal>n_dead_tuples</literal> columns
       to <literal>pg_stat_all_tables</literal> and related views (Glen
       Parker)
      </para>
     </listitem>

     <listitem>
      <para>
       Merge <varname>stats_block_level</varname> and <varname>stats_row_level</varname>
       parameters into a single parameter <varname>track_counts</varname>, which
       controls all messages sent to the statistics collector process
       (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Rename <varname>stats_command_string</varname> parameter to
       <varname>track_activities</varname> (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Fix statistical counting of live and dead tuples to recognize that
       committed and aborted transactions have different effects (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Authentication</title>
    <itemizedlist>

     <listitem>
      <para>
       Support Security Service Provider Interface (<acronym>SSPI</acronym>) for
       authentication on Windows (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Support GSSAPI authentication (Henry Hotz, Magnus)
      </para>

      <para>
       This should be preferred to native Kerberos authentication because
       GSSAPI is an industry standard.
      </para>
     </listitem>

     <listitem>
      <para>
       Support a global SSL configuration file (Victor Wagner)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <varname>ssl_ciphers</varname> parameter to control accepted SSL ciphers
       (Victor Wagner)
      </para>
     </listitem>

     <listitem>
      <para>
       Add a Kerberos realm parameter, <varname>krb_realm</varname> (Magnus)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Write-Ahead Log (<acronym>WAL</acronym>) and Continuous Archiving</title>
    <itemizedlist>

     <listitem>
      <para>
       Change the timestamps recorded in transaction WAL records from
       time_t to TimestampTz representation (Tom)
      </para>

      <para>
       This provides sub-second resolution in WAL, which can be useful for
       point-in-time recovery.
      </para>
     </listitem>

     <listitem>
      <para>
       Reduce WAL disk space needed by warm standby servers (Simon)
      </para>

      <para>
       This change allows a warm standby server to pass the name of the earliest
       still-needed WAL file to the recovery script, allowing automatic removal
       of no-longer-needed WAL files.  This is done using <literal>%r</literal> in
       the <varname>restore_command</varname> parameter of
       <filename>recovery.conf</filename>.
      </para>
     </listitem>

     <listitem>
      <para>
       New boolean configuration parameter, <varname>archive_mode</varname>,
       controls archiving (Simon)
      </para>

      <para>
       Previously setting <varname>archive_command</varname> to an empty string
       turned off archiving. Now <varname>archive_mode</varname> turns archiving
       on and off, independently of <varname>archive_command</varname>. This is
       useful for stopping archiving temporarily.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Queries</title>
    <itemizedlist>

     <listitem>
      <para>
       Full text search is integrated into the core database
       system (Teodor, Oleg)
      </para>

      <para>
       Text search has been improved, moved into the core code, and is now
       installed by default.  <filename>contrib/tsearch2</filename> now contains
       a compatibility interface.
      </para>
     </listitem>

     <listitem>
      <para>
       Add control over whether <literal>NULL</literal>s sort first or last (Teodor, Tom)
      </para>

      <para>
       The syntax is <literal>ORDER BY ... NULLS FIRST/LAST</literal>.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow per-column ascending/descending (<literal>ASC</literal>/<literal>DESC</literal>)
       ordering options for indexes (Teodor, Tom)
      </para>

      <para>
       Previously a query using <literal>ORDER BY</literal> with mixed
       <literal>ASC</literal>/<literal>DESC</literal> specifiers could not fully use
       an index. Now an index can be fully used in such cases if the
       index was created with matching
       <literal>ASC</literal>/<literal>DESC</literal> specifications.
       <literal>NULL</literal> sort order within an index can be controlled, too.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>col IS NULL</literal> to use an index (Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
       Updatable cursors (Arul Shaji, Tom)
      </para>

      <para>
       This eliminates the need to reference a primary key to
       <command>UPDATE</command> or <command>DELETE</command> rows returned by a cursor.
       The syntax is <literal>UPDATE/DELETE WHERE CURRENT OF</literal>.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>FOR UPDATE</literal> in cursors (Arul Shaji, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Create a general mechanism that supports casts to and from the
       standard string types (<type>TEXT</type>, <type>VARCHAR</type>,
       <type>CHAR</type>) for <emphasis>every</emphasis> datatype, by
       invoking the datatype's I/O functions (Tom)
      </para>

      <para>
       Previously, such casts were available only for types that had
       specialized function(s) for the purpose.
       These new casts are assignment-only in the to-string direction,
       explicit-only in the other direction, and therefore should create no
       surprising behavior.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>UNION</literal> and related constructs to return a domain
       type, when all inputs are of that domain type (Tom)
      </para>

      <para>
       Formerly, the output would be considered to be of the domain's base
       type.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow limited hashing when using two different data types (Tom)
      </para>

      <para>
       This allows hash joins, hash indexes, hashed subplans, and hash
       aggregation to be used in situations involving cross-data-type
       comparisons, if the data types have compatible hash functions.
       Currently, cross-data-type hashing support exists for
       <type>smallint</type>/<type>integer</type>/<type>bigint</type>,
       and for <type>float4</type>/<type>float8</type>.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve optimizer logic for detecting when variables are equal
       in a <literal>WHERE</literal> clause (Tom)
      </para>

      <para>
       This allows mergejoins to work with descending sort orders, and
       improves recognition of redundant sort columns.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve performance when planning large inheritance trees in
       cases where most tables are excluded by constraints (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Object Manipulation</title>
    <itemizedlist>

     <listitem>

      <para>
       Arrays of composite types (David Fetter, Andrew, Tom)
      </para>

      <para>
       In addition to arrays of explicitly-declared composite types,
       arrays of the rowtypes of regular tables and views are now
       supported, except for rowtypes of system catalogs, sequences, and TOAST
       tables.
      </para>

     </listitem>

     <listitem>
      <para>
       Server configuration parameters can now be set on a per-function
       basis (Tom)
      </para>

      <para>
       For example, functions can now set their own
       <varname>search_path</varname> to prevent unexpected behavior if a
       different <varname>search_path</varname> exists at run-time.  Security
       definer functions should set <varname>search_path</varname> to
       avoid security loopholes.
      </para>
     </listitem>

     <listitem>
      <para>
       <command>CREATE/ALTER FUNCTION</command> now supports
       <literal>COST</literal> and <literal>ROWS</literal> options (Tom)
      </para>

      <para>
       <literal>COST</literal> allows specification of the cost of a
       function call.  <literal>ROWS</literal> allows specification of
       the average number or rows returned by a set-returning function.
       These values are used by the optimizer in choosing the best plan.
      </para>
     </listitem>

     <listitem>
      <para>
       Implement <command>CREATE TABLE LIKE ...  INCLUDING
       INDEXES</command> (Trevor Hardcastle, Nikhil Sontakke, Neil)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <command>CREATE INDEX CONCURRENTLY</command> to ignore
       transactions in other databases (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <command>ALTER VIEW ... RENAME TO</command> and <command>ALTER
       SEQUENCE ... RENAME TO</command> (David Fetter, Neil)
      </para>

      <para>
       Previously this could only be done via <command>ALTER TABLE ...
       RENAME TO</command>.
      </para>
     </listitem>

     <listitem>
      <para>
       Make <command>CREATE/DROP/RENAME DATABASE</command> wait briefly for
       conflicting backends to exit before failing (Tom)
      </para>

      <para>
       This increases the likelihood that these commands will succeed.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow triggers and rules to be deactivated in groups using a
       configuration parameter, for replication purposes (Jan)
      </para>

      <para>
       This allows replication systems to disable triggers and rewrite
       rules as a group without modifying the system catalogs directly.
       The behavior is controlled by <command>ALTER TABLE</command> and a new
       parameter <varname>session_replication_role</varname>.
      </para>
     </listitem>

     <listitem>
      <para>
       User-defined types can now have type modifiers (Teodor, Tom)
      </para>

      <para>
       This allows a user-defined type to take a modifier, like
       <type>ssnum(7)</type>.  Previously only built-in
       data types could have modifiers.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Utility Commands</title>
    <itemizedlist>

     <listitem>
      <para>
       Non-superuser database owners now are able to add trusted procedural
       languages to their databases by default (Jeremy Drake)
      </para>

      <para>
       While this is reasonably safe, some administrators might wish to
       revoke the privilege. It is controlled by
       <structname>pg_pltemplate</structname>.<structfield>tmpldbacreate</structfield>.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow a session's current parameter setting to be used as the
       default for future sessions (Tom)
      </para>

      <para>
       This is done with <literal>SET ... FROM CURRENT</literal> in
       <command>CREATE/ALTER FUNCTION</command>, <command>ALTER
       DATABASE</command>, or <command>ALTER ROLE</command>.
      </para>
     </listitem>

     <listitem>
      <para>
       Implement new commands <command>DISCARD ALL</command>,
       <command>DISCARD PLANS</command>, <command>DISCARD
       TEMPORARY</command>, <command>CLOSE ALL</command>, and
       <command>DEALLOCATE ALL</command> (Marko Kreen, Neil)
      </para>

      <para>
       These commands simplify resetting a database session to its initial
       state, and are particularly useful for connection-pooling software.
      </para>
     </listitem>

     <listitem>
      <para>
       Make <command>CLUSTER</command> MVCC-safe (Heikki Linnakangas)
      </para>

      <para>
       Formerly, <command>CLUSTER</command> would discard all tuples
       that were committed dead, even if there were still transactions
       that should be able to see them under MVCC visibility rules.
      </para>
     </listitem>

     <listitem>
      <para>
       Add new <command>CLUSTER</command> syntax: <literal>CLUSTER
       <replaceable>table</replaceable> USING <replaceable>index</replaceable></literal>
       (Holger Schurig)
     </para>

      <para>
       The old <command>CLUSTER</command> syntax is still supported, but
       the new form is considered more logical.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix <command>EXPLAIN</command> so it can show complex plans
       more accurately (Tom)
      </para>

      <para>
       References to subplan outputs are now always shown correctly,
       instead of using <literal>?column<replaceable>N</replaceable>?</literal>
       for complicated cases.
      </para>
     </listitem>

     <listitem>
      <para>
       Limit the amount of information reported when a user is dropped
       (Alvaro)
      </para>

      <para>
       Previously, dropping (or attempting to drop) a user who owned many
       objects could result in large <literal>NOTICE</literal> or
       <literal>ERROR</literal> messages listing all these objects; this
       caused problems for some client applications.  The length of the
       message is now limited, although a full list is still sent to the
       server log.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Data Types</title>
    <itemizedlist>

     <listitem>
      <para>
       Support for the SQL/XML standard, including new operators and an
       <type>XML</type> data type (Nikolay Samokhvalov, Pavel Stehule, Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Enumerated data types (<type>ENUM</type>) (Tom Dunstan)
      </para>

      <para>
       This feature provides convenient support for fields that have a
       small, fixed set of allowed values.  An example of creating an
       <literal>ENUM</literal> type is
       <literal>CREATE TYPE mood AS ENUM ('sad', 'ok', 'happy')</literal>.
      </para>
     </listitem>

     <listitem>
      <para>
       Universally Unique Identifier (<type>UUID</type>) data type (Gevik
       Babakhani, Neil)
      </para>

      <para>
       This closely matches <acronym>RFC</acronym> 4122.
      </para>
     </listitem>

     <listitem>
      <para>
       Widen the <type>MONEY</type> data type to 64 bits (D'Arcy Cain)
      </para>

      <para>
       This greatly increases the range of supported <type>MONEY</type>
       values.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix <type>float4</type>/<type>float8</type> to handle
       <literal>Infinity</literal> and <literal>NAN</literal> (Not A Number)
       consistently (Bruce)
      </para>

      <para>
       The code formerly was not consistent about distinguishing
       <literal>Infinity</literal> from overflow conditions.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow leading and trailing whitespace during input of
       <type>boolean</type> values (Neil)
      </para>
     </listitem>

     <listitem>
      <para>
       Prevent <command>COPY</command> from using digits and lowercase letters as
       delimiters (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Functions</title>
    <itemizedlist>

     <listitem>
      <para>
       Add new regular expression functions
       <function>regexp_matches()</function>,
       <function>regexp_split_to_array()</function>, and
       <function>regexp_split_to_table()</function> (Jeremy Drake, Neil)
      </para>

      <para>
       These functions provide extraction of regular expression
       subexpressions and allow splitting a string using a POSIX regular
       expression.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>lo_truncate()</function> for large object truncation
       (Kris Jurka)
      </para>
     </listitem>

     <listitem>
      <para>
       Implement <function>width_bucket()</function> for the <type>float8</type>
       data type (Neil)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>pg_stat_clear_snapshot()</function> to discard
       statistics snapshots collected during the current transaction
       (Tom)
      </para>

      <para>
       The first request for statistics in a transaction takes a statistics
       snapshot that does not change during the transaction.  This function
       allows the snapshot to be discarded and a new snapshot loaded during
       the next statistics query. This is particularly useful for PL/PgSQL
       functions, which are confined to a single transaction.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>isodow</literal> option to <function>EXTRACT()</function> and
       <function>date_part()</function> (Bruce)
      </para>

      <para>
       This returns the day of the week, with Sunday as seven.
       (<literal>dow</literal> returns Sunday as zero.)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>ID</literal> (ISO day of week) and <literal>IDDD</literal> (ISO
       day of year) format codes for <function>to_char()</function>,
       <function>to_date()</function>, and <function>to_timestamp()</function> (Brendan
       Jurd)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <function>to_timestamp()</function> and <function>to_date()</function>
       assume <literal>TM</literal> (trim) option for potentially
       variable-width fields (Bruce)
      </para>

      <para>
       This matches <productname>Oracle</productname>'s behavior.
      </para>
     </listitem>

     <listitem>
      <para>
       Fix off-by-one conversion error in
       <function>to_date()</function>/<function>to_timestamp()</function>
       <literal>D</literal> (non-ISO day of week) fields (Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <function>setseed()</function> return void, rather than a
       useless integer value (Neil)
      </para>
     </listitem>

     <listitem>
      <para>
       Add a hash function for <type>NUMERIC</type> (Neil)
      </para>

      <para>
       This allows hash indexes and hash-based plans to be used with
       <type>NUMERIC</type> columns.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve efficiency of
       <literal>LIKE</literal>/<literal>ILIKE</literal>, especially for
       multi-byte character sets like UTF-8 (Andrew, Itagaki Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Make <function>currtid()</function> functions require
       <literal>SELECT</literal> privileges on the target table (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Add several <function>txid_*()</function> functions to query
       active transaction IDs (Jan)
      </para>

      <para>
       This is useful for various replication solutions.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>PL/PgSQL Server-Side Language</title>
    <itemizedlist>

     <listitem>
      <para>
       Add scrollable cursor support, including directional control in
       <command>FETCH</command> (Pavel Stehule)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>IN</literal> as an alternative to
       <literal>FROM</literal> in PL/PgSQL's <command>FETCH</command>
       statement, for consistency with the backend's
       <command>FETCH</command> command (Pavel Stehule)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <command>MOVE</command> to PL/PgSQL (Magnus, Pavel Stehule,
       Neil)
      </para>
     </listitem>

     <listitem>
      <para>
       Implement <command>RETURN QUERY</command> (Pavel Stehule, Neil)
      </para>

      <para>
       This adds convenient syntax for PL/PgSQL set-returning functions
       that want to return the result of a query.  <command>RETURN QUERY</command>
       is easier and more efficient than a loop
       around <command>RETURN NEXT</command>.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow function parameter names to be qualified with the
       function's name (Tom)
      </para>

      <para>
       For example, <literal>myfunc.myvar</literal>. This is particularly
       useful for specifying variables in a query where the variable
       name might match a column name.
      </para>
     </listitem>

     <listitem>
      <para>
       Make qualification of variables with block labels work properly (Tom)
      </para>

      <para>
       Formerly, outer-level block labels could unexpectedly interfere with
       recognition of inner-level record or row references.
      </para>
     </listitem>

     <listitem>
      <para>
       Tighten requirements for <literal>FOR</literal> loop
       <literal>STEP</literal> values (Tom)
      </para>

      <para>
       Prevent non-positive <literal>STEP</literal> values, and handle
       loop overflows.
      </para>
     </listitem>

     <listitem>
      <para>
       Improve accuracy when reporting syntax error locations (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Other Server-Side Languages</title>
    <itemizedlist>

     <listitem>
      <para>
       Allow type-name arguments to PL/Perl
       <function>spi_prepare()</function> to be data type aliases in
       addition to names found in <literal>pg_type</literal> (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow type-name arguments to PL/Python
       <function>plpy.prepare()</function> to be data type aliases in
       addition to names found in <literal>pg_type</literal> (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow type-name arguments to PL/Tcl <function>spi_prepare</function> to
       be data type aliases in addition to names found in
       <literal>pg_type</literal> (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Enable PL/PythonU to compile on Python 2.5 (Marko Kreen)
      </para>
     </listitem>

     <listitem>
      <para>
       Support a true PL/Python boolean type in compatible Python versions
       (Python 2.3 and later) (Marko Kreen)
      </para>
     </listitem>

     <listitem>
      <para>
       Fix PL/Tcl problems with thread-enabled <filename>libtcl</filename> spawning
       multiple threads within the backend (Steve Marshall, Paul Bayer,
       Doug Knight)
      </para>

      <para>
       This caused all sorts of unpleasantness.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="app-psql"><application>psql</application></link></title>
    <itemizedlist>

     <listitem>
      <para>
       List disabled triggers separately in <literal>\d</literal> output
       (Brendan Jurd)
      </para>
     </listitem>

     <listitem>
      <para>
       In <literal>\d</literal> patterns, always match <literal>$</literal>
       literally (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Show aggregate return types in <literal>\da</literal> output
       (Greg Sabino Mullane)
      </para>
     </listitem>

     <listitem>
      <para>
       Add the function's volatility status to the output of
       <literal>\df+</literal> (Neil)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>\prompt</literal> capability (Chad Wagner)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <literal>\pset</literal>, <literal>\t</literal>, and
       <literal>\x</literal> to specify <literal>on</literal> or <literal>off</literal>,
       rather than just toggling (Chad Wagner)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <literal>\sleep</literal> capability (Jan)
      </para>
     </listitem>

     <listitem>
      <para>
       Enable <literal>\timing</literal> output for <literal>\copy</literal> (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve <literal>\timing</literal> resolution on Windows
       (Itagaki Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Flush <literal>\o</literal> output after each backslash command (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Correctly detect and report errors while reading a <literal>-f</literal>
       input file (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <literal>-u</literal> option (this option has long been deprecated)
       (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="app-pgdump"><application>pg_dump</application></link></title>
    <itemizedlist>

     <listitem>
      <para>
       Add <literal>--tablespaces-only</literal> and <literal>--roles-only</literal>
       options to <application>pg_dumpall</application> (Dave Page)
      </para>
     </listitem>

     <listitem>
      <para>
       Add an output file option to
       <application>pg_dumpall</application> (Dave Page)
      </para>

      <para>
       This is primarily useful on Windows, where output redirection of
       child <application>pg_dump</application> processes does not work.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <application>pg_dumpall</application> to accept an initial-connection
       database name rather than the default
       <literal>template1</literal> (Dave Page)
      </para>
     </listitem>

     <listitem>
      <para>
       In <literal>-n</literal> and <literal>-t</literal> switches, always match
       <literal>$</literal> literally (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve performance when a database has thousands of objects (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Remove <literal>-u</literal> option (this option has long been deprecated)
       (Tom)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Other Client Applications</title>
    <itemizedlist>

     <listitem>
      <para>
       In <application>initdb</application>, allow the location of the
       <filename>pg_xlog</filename> directory to be specified
       (Euler Taveira de Oliveira)
      </para>
     </listitem>

     <listitem>
      <para>
       Enable server core dump generation in <application>pg_regress</application>
       on supported operating systems (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Add a <literal>-t</literal> (timeout) parameter to <application>pg_ctl</application>
       (Bruce)
      </para>

      <para>
       This controls how long <application>pg_ctl</application> will wait when waiting
       for server startup or shutdown.  Formerly the timeout was hard-wired
       as 60 seconds.
      </para>
     </listitem>

     <listitem>
      <para>
       Add a <application>pg_ctl</application> option to control generation
       of server core dumps (Andrew)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow Control-C to cancel <application>clusterdb</application>,
       <application>reindexdb</application>, and <application>vacuumdb</application> (Itagaki
       Takahiro, Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Suppress command tag output for <application>createdb</application>,
       <application>createuser</application>, <application>dropdb</application>, and
       <application>dropuser</application> (Peter)
      </para>

      <para>
       The <literal>--quiet</literal> option is ignored and will be removed in 8.4.
       Progress messages when acting on all databases now go to stdout
       instead of stderr because they are not actually errors.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="libpq"><application>libpq</application></link></title>
    <itemizedlist>

     <listitem>
      <para>
       Interpret the <literal>dbName</literal> parameter of
       <function>PQsetdbLogin()</function> as a <literal>conninfo</literal> string if
       it contains an equals sign (Andrew)
      </para>

      <para>
       This allows use of <literal>conninfo</literal> strings in client
       programs that still use <literal>PQsetdbLogin()</literal>.
      </para>
     </listitem>

     <listitem>
      <para>
       Support a global <acronym>SSL</acronym> configuration file (Victor
       Wagner)
      </para>
     </listitem>

     <listitem>
      <para>
       Add environment variable <varname>PGSSLKEY</varname> to control
       <acronym>SSL</acronym> hardware keys (Victor Wagner)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>lo_truncate()</function> for large object
       truncation (Kris Jurka)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>PQconnectionNeedsPassword()</function> that returns
       true if the server required a password but none was supplied
       (Joe Conway, Tom)
      </para>

      <para>
       If this returns true after a failed connection attempt, a client
       application should prompt the user for a password.  In the past
       applications have had to check for a specific error message string to
       decide whether a password is needed; that approach is now
       deprecated.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>PQconnectionUsedPassword()</function> that returns
       true if the supplied password was actually used
       (Joe Conway, Tom)
      </para>

      <para>
       This is useful in some security contexts where it is important
       to know whether a user-supplied password is actually valid.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><link linkend="ecpg"><application>ecpg</application></link></title>
    <itemizedlist>

     <listitem>
      <para>
       Use V3 frontend/backend protocol (Michael)
      </para>

      <para>
       This adds support for server-side prepared statements.
      </para>
     </listitem>

     <listitem>
      <para>
       Use native threads, instead of pthreads, on Windows (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Improve thread-safety of ecpglib (Itagaki Takahiro)
      </para>
     </listitem>

     <listitem>
      <para>
       Make the ecpg libraries export only necessary API symbols (Michael)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title><application>Windows</application> Port</title>
    <itemizedlist>

     <listitem>
      <para>
       Allow the whole <productname>PostgreSQL</productname> distribution to be compiled
       with <productname>Microsoft Visual C++</productname> (Magnus and others)
      </para>

      <para>
       This allows Windows-based developers to use familiar development
       and debugging tools.
       Windows executables made with Visual C++ might also have better
       stability and performance than those made with other tool sets.
       The client-only Visual C++ build scripts have been removed.
      </para>
     </listitem>

     <listitem>
      <para>
       Drastically reduce postmaster's memory usage when it has many child
       processes (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow regression tests to be started by an administrative
       user (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Add native shared memory implementation (Magnus)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Server Programming Interface (<acronym>SPI</acronym>)</title>
    <itemizedlist>

     <listitem>
      <para>
       Add cursor-related functionality in SPI (Pavel Stehule)
      </para>

      <para>
       Allow access to the cursor-related planning options, and add
       <command>FETCH</command>/<command>MOVE</command> routines.
      </para>
     </listitem>

     <listitem>
      <para>
       Allow execution of cursor commands through
       <function>SPI_execute</function> (Tom)
      </para>

      <para>
       The macro <literal>SPI_ERROR_CURSOR</literal> still exists but will
       never be returned.
      </para>
     </listitem>

     <listitem>
      <para>
       SPI plan pointers are now declared as <literal>SPIPlanPtr</literal> instead of
       <literal>void *</literal> (Tom)
      </para>

      <para>
       This does not break application code, but switching is
       recommended to help catch simple programming mistakes.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Build Options</title>
    <itemizedlist>

     <listitem>
      <para>
       Add <application>configure</application> option <literal>--enable-profiling</literal>
       to enable code profiling (works only with <application>gcc</application>)
       (Korry Douglas and Nikhil Sontakke)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <application>configure</application> option <literal>--with-system-tzdata</literal>
       to use the operating system's time zone database (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Fix <acronym>PGXS</acronym> so extensions can be built against PostgreSQL
       installations whose <application>pg_config</application> program does not
       appear first in the <varname>PATH</varname> (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Support <command>gmake draft</command> when building the
       <acronym>SGML</acronym> documentation (Bruce)
      </para>

      <para>
       Unless <literal>draft</literal> is used, the documentation build will
       now be repeated if necessary to ensure the index is up-to-date.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Source Code</title>
    <itemizedlist>

     <listitem>
      <para>
       Rename macro <literal>DLLIMPORT</literal> to <literal>PGDLLIMPORT</literal> to
       avoid conflicting with third party includes (like Tcl) that
       define <literal>DLLIMPORT</literal> (Magnus)
      </para>
     </listitem>

     <listitem>
      <para>
       Create <quote>operator families</quote> to improve planning of
       queries involving cross-data-type comparisons (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Update GIN <function>extractQuery()</function> API to allow signalling
       that nothing can satisfy the query (Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
       Move <literal>NAMEDATALEN</literal> definition from
       <filename>postgres_ext.h</filename> to <filename>pg_config_manual.h</filename>
       (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Provide <function>strlcpy()</function> and
       <function>strlcat()</function> on all platforms, and replace
       error-prone uses of <function>strncpy()</function>,
       <function>strncat()</function>, etc (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Create hooks to let an external plugin monitor (or even replace) the
       planner and create plans for hypothetical situations (Gurjeet
       Singh, Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Create a function variable <literal>join_search_hook</literal> to let plugins
       override the join search order portion of the planner (Julius
       Stroffek)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <function>tas()</function> support for Renesas' M32R processor
       (Kazuhiro Inaoka)
      </para>
     </listitem>

     <listitem>
      <para>
       <function>quote_identifier()</function> and
       <application>pg_dump</application> no longer quote keywords that are
       unreserved according to the grammar (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Change the on-disk representation of the <type>NUMERIC</type>
       data type so that the <structfield>sign_dscale</structfield> word comes
       before the weight (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Use <acronym>SYSV</acronym> semaphores rather than POSIX on Darwin
       &gt;= 6.0, i.e., OS X 10.2 and up (Chris Marcellino)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <link linkend="acronyms">acronym</link> and <link
       linkend="creating-cluster-nfs">NFS</link> documentation
       sections (Bruce)
      </para>
     </listitem>

     <listitem>
      <para>
       "Postgres" is now documented as an accepted alias for
       "PostgreSQL" (Peter)
      </para>
     </listitem>

     <listitem>
      <para>
       Add documentation about preventing database server spoofing when
       the server is down (Bruce)
      </para>
     </listitem>

    </itemizedlist>

   </sect3>

   <sect3>
    <title>Contrib</title>
    <itemizedlist>

     <listitem>
      <para>
       Move <filename>contrib</filename> <filename>README</filename> content into the
       main <productname>PostgreSQL</productname> documentation (Albert Cervera i
       Areny)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/pageinspect</filename> module for low-level
       page inspection (Simon, Heikki)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/pg_standby</filename> module for controlling
       warm standby operation (Simon)
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/uuid-ossp</filename> module for generating
       <type>UUID</type> values using the OSSP UUID library (Peter)
      </para>

      <para>
       Use <application>configure</application>
       <literal>--with-ossp-uuid</literal> to activate. This takes
       advantage of the new <type>UUID</type> builtin type.
      </para>
     </listitem>

     <listitem>
      <para>
       Add <filename>contrib/dict_int</filename>,
       <filename>contrib/dict_xsyn</filename>, and
       <filename>contrib/test_parser</filename> modules to provide
       sample add-on text search dictionary templates and parsers
       (Sergey Karpov)
      </para>
     </listitem>

     <listitem>
      <para>
       Allow <application>contrib/pgbench</application> to set the fillfactor (Pavan
       Deolasee)
      </para>
     </listitem>

     <listitem>
      <para>
       Add timestamps to <application>contrib/pgbench</application> <literal>-l</literal>
       (Greg Smith)
      </para>
     </listitem>

     <listitem>
      <para>
       Add usage count statistics to
       <filename>contrib/pgbuffercache</filename> (Greg Smith)
      </para>
     </listitem>

     <listitem>
      <para>
       Add GIN support for <filename>contrib/hstore</filename> (Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
       Add GIN support for <filename>contrib/pg_trgm</filename> (Guillaume Smet, Teodor)
      </para>
     </listitem>

     <listitem>
      <para>
       Update OS/X startup scripts in
       <filename>contrib/start-scripts</filename> (Mark Cotner, David
       Fetter)
      </para>
     </listitem>

     <listitem>
      <para>
       Restrict <function>pgrowlocks()</function> and
       <function>dblink_get_pkey()</function> to users who have
       <literal>SELECT</literal> privilege on the target table (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       Restrict <filename>contrib/pgstattuple</filename> functions to
       superusers (Tom)
      </para>
     </listitem>

     <listitem>
      <para>
       <filename>contrib/xml2</filename> is deprecated and planned for
       removal in 8.4 (Peter)
      </para>

      <para>
       The new XML support in core PostgreSQL supersedes this module.
      </para>
     </listitem>

    </itemizedlist>

   </sect3>
  </sect2>
 </sect1>
