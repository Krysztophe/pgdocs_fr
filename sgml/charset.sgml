<!-- $Header: /var/lib/cvs/pgsql-fr/sgml/charset.sgml,v 1.8 2005/05/10 06:01:31 guillaume Exp $ -->

<chapter id="charset">
 <title>Localisation</>

 <para>
  Ce chapitre décrit les fonctionalités disponibles pour la localisation
  du point de vue de l'administrateur.
  <productname>PostgreSQL</productname> supporte la localisation en utilisant
  deux approches:

   <itemizedlist>
    <listitem>
     <para>
      Utiliser les fonctionalités de locale du système d'exploitation pour donner
      un ordonnancement de tri, formatage de chiffre, des messages traduits et
      et autres aspects spécfiques à la locale.
     </para>
    </listitem>

    <listitem>
     <para>
      Donner un certain nombre de jeu de caractères différents définis dans le
      serveur <productname>PostgreSQL</productname>, y compris
      des jeux de caractères multi-bit, pour permettre de stoquer du texte dans
      toutes sortes de langues, et offrir la traduction de jeu de caractère entre
      serveur et client.
     </para>
    </listitem>
   </itemizedlist>
  </para>


 <sect1 id="locale">
  <title>Support de Locale</title>
  
  <indexterm zone="locale"><primary>locale</></>

  <para>
   Le support de <firstterm>Locale</firstterm> fait référence à une application respectant les
   préférences culturelles en ce qui concerne les alphabets, le tri, le formatage
   des nombres, etc.  <productname>PostgreSQL</> utilise les possibilités du standard
   ISO C et de la locale <acronym>POSIX</acronym> fourni par le système d'exploitation
   serveur. Pour plus d'information, consultez la documentation de votre serveur.
  </para>

  <sect2>
   <title>Aperçu</>

   <para>
    Le support de locale est automatiquement initialisé lorsque un cluster de base de données
    est créé avec <command>initdb</command>. <command>initdb</command> va initialiser le cluster
    avec la valeur de locale de son environnement d'execution par défaut. Donc, si votre système est déjà
    parametré pour utiliser la locale que vous voulez dans votre cluster, vous n'avez rien
    d'autre à faire. Si vous voulez utiliser une locale différente (ou si vous n'êtes pas sur
    de la locale qu'utilise votre système), vous pouvez dire à <command>initdb</command> exactement
    quel locale utiliser en spécifiant l'option <option>--locale</option>. Par exemple&nbsp;:
<screen>
initdb --locale=sv_SE
</screen>
   </para>

   <para>
    Cette exemple met la locale à Suedois (<literal>sv</>) tel que parlé en
    Suede (<literal>SE</>).  D'autres possibilités pourraient être
    <literal>en_US</> (l'anglais Américain) et <literal>fr_CA</> (français
    canadien).  Si plus d'un jeu de caractères peuvent être utile pour une locale
    alors la spécification ressemble à ceçi:
    <literal>cs_CZ.ISO8859-2</>. Quels locales sont disponibles sous quels noms depend
    de l'éditeur de votre système d'exploitation et de ce qui est installé. (Sur la
    plupart des sytèmes, la commande <literal>locale -a</> fournira une liste de
    locales disponibles.)
   </para>

   <para>
    De façon occasionnelle, il est utile de mélanger les règles de plusieurs locales, i.e.,
    utiliser les règles de tri anglais mais des messages en espagnol. Pour permettre ceçi,
    des sous-catégories de locales existent qui ne contrôlent qu'un certain aspect des règles
    de localisation&nbsp;:

    <informaltable>
     <tgroup cols="2">
      <tbody>
       <row>
        <entry><envar>LC_COLLATE</></>
        <entry>Ordre de tri de chaînes de caractères</>
       </row>
       <row>
        <entry><envar>LC_CTYPE</></>
        <entry>Classification de caractères(Qu'est ce qu'une lettre ? La majuscule équivalente ?)</>
       </row>
       <row>
        <entry><envar>LC_MESSAGES</></>
        <entry>Langage des messages</>
       </row>
       <row>
        <entry><envar>LC_MONETARY</></>
        <entry>Formatage des montants de monnaie</>
       </row>
       <row>
        <entry><envar>LC_NUMERIC</></>
        <entry>Formatage des nombres</>
       </row>
       <row>
        <entry><envar>LC_TIME</></>
        <entry>Formatage des dates et heures</>
       </row>
      </tbody>
     </tgroup>
    </informaltable>

    Les noms des catégories se traduisent en noms d'options
    <command>initdb</command> pour surcharger le choix de locale
    pour une catégorie donnée. Par exemple, pour mettre la locale en
    Français Canadien, mais utiliser les règles américaines pour le
    formatage de monnaie, utilisez
    <literal>initdb --locale=fr_CA --lc-monetary=en_US</literal>.
   </para>

   <para>
    Si vous voulez que le système se comporte comme s'il n'avait pas de
    support de locale, utilisez les locales spéciales <literal>C</> ou
    <literal>POSIX</>.
   </para>

   <para>
    La nature de ces catégories de locales est que leur valeur doit être
    fixées pour la durée de vie d'un cluster de base de données.
    C'est a dire qu'une fois <command>initdb</command> lancée, on ne peut
    plus les changer.
    <literal>LC_COLLATE</literal> et <literal>LC_CTYPE</literal> sont ces
    catégories. Ils affectent l'ordre de tri des index, donc ils doivent
    rester fixes, ou les index sur les colonnes de texte devienderont
    corrompus.
    <productname>PostgreSQL</productname> applique ceçi en enrengistrant
    les valeurs de <envar>LC_COLLATE</> et <envar>LC_CTYPE</> qui sont vus
    par <command>initdb</>. Le serveur adopte automatiquement ces deux
    valeurs lorsqu'il est lancé.
   </para>

   <para>
    Les autres catégories de locale peuvent être changés comme désiré lorsque
    le serveur est lancé en fixant les variables d'environnement qui ont le
    même nom que les catégories de locale (voir <xref
    linkend="runtime-config-client-format"> pour plus de détails). Les valeurs par défaut
    choisies par <command>initdb</command> sont en fait seulement écrits dans
    le fichier de configuration <filename>postgresql.conf</filename> pour servir
    de valeur par défaut quand le serveur est lancé. Si vous effacez ces
    déclarations de <filename>postgresql.conf</filename>, alors le serveur
    héritera des paramètres de l'environnement d'exécution.
   </para>

   <para>
    Notez que le comportement de locale du serveur est déterminé par les
    variables d'environnement vues par le serveur, pas l'environnement d'un
    client quelconque. Alors, faites attention de configurer les bons paramètres
    de locale avant de lancer le serveur. Une conséquence de ceçi est que, si le
    client et le serveur ont des locales différents, les messages apparaiterons
    dans des langues différents suivant d'ou ils viennent.
   </para>

   <note>
    <para>
     Lorsqu'on parle d'hériter la locale de l'environnement d'execution, ceçi veut
     dire la chose suivante sur la plupart des systèmes d'exploitation:
     Pour une catégorie de locale donnée, disons l'ordonnancement, les variables
     d'environnement suivantes sont consultées dans cet ordre jusqu'à ce qu'on en
     trouve une de fixée: <envar>LC_ALL</envar>, <envar>LC_COLLATE</envar> (la
     variable correspondante à la catégorie respective),
     <envar>LANG</envar>. Si aucune de ces variables n'est fixée, alors on utilise
     la locale par défaut de <literal>C</literal>.
    </para>

    <para>
     Certaines bibliothèques de localisation regardent aussi la variable
     d'environnement <envar>LANGUAGE</envar> qui surcharge tout autre
     paramètre pour le besoin de fixer la langue des messages. Si vous
     doutez, lisez la documentation de votre système d'exploitation,
     en particulier la documentation à propos de
     <application>gettext</>, pour plus d'information.
    </para>
   </note>

   <para>
    Pour permettre la traduction des messages dans la langue préférée de
    l'utilisateur, <acronym>NLS</acronym> doit être activé pendant la
    compilation. Ce choix est indépendant d'autre support de locale.
   </para>
  </sect2>

  <sect2>
   <title>Comportement</>

   <para>
    Le support de locale influence les fonctionalités suivantes&nbsp;:

    <itemizedlist>
     <listitem>
      <para>
       Ordre de tri dans les requètes utilisant <literal>ORDER BY</>
       <indexterm><primary>ORDER BY</><secondary>et les locales</></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
       La possibilité d'utiliser des index avec les clauses <literal>LIKE</>
       <indexterm><primary>LIKE</><secondary>et les locales</></indexterm>
      </para>
     </listitem>

     <listitem>
      <para>
       La famille de fonctions <function>to_char</>
      </para>
     </listitem>
    </itemizedlist>
   </para>

   <para>
    L'inconvénient d'utiliser le support de locale autres que <literal>C</> ou
    <literal>POSIX</> dans <productname>PostgreSQL</> est son impact sur les
    performances. Il ralentit la gestion des caractères et empêche l'utilisation
    des index ordinaires par <literal>LIKE</>. Pour cette raison, utilisez les
    locales seulement si vous en avez besoin.
   </para>
  </sect2>

  <sect2>
   <title>Problèmes</>

   <para>
    Si le support de locale ne fonctionne pas malgré l'explication ci-dessus,
    vérifiez que le support de locale de votre système d'exploitation est
    correctement configuré. Pour vérifier quelles locales sont installées sur
    votre système, vous pouvez utiliser la commande <literal>locale -a</literal>
    si votre système d'exploitation le fournit.
   </para>

   <para>
    Vérifiez que <productname>PostgreSQL</productname> utilise vraiment la locale
    que vous supposez. Les paramètres <envar>LC_COLLATE</envar> et <envar>LC_CTYPE</envar>
    sont déterminés lors de <command>initdb</command> et ne peuvent pas être modifiés
    sans répèter <command>initdb</command>.  D'autres paramètres de locale, y compris
    <envar>LC_MESSAGES</envar> et <envar>LC_MONETARY</envar> sont déterminés initiallement
    par l'environnement dans lequel le serveur est lancé mais peut être modifié en cours.
    Vous pouvez vérifier les paramètrages de la locale active en utilisant la commande
    <command>SHOW</command>.
   </para>

   <para>
    Le répertoire <filename>src/test/locale</filename> dans la distribution du source
    contient une série de tests pour le support de locale dans <productname>PostgreSQL</productname>.
   </para>

   <para>
    Les applications clientes qui gèrent les erreurs côté serveur en analysant le texte
    du message d'erreur auront, bien sur, des problèmes lorsque les messages
    sont dans une langue différente. Les auteurs de telles applications sont
    invités à utiliser le schéma de code d'erreur à la place.
   </para>

   <para>
    Maintenir des catalogues de traductions de messages requiert les
    efforts permanents de beaucoup de volontaires qui souhaitent voir
    <productname>PostgreSQL</productname> bien interpreter leur langue préférée.
    Si des messages dans votre langue ne sont pas disponibles ou pas complètement
    traduits, votre aide serait très appréciée. Si vous voulez aider,
    consultez le <xref linkend="nls"> ou écrivez à la liste de diffusion des
    developeurs.
   </para>
  </sect2>
 </sect1>


 <sect1 id="multibyte">
  <title>Support des jeux de caractères</title>

  <indexterm zone="multibyte"><primary>jeu de caractère</></>

  <para>
   Le support des jeux de caractères dans <productname>PostgreSQL</productname>
   vous permet de rentrer du texte dans plusieurs jeux de caractères, dont
   des jeux de caractères à un octet tels que la série ISO 8859 et
   des jeux de caractères multi-octets tel que <acronym>EUC</acronym> (Extended Unix
   Code), Unicode et le code interne de Mule.  Tous les jeux de caractères peuvent être
   utilisés de façon transparente au travers du serveur. (Si vous utilisez des fonctions
   d'entension d'autres sources, cela dépend de la qualité du code.)
   Le jeu de caractères par défaut est sélectionné pendant l'initialisation de
   votre cluster de base de données <productname>PostgreSQL</productname>
   avec <command>initdb</command>.  Le choix peut être outrepassé lorsqu'on crée une base
   de données en utilisant <command>createdb</command> ou en utilisant la
   commande SQL <command>CREATE DATABASE</command>. Vous pouvez donc avoir de multiples bases
   chacune avec un jeux de caractères différents.
  </para>

   <sect2 id="multibyte-charset-supported">
    <title>Jeux de caractères supportés</title>

    <para>
     <xref linkend="charset-table"> montre les jeux de caractères disponibles
     à l'utilisation sur le serveur.
    </para>

     <table id="charset-table">
      <title>Jeux de Caractères Serveur</title>
      <tgroup cols="2">
       <thead>
	<row>
	 <entry>Nom</entry>
	 <entry>Description</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry><literal>SQL_ASCII</literal></entry>
	 <entry><acronym>ASCII</acronym></entry>
	</row>
	<row>
	 <entry><literal>EUC_JP</literal></entry>
	 <entry>Japonais <acronym>EUC</></entry>
	</row>
	<row>
	 <entry><literal>EUC_CN</literal></entry>
	 <entry>Chinois <acronym>EUC</></entry>
	</row>
	<row>
	 <entry><literal>EUC_KR</literal></entry>
	 <entry>Coréen <acronym>EUC</></entry>
	</row>
	<row>
	 <entry><literal>JOHAB</literal></entry>
	 <entry>Coréen <acronym>EUC</> (base Hangle)</entry>
	</row>
	<row>
	 <entry><literal>EUC_TW</literal></entry>
	 <entry>Taiwanais <acronym>EUC</acronym></entry>
	</row>
	<row>
	 <entry><literal>UNICODE</literal></entry>
	 <entry>Unicode (<acronym>UTF</acronym>-8)</entry>
	</row>
	<row>
	 <entry><literal>MULE_INTERNAL</literal></entry>
	 <entry>Code interne de Mule</entry>
	</row>
	<row>
	 <entry><literal>LATIN1</literal></entry>
	 <entry>ISO 8859-1/<acronym>ECMA</> 94 (Alaphabet latin no.1)</entry>
	</row>
	<row>
	 <entry><literal>LATIN2</literal></entry>
	 <entry>ISO 8859-2/<acronym>ECMA</> 94 (Alaphabet latin no.2)</entry>
	</row>
	<row>
	 <entry><literal>LATIN3</literal></entry>
	 <entry>ISO 8859-3/<acronym>ECMA</> 94 (Alaphabet latin no.3)</entry>
	</row>
	<row>
	 <entry><literal>LATIN4</literal></entry>
	 <entry>ISO 8859-4/<acronym>ECMA</> 94 (Alaphabet latin no.4)</entry>
	</row>
	<row>
	 <entry><literal>LATIN5</literal></entry>
	 <entry>ISO 8859-9/<acronym>ECMA</> 128 (Alaphabet latin no.5)</entry>
	</row>
	<row>
	 <entry><literal>LATIN6</literal></entry>
	 <entry>ISO 8859-10/<acronym>ECMA</> 144 (Alaphabet latin no.6)</entry>
	</row>
	<row>
	 <entry><literal>LATIN7</literal></entry>
	 <entry>ISO 8859-13 (Alaphabet latin no.7)</entry>
	</row>
	<row>
	 <entry><literal>LATIN8</literal></entry>
	 <entry>ISO 8859-14 (Alaphabet latin no.8)</entry>
	</row>
	<row>
	 <entry><literal>LATIN9</literal></entry>
	 <entry>ISO 8859-15 (Alaphabet latin no.9)</entry>
	</row>
	<row>
	 <entry><literal>LATIN10</literal></entry>
	 <entry>ISO 8859-16/<acronym>ASRO</> SR 14111 (Alaphabet latin no.10)</entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_5</literal></entry>
	 <entry>ISO 8859-5/<acronym>ECMA</> 113 (Latin/Cyrillique)</entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_6</literal></entry>
	 <entry>ISO 8859-6/<acronym>ECMA</> 114 (Latin/Arabe)</entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_7</literal></entry>
	 <entry>ISO 8859-7/<acronym>ECMA</> 118 (Latin/Greque)</entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_8</literal></entry>
	 <entry>ISO 8859-8/<acronym>ECMA</> 121 (Latin/Hebrew)</entry>
	</row>
	<row>
	 <entry><literal>KOI8</literal></entry>
	 <entry><acronym>KOI</acronym>8-R(U)</entry>
	</row>
	<row>
	 <entry><literal>ALT</literal></entry>
	 <entry>Windows CP866</entry>
	</row>
	<row>
	  <entry><literal>WIN874</literal></entry>
	  <entry>Windows CP874 (Thai)</entry>
	</row>
	<row>
	  <entry><literal>WIN1250</literal></entry>
	  <entry>Windows CP1250</entry>
	</row>
	<row>
	  <entry><literal>WIN</literal></entry>
	  <entry>Windows CP1251</entry>
	</row>
	<row>
	 <entry><literal>WIN1256</literal></entry>
	 <entry>Windows CP1256 (Arabic)</entry>
	</row>
	<row>
	 <entry><literal>TCVN</literal></entry>
	 <entry><acronym>TCVN</>-5712/Windows CP1258 (Vietnamien)</entry>
	</row>
       </tbody>
      </tgroup>
     </table>

    <important>
     <para>
      Avant <productname>PostgreSQL</> 7.2, <literal>LATIN5</>
      voulait dire par erreur ISO 8859-5.  A partir de 7.2, <literal>LATIN5</>
      voulait dire ISO 8859-9. Si vous avez une base <literal>LATIN5</>
      créée sur une version 7.1 ou antérieure et vous voulez migrer vers 7.2 ou une version plus récente,
      vous devriez faire attention à ce changement.
     </para>
    </important>

     <para>
      Tout les <acronym>API</>s ne supportent pas les jeux de caractères de la liste. Par exemple,
      le pilot JDBC de <productname>PostgreSQL</>
      ne supporte pas <literal>MULE_INTERNAL</>, <literal>LATIN6</>,
      <literal>LATIN8</> et <literal>LATIN10</>.
     </para>
    </sect2>
    
   <sect2>
    <title>Choisir le Jeu de Caractères</title>

    <para>
     <command>initdb</> definit le jeu de caractères par défaut
     pour un cluster <productname>PostgreSQL</productname>. Par exemple,

<screen>
initdb -E EUC_JP
</screen>

     paramètre le jeu de caractères (encodage) à
     <literal>EUC_JP</literal> (Extended Unix Code for Japanese). Vous
     pouvez utiliser l'option <option>--encoding</option> au lieu de
     <option>-E</option> si vous préferez saisir les noms d'options longs.
     Si aucune option <option>-E</> ou <option>--encoding</option> n'est
     donnée, <literal>SQL_ASCII</> est utilisé.
    </para>

    <para>
     Vous pouvez créer une base de données avec un jeu de caractère différent:

<screen>
createdb -E EUC_KR korean
</screen>

     Ceci va créer une base de données appelée <literal>korean</literal> qui
     utilisera le jeu de caractère <literal>EUC_KR</literal>. Un autre moyen de
     réaliser ceci est d'utiliser cette commande SQL&nbsp;:

<programlisting>
CREATE DATABASE korean WITH ENCODING 'EUC_KR';
</programlisting>

     L'encodage pour une base de données est conservé dans le catalogue système
     <literal>pg_database</literal>.  Vous pouvez voir ceçi en utilisant l'option
     <option>-l</option> ou la commande <command>\l</command> de <command>psql</command>.

<screen>
$ <userinput>psql -l</userinput>
            List of databases
   Database    |  Owner  |   Encoding    
---------------+---------+---------------
 euc_cn        | t-ishii | EUC_CN
 euc_jp        | t-ishii | EUC_JP
 euc_kr        | t-ishii | EUC_KR
 euc_tw        | t-ishii | EUC_TW
 mule_internal | t-ishii | MULE_INTERNAL
 regression    | t-ishii | SQL_ASCII
 template1     | t-ishii | EUC_JP
 test          | t-ishii | EUC_JP
 unicode       | t-ishii | UNICODE
(9 rows)
</screen>
    </para>

    <important>
    <para>
    Bien que vous pouvez spécifier tout codage que vous souhaitez pour une base
    de données, il est déconseillé de choisir un codage qui n'est pas attendu
    par la locale sélectionnée. Les paramètres <literal>LC_COLLATE</literal> et
    <literal>LC_CTYPE</literal> impliquent in codage particulier, et les
    opérations dépendantes de la locale (comme le tri) pourraient mal
    interprétées les données qui sont dans un codage incompatible.
    </para>

    <para>
    Comme ces paramètres de locale sont gelés par <command>initdb</>, la
    flexibilité apparente pour utiliser différents codages dans les
    différentes bases de données d'un groupe est plus théorique que réel.
    Il est probable que ces mécanismes seront revus dans les prochaines
    versions de <productname>PostgreSQL</productname>.
    </para>

    <para>
    Une façon d'utiliser les codages multiples en toute sûreté est de configurer
    la locale à <literal>C</> ou <literal>POSIX</> lors d'<command>initdb</>,
    désactivant toute connaissance réelle de la locale.
    </para>
    </important>
   </sect2>

   <sect2>
    <title>Conversion de Jeu de Caractères Automatique entre Serveur et Client</title>

    <para>
     <productname>PostgreSQL</productname> supporte les conversions
     automatiques de jeu de caractères entre client et serveur pour
     certains jeux de caractères. Les informations de conversion sont
     conservés dans le catalogue système <literal>pg_conversion</>.
     Vous pouvez créer une nouvelle conversion en utilisant la commande
     SQL <command>CREATE CONVERSION</command>. <productname>PostgreSQL</productname>
     est livré avec certaines conversions prédéfinies. Ils sont listés dans <xref
     linkend="multibyte-translation-table">.
    </para>

     <table id="multibyte-translation-table">
      <title>Conversion de Jeux de Caractères Client/Serveur</title>
      <tgroup cols="2">
       <thead>
	<row>
	 <entry>Jeu de Caractères Serveur</entry>
	 <entry>Jeux de Caractères Clients Disponibles</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry><literal>SQL_ASCII</literal></entry>
	 <entry><literal>SQL_ASCII</literal>, <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>EUC_JP</literal></entry>
	 <entry><literal>EUC_JP</literal>, <literal>SJIS</literal>,
	 <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>EUC_CN</literal></entry>
	 <entry><literal>EUC_CN</literal>, <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>EUC_KR</literal></entry>
	 <entry><literal>EUC_KR</literal>, <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>JOHAB</literal></entry>
	 <entry><literal>JOHAB</literal>, <literal>UNICODE</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>EUC_TW</literal></entry>
	 <entry><literal>EUC_TW</literal>, <literal>BIG5</literal>,
	 <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN1</literal></entry>
	 <entry><literal>LATIN1</literal>, <literal>UNICODE</literal>
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN2</literal></entry>
	 <entry><literal>LATIN2</literal>, <literal>WIN1250</literal>,
	 <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN3</literal></entry>
	 <entry><literal>LATIN3</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN4</literal></entry>
	 <entry><literal>LATIN4</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN5</literal></entry>
	 <entry><literal>LATIN5</literal>, <literal>UNICODE</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN6</literal></entry>
	 <entry><literal>LATIN6</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN7</literal></entry>
	 <entry><literal>LATIN7</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN8</literal></entry>
	 <entry><literal>LATIN8</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN9</literal></entry>
	 <entry><literal>LATIN9</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>  
	 <entry><literal>LATIN10</literal></entry>
	 <entry><literal>LATIN10</literal>, <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_5</literal></entry>
	 <entry><literal>ISO_8859_5</literal>,
	 <literal>UNICODE</literal>,
	 <literal>MULE_INTERNAL</literal>,
	 <literal>WIN</literal>,
	 <literal>ALT</literal>,
	 <literal>KOI8</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_6</literal></entry>
	 <entry><literal>ISO_8859_6</literal>,
	 <literal>UNICODE</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_7</literal></entry>
	 <entry><literal>ISO_8859_7</literal>,
	 <literal>UNICODE</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>ISO_8859_8</literal></entry>
	 <entry><literal>ISO_8859_8</literal>,
	 <literal>UNICODE</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>UNICODE</literal></entry>
	 <entry>
	 <literal>EUC_JP</literal>, <literal>SJIS</literal>, 
	 <literal>EUC_KR</literal>, <literal>UHC</literal>, <literal>JOHAB</literal>,
	 <literal>EUC_CN</literal>, <literal>GBK</literal>,
	 <literal>EUC_TW</literal>, <literal>BIG5</literal>, 
	 <literal>LATIN1</literal> to <literal>LATIN10</literal>, 
	 <literal>ISO_8859_5</literal>, 
	 <literal>ISO_8859_6</literal>,
 	 <literal>ISO_8859_7</literal>, 
	 <literal>ISO_8859_8</literal>, 
	 <literal>WIN</literal>, <literal>ALT</literal>, 
	 <literal>KOI8</literal>, 
	 <literal>WIN1256</literal>,
	 <literal>TCVN</literal>,
	 <literal>WIN874</literal>,
	 <literal>GB18030</literal>,
	 <literal>WIN1250</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>MULE_INTERNAL</literal></entry>
	 <entry><literal>EUC_JP</literal>, <literal>SJIS</literal>, <literal>EUC_KR</literal>, <literal>EUC_CN</literal>, 
	  <literal>EUC_TW</literal>, <literal>BIG5</literal>, <literal>LATIN1</literal> to <literal>LATIN5</literal>, 
	  <literal>WIN</literal>, <literal>ALT</literal>,
	 <literal>WIN1250</literal>,
	  <literal>BIG5</literal>, <literal>ISO_8859_5</literal>, <literal>KOI8</literal></entry>
	</row>
	<row>
	 <entry><literal>KOI8</literal></entry>
	 <entry><literal>ISO_8859_5</literal>, <literal>WIN</literal>, 
	 <literal>ALT</literal>, <literal>KOI8</literal>,
	 <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>ALT</literal></entry>
	 <entry><literal>ISO_8859_5</literal>, <literal>WIN</literal>, 
	 <literal>ALT</literal>, <literal>KOI8</literal>,
	 <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>WIN874</literal></entry>
	 <entry><literal>WIN874</literal>,
	 <literal>UNICODE</literal>
	</entry>
	</row>
	<row>
	 <entry><literal>WIN1250</literal></entry>
	 <entry><literal>LATIN2</literal>, <literal>WIN1250</literal>,
	 <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	</entry>
	</row>
	<row>
	 <entry><literal>WIN</literal></entry>
	 <entry><literal>ISO_8859_5</literal>, <literal>WIN</literal>, 
	 <literal>ALT</literal>, <literal>KOI8</literal>,
	 <literal>UNICODE</literal>, <literal>MULE_INTERNAL</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>WIN1256</literal></entry>
	 <entry><literal>WIN1256</literal>,
	 <literal>UNICODE</literal>
	 </entry>
	</row>
	<row>
	 <entry><literal>TCVN</literal></entry>
	 <entry><literal>TCVN</literal>,
	 <literal>UNICODE</literal>
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </table>

    <para>
     Pour activer la conversion automatique de jeux de caractères, vous devez
     dire à <productname>PostgreSQL</productname> quel jeu de caractères (encodage)
     vous voulez utiliser côté client. Il y'a plusieurs façons de faire cela:

     <itemizedlist>
      <listitem>
       <para>
	En utilisant la commande <command>\encoding</command> dans
	<application>psql</application>.
	<command>\encoding</command> vous permet de changer de jeu de caractères
	client à la volée. Par exemple, pour changer l'encodage en
        <literal>SJIS</literal>, tapez:

<programlisting>
\encoding SJIS
</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
	En utilisant les fonctions <application>libpq</application>.
	<command>\encoding</command> appelle en fait
	<function>PQsetClientEncoding()</function> pour faire son travail.

<synopsis>
int PQsetClientEncoding(PGconn *<replaceable>conn</replaceable>, const char *<replaceable>encoding</replaceable>);
</synopsis>

	ou <replaceable>conn</replaceable> est une connexion au serveur,
	et <replaceable>encoding</replaceable> est l'encodage que vous
	voulez utiliser. Si la fonction fixe l'encodage, elle renvoie 0,
	sinon -1. L'encodage actuel pour cette connexion peut être déterminé
        en utilisant:

<synopsis>
int PQclientEncoding(const PGconn *<replaceable>conn</replaceable>);
</synopsis>

	Notez que ceci renvoie l'ID d'encodage, pas une chaîne symbolique tel que
	<literal>EUC_JP</literal>. Pour convertir un ID d'encodage en NOM, vous
	pouvez utiliser:

<synopsis>
char *pg_encoding_to_char(int <replaceable>encoding_id</replaceable>);
</synopsis>
       </para>
      </listitem>

      <listitem>
       <para>
	En utilisant <command>SET client_encoding TO</command>.

	Fixer l'encodage client peut être fait avec cette commande SQL:

<programlisting>
SET CLIENT_ENCODING TO '<replaceable>valeur</>';
</programlisting>

	Vous pouvez aussi utiliser la syntaxe SQL plus standard <literal>SET NAMES</literal> pour ceçi:

<programlisting>
SET NAMES '<replaceable>valeur</>';
</programlisting>

	Pour demander l'actuel encodage client:

<programlisting>
SHOW client_encoding;
</programlisting>

	Pour revenir à l'encodage par défaut:

<programlisting>
RESET client_encoding;
</programlisting>
       </para>
      </listitem>

      <listitem>
       <para>
	En utilisant <envar>PGCLIENTENCODING</envar>.

	Si la variable d'environnement <envar>PGCLIENTENCODING</envar> est définie
	dans l'environnement client, cet encodage client est automatiquement sélectionné
	lorsqu'une connexion au serveur est établie. (Ceçi peut être surchargé avec
        n'importe quelle autre des méthodes ci-dessus.)
       </para>
      </listitem>

      <listitem>
      <para>
      En utilisant la variable de configuration <xref
      linkend="guc-client-encoding">.
      Si la variable <varname>client_encoding</varname> est définie,
      cet encodage client est automatiquement sélectionné lorsqu'une connexion au serveur est
      établie. (Ceçi peut être surchargé avec n'importe quelle autre des méthodes ci-dessus.)
       </para>
      </listitem>

     </itemizedlist>
    </para>

    <para>
     Si la conversion d'un caractère particulier n'est pas possible &mdash;
     supposons que vous avez choisi <literal>EUC_JP</literal> pour le serveur et
     <literal>LATIN1</literal> pour le client, alors certains caractères
     japonais ne pourront pas être convertis en <literal>LATIN1</literal> &mdash; ils
     seront transformés en leur valeur hexadecimale entre parentheses,
     i.e., <literal>(826C)</literal>.
    </para>
   </sect2>

   <sect2>
    <title>Plus de Lecture</title>

    <para>
     Ceux-ci sont de bonnes sources pour commençer à maitriser les différents jeux de
     caractères.

     <variablelist>
      <varlistentry>
       <term><ulink url="ftp://ftp.ora.com/pub/examples/nutshell/ujip/doc/cjk.inf"></ulink></term>

       <listitem>
        <para>
         Des explications détaillées de <literal>EUC_JP</literal>,
         <literal>EUC_CN</literal>, <literal>EUC_KR</literal>,
         <literal>EUC_TW</literal> apparaissent dans la section 3.2.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term><ulink url="http://www.unicode.org/"></ulink></term>

       <listitem>
        <para>
         Le site web du Unicode Consortium
        </para>
       </listitem>
      </varlistentry>

      <varlistentry>
       <term>RFC 2044</term>

       <listitem>
        <para>
	 <acronym>UTF</acronym>-8 est défini ici.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  </sect1>

</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode:sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"./reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:("/usr/lib/sgml/catalog")
sgml-local-ecat-files:nil
End:
-->
