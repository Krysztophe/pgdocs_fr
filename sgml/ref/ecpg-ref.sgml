<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/ecpg-ref.sgml,v 1.5 2005/01/12 08:11:24 guillaume Exp $
PostgreSQL documentation
-->

<refentry id="APP-ECPG">
 <refmeta>
  <refentrytitle><application>ecpg</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname><application>ecpg</application></refname>
  <refpurpose>préprocesseur SQL C embarqué</refpurpose>
 </refnamediv>

 <indexterm zone="app-ecpg">
  <primary>ecpg</primary>
 </indexterm>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>ecpg</command>
   <arg choice="opt" rep="repeat"><replaceable>option</replaceable></arg>
   <arg choice="plain" rep="repeat"><replaceable>fichier</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>


 <refsect1 id="APP-ECPG-description">
  <title>Description</title>

  <para>
   <command>ecpg</command> est le préprocesseurs embarqué SQL pour les
   programmes C. Il convertit des programmes C avec des instructions SQL
   embarquées en du code C normal en remplaçant les appels au SQL avec les
   appels spéciaux de fonctions. Les fichiers en sortie peuvent être traités
   avec tout ensemble d'outils de compilation C.
  </para>

  <para>
   <command>ecpg</command> convertira chaque fichier donné en entrée sur la 
   ligne de commande dans le fichier C correspondant. Les fichiers en entrées
   auront de préférence l'extension <filename>.pgc</filename>, auquel cas
   l'extension sera remplacée par <filename>.c</filename> pour déterminer le nom
   de fichier en sortie. Si l'extension du fichier en entrée n'est pas
   <filename>.pgc</filename>, alors le nom de fichier en sortie est calculé en
   ajoutant <literal>.c</literal> au nom complet du fichier. Le nom de fichier
   en sortie peut aussi être surchargé en utilisant l'option
   <option>-o</option>.
  </para>

  <para>
   Cette page de référence ne décrit pas le langage SQL embarqué. Voir <xref
linkend="ecpg"> pour plus d'informations sur ce thème.
  </para>
 </refsect1>


 <refsect1>
  <title>Options</title>

  <para>
   <command>ecpg</command> accepte les arguments suivants en ligne de
   commande&nbsp;:

   <variablelist>
    <varlistentry>
     <term><option>-c</option></term>
     <listitem>
      <para>
       Génère automatiquement certain code C à partir de code SQL. Actuellement,
       ceci fonctionne pour <literal>EXEC SQL TYPE</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-C <replaceable>mode</replaceable></option></term>
     <listitem>
      <para>
       Initialise un mode de compatibilité. <replaceable>mode</replaceable>
       pourrait être soit <literal>INFORMIX</literal> soit
       <literal>INFORMIX_SE</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-D <replaceable>symbol</replaceable></option></term>
     <listitem>
      <para>
       Définit un symbole C préprocesseus.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-i</option></term>
     <listitem>
      <para>
       Analyse aussi les fichiers d'en-tête du système.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-I <replaceable
	class="parameter">répertoire</replaceable></option></term>
     <listitem>
      <para>
       Spécifie un chemin d'inclusion supplémentaire, utilisé pour trouver les
       fichiers inclus via <literal>EXEC SQL INCLUDE</literal>. Par défaut, il
       s'agit de <filename>.</filename> (répertoire actuel),
       <filename>/usr/local/include</filename>, le répertoire d'en-tête de
       <productname>PostgreSQL</productname> et qui a été défini au moment de
       la compilation (par défaut&nbsp;:
       <filename>/usr/local/pgsql/include</filename>) puis
       <filename>/usr/include</filename> dans cet ordre.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-o <replaceable>filename</replaceable></option></term>
     <listitem>
      <para>
       Spécifie que <command>ecpg</command> devrait écrire toute sa sortie dans
       le <replaceable>fichier</replaceable> spécifié.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-r <replaceable>option</replaceable></option></term>
     <listitem>
      <para>
       Sélectionne un comportement en exécution. En même temps,
       <replaceable>option</replaceable> peiut seulement valoir
       <literal>no_indicator</literal>.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>-t</option></term>
     <listitem>
      <para>
       Active la validation automatique (autocommit) des transactions. Dans ce
       mode, chaque commande SQL est validée automatiquement sauf s'il est à
       l'intérieur d'un bloc de transaction explicite. Dans le mode par défaut,
       les commandes sont validées seulement lorsque <command>EXEC SQL
       COMMIT</command> est exécutée.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry>
     <term><option>-v</option></term>
     <listitem>
      <para>
       Affiche des informations supplémentaires incluant la version et 
       le chemin des en-têtes.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--help</option></term>
     <listitem>
      <para>
       Affiche un bref résumé de l'utilisation de la commande mais saisissez
       exit.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><option>--version</option></term>
     <listitem>
      <para>
       Affiche l'information sur la version puis quitte.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>


 <refsect1>
  <title>Notes</title>

  <para>
   Lors de la compilation de fichiers de code C prétraités, le compilateur a
   besoin d'être capable de trouver les fichiers d'en-tête <application>ECPG</>
   dans le répertoire des en-têtes de <productname>PostgreSQL</>. Du coup, vous
   pourriez devoir utiliser l'option <option>-I</> lors de l'appel du
   compilateur (c'est-à-dire <literal>-I/usr/local/pgsql/include</literal>).
  </para>

  <para>
   Les programmes utilisant le code C avec du SQL embarqué doivent être lié
   avec la bibliothèque <filename>libecpg</filename>, par exemple en utilisant
   les options de l'éditeur de liens <literal>-L/usr/local/pgsql/lib
   -lecpg</literal>.
  </para>

  <para>
   La valeur d'un de ces répertoires, appropriée parmi ces répertoires, ce
   qui est appropriée si l'installation est trouvable en utilisant <xref
   linkend="app-pgconfig">.
  </para>
 </refsect1>


 <refsect1>
  <title>Exemples</title>

  <para>
   si vous avez un fichier source en SQL C embarqué nommé
   <filename>prog1.pgc</filename>, vous pouvez créer un programme exécutable en
   utilisant la séquence suivant de commandes&nbsp;:
<programlisting>
ecpg prog1.pgc
cc -I/usr/local/pgsql/include -c prog1.c
cc -o prog1 prog1.o -L/usr/local/pgsql/lib -lecpg
</programlisting>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
