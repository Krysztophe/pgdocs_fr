<!--
$Header: /var/lib/cvs/pgsql-fr/sgml/ref/prepare.sgml,v 1.8 2004/12/21 23:09:14 guillaume Exp $
PostgreSQL documentation
-->

<refentry id="SQL-PREPARE">
 <refmeta>
  <refentrytitle id="sql-prepare-title">PREPARE</refentrytitle>
  <refmiscinfo>SQL - Instructions du langage</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>PREPARE</refname>
  <refpurpose>prépare une instruction pour exécution</refpurpose>
 </refnamediv>

 <indexterm zone="sql-prepare">
  <primary>PREPARE</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
PREPARE <replaceable class="PARAMETER">nom_plan</replaceable> [ (<replaceable
class="PARAMETER">type_donnees</replaceable> [, ...] ) ] AS <replaceable
class="PARAMETER">instruction</replaceable>
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

  <para>
   <command>PREPARE</command> crée une instruction préparée. Une instruction
   préparée est un objet côté serveur qui peut être utilisé pour optimiser les
   performances. Quand l'instruction <command>PREPARE</command> est exécutée,
   l'instruction spécifique est analysée, réécrite et plannifiée. Quand une
   commande <command>EXECUTE</command> est lancée par la suite, l'instruction
   préparée a seulement besoin d'être exécuté. Du coup, les étapes d'analyse, de
   réécriture et de plannification sont réalisées une seule fois, à la place de
   chaque fois que l'instruction est exécutée.
  </para>

  <para>
   Les instructions préparées peuvent prendre des paramètres&nbsp;: les valeurs
   qui sont substituées dans l'instruction lorsqu'il est exécuté. Pour inclure
   les paramètres dans une instruction préparée, fournissez une liste des types
   de données dans l'instruction <command>PREPARE</command>, et, dans
   l'instruction à préparer elle-même, référez-vous aux paramètres par position
   en utilisant <literal>$1</literal>, <literal>$2</literal>, etc. Lors de
   l'exécution de l'instruction, spécifiez les valeurs réelles pour ces
   paramètres dans l'instruction <command>EXECUTE</command>. Référez-vous à
   <xref linkend="sql-execute" endterm="sql-execute-title"> pour plus
   d'informations sur cela.
  </para>

  <para>
   Les instructions préparées sont seulement stockées et pour la durée
   de la session en cours. Lorsque la session se termine, l'instruction préparée
   est oubliée et, du coup, il doit être recréé avant d'être utilisé de nouveau.
   Ceci signifie aussi qu'une seule instruction préparée ne peut pas être
   utilisée par plusieurs clients des bases de données simultanées&nbsp;;
   néanmoins, chaque client peut créer sa propre instruction préparée à
   utiliser.
  </para>

  <para>
   Les instructions préparées ont l'avantage le plus large quand une seule
   session est en cours d'utilisation pour exécuter un grand nombre
   d'instructions similaires. La différence de la performance sera
   particulièrement significative si les instructions sont complexes pour
   plannifier ou réécrire, par exemple, si la requête implique une jointure de
   plusieurs tables ou requiert l'application de différentes règles. Si
   l'instruction est relativement simple pour plannifier ou réécrire mais 
   assez dépensier pour exécuter, l'avantage de performance des instructions
   préparées sera moins remarquable.
  </para>
 </refsect1>

 <refsect1>
  <title>Paramètres</title>

  <variablelist>
   <varlistentry>
    <term><replaceable class="PARAMETER">plan_name</replaceable></term>
    <listitem>
     <para>
      Un nom arbitraire donné à cette instruction préparée particulière. Il
      doit être unique dans une session et est utilisé par la suite pour
      exécuter ou désallouer cette instruction préparée.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">type_donnees</replaceable></term>
    <listitem>
     <para>
      Le type de données d'un paramètre de l'instruction préparée. Pour
      référencer les paramètres dans l'instruction préparée elle-même, utilisez
      <literal>$1</literal>, <literal>$2</literal>, etc.
     </para>
    </listitem>
   </varlistentry>

   <varlistentry>
    <term><replaceable class="PARAMETER">instruction</replaceable></term>
    <listitem>
     <para>
      Toute instruction <command>SELECT</>, <command>INSERT</>,
      <command>UPDATE</> ou <command>DELETE</>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   Dans certaines situations, le plan de requête produit par une instruction
   préparée pourrait être inférieur au plan produit si l'instruction avait été
   soumise et exécutée normalement. C'est parce que, quand l'instruction est
   plannifiée et que le plannificateur tente de déterminer le plan de requête
   optimal, les valeurs réelles de tous les paramètres spécifiés dans
   l'instruction ne sont pas disponibles.
   <productname>PostgreSQL</productname> récupère les statistiques de la
   distribution des données dans la table et peut utiliser les valeurs
   constantes dans une instruction pour devnier sur le résu ltat probable de
   l'exécution de l'instruction. Comme cette donnée n'est pas disponible lors de
   la plannification d'instructions préparées avec paramètres, le plan choisi
   pourrait ne pas être optimal. Pour examiner le plan de requête que
   <productname>PostgreSQL</productname> a choisi pour une instruction préparée,
   utilisez <command>EXPLAIN EXECUTE</command>.
  </para>

  <para>
   Pour plus d'informations sur la plannification de la requête et les
   statistiques récupérées par <productname>PostgreSQL</productname> dans ce
   but, voir la documentation de <xref linkend="sql-analyze"
   endterm="sql-analyze-title">.
  </para>
 </refsect1>

 <refsect1>
  <title>Compatibilité</title>

  <para>
   Le standard SQL inclut une instruction <command>PREPARE</command> mais il
   est seulement à utiliser en SQL embarqué. Cette version de l'instruction
   <command>PREPARE</command> utilise aussi une syntaxe quelque peu différente.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:nil
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../reference.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:"/usr/lib/sgml/catalog"
sgml-local-ecat-files:nil
End:
-->
