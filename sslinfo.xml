
<sect1 id="sslinfo">
 <title>sslinfo</title>
 
 <indexterm zone="sslinfo">
  <primary>sslinfo</primary>
 </indexterm>

 <para>
  Ce module fournit des informations sur le certificat SSL en cours
  d'utilisation pour PostgreSQL.
 </para>

 <sect2>
  <title>Notes</title>
  <para>
   Cette extension ne pourra pas être construite si le serveur PostgreSQL
   n'a pas été configuré avec --with-openssl. Les informations fournies avec
   ces fonctions seront complètement inutiles si vous n'utilisez pas SSL
   pour vous connecter à votre base de données.
  </para>
 </sect2>

 <sect2>
  <title>Description des fonctions</title>
  
  <itemizedlist>
   <listitem>
    <programlisting>
ssl_is_used() RETURNS boolean;
    </programlisting>
    <para>
     Renvoie TRUE si la connexion en cours utilise SSL. FALSE sinon.
    </para>
   </listitem>

   <listitem>
    <programlisting>
ssl_client_cert_present() RETURNS boolean
    </programlisting>
    <para>
     Renvoie TRUE si le client a présenté un certificat SSL client valide
     au serveur. FALSE sinon (c'est-à-dire pas de SSL, certificat non
     réclamé par le serveur).
    </para>
   </listitem>
  
   <listitem>
    <programlisting>
ssl_client_serial() RETURNS numeric
    </programlisting>
    <para>
     Renvoie le numéro de série du certificat client. La combinaison du
     numéro de série du client et de l'émetteur du certificat garantit
     l'identification unique du certificat (mais pas de son propriétaire
     -- le propriétaire doit régulièrement changer ses clés et obtenir de
     nouveaux certificats de l'émetteur).
    </para>
    <para>
     Donc, si vous émettez votre propre certificat et que vous n'autorisez
     que les certificats émis par ce CA, le numéro de série est l'élément
     le plus fiable (bien que pas très mnémotechnique) pour identifier
     l'utilisateur.
    </para>
   </listitem>

   <listitem>
    <programlisting>
ssl_client_dn() RETURNS text
    </programlisting>
    <para>
     Renvoie le sujet complet du certificat client en convertissant les
     données de type caractères suivant l'encodage de la base de données.
     Il est supposé que si vous utilisez des caractères non Latin dans le nom
     des certificats, votre base de données est aussi capable de représenter
     ces caractères. Si votre base de données utilise l'encodage SQL_ASCII,
     les caractères non Latin dans le nom seront représentés par des séquences
     UTF-8.
    </para>
    <para>
     Le résultat ressemble à ceci <quote>/CN=Somebody /C=Some country/O=Some organization</quote>.
    </para>
   </listitem>
 
   <listitem>
    <programlisting>
ssl_issuer_dn()
    </programlisting>
    <para>
     Renvoie de le nom complet de l'émetteur du certificat client en
     convertissant les données de type caractères suivant l'encodage de la
     base de données.
    </para>
    <para>
     La combinaison de la valeur de retour de cette fonction avec le numéro
     de série unique identifie le certificat.
    </para>
    <para>
     Le résultat de cette fonction est réellement utile si vous avez plus
     d'un certificat CA de confiance dans le fichier root.crt de votre
     serveur ou si ce CA a émis des certificats intermédiaire d'autorité.
    </para>
   </listitem>
 
   <listitem>
    <programlisting>
ssl_client_dn_field(fieldName text) RETURNS text
    </programlisting>
    <para>
     Cette fonction renvoie la valeur du champ spécifié à partir du
     sujet du certificat. Les noms de champ sont des constantes qui sont
     converties en identifiants d'objet ASN1 en utilisant la base de
     données objet d'OpenSSL. Les valeurs suivantes sont acceptées&nbsp;:
    </para>
    <programlisting>
commonName (alias CN)
surname (alias SN)
name
givenName (alias GN)
countryName (alias C) 
localityName (alias L)
stateOrProvinceName (alias ST)
organizationName (alias O)
organizationUnitName (alias OU)
title
description
initials
postalCode
streetAddress
generationQualifier
description
dnQualifier
x500UniqueIdentifier
pseudonim
role
emailAddress
    </programlisting>
    <para>
     Tous ces champs sont optionnels, sauf commonName. Lesquels sont
     inclus dépend entièrement de la politique du CA.. La signification
     de ces champs est cependant strictement définie par les standards
     X.500 et X.509, donc vous ne pouvez pas leur donner une signification
     arbitraire.
    </para>
   </listitem>
 
   <listitem>
    <programlisting>
ssl_issuer_field(fieldName text) RETURNS text;
    </programlisting>
    <para>
     Fait la même chose que ssl_client_dn_field, mais pour l'émetteur
     du certficat au lieu du sujet.
    </para>
   </listitem>
  </itemizedlist>
 </sect2>

 <sect2>
  <title>Auteur</title>
  <para>
   Victor Wagner <email>vitus@cryptocom.ru</email>, Cryptocom LTD
   E-Mail du groupe de développement Cryptocom OpenSSL&nbsp;: 
   <email>openssl@cryptocom.ru</email>
  </para>
 </sect2>
</sect1>

