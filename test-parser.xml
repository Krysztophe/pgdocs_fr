<!-- $PostgreSQL: pgsql/doc/src/sgml/test-parser.sgml,v 1.2 2007/12/06 04:12:10 tgl Exp $ -->

<sect1 id="test-parser">
 <title>test_parser</title>

 <indexterm zone="test-parser">
  <primary>test_parser</primary>
 </indexterm>

 <para>
  <filename>test_parser</filename> est un exemple d'analyseur personnalisé
  pour la recherche plein texte. Il ne fait rien de particulièrement utile
  mais peut servir comme point de départ pour développer votre propre
  analyseur.
 </para>

 <para>
  <filename>test_parser</filename> reconnaît les mots séparés par des espaces
  blancs, et renvoie simplement deux types de jeton&nbsp;:

<programlisting>
mydb=# SELECT * FROM ts_token_type('testparser');
 tokid | alias |  description
-------+-------+---------------
     3 | word  | Word
    12 | blank | Space symbols
(2 rows)
</programlisting>

  Ces nombres jeton ont été choisis pour être compatible avec la numération par
  défaut de l'analyseur. Ceci nous permet d'utiliser sa fonction
  <function>headline()</function>, conservant du coup l'exemple simple.
 </para>

 <sect2>
  <title>Usage</title>

  <para>
   Exécuter le script d'installation crée un analyseur de recherche plein
   texte nommé <literal>testparser</literal>. Il n'utilise pas de paramètres
   configurables.
  </para>

  <para>
   Vous pouvez tester l'analyseur avec, par exemple&nbsp;:

<programlisting>
mydb=# SELECT * FROM ts_parse('testparser', 'That''s my first own parser');
 tokid | token
-------+--------
     3 | That's
    12 |
     3 | my
    12 |
     3 | first
    12 |
     3 | own
    12 |
     3 | parser
</programlisting>
  </para>

  <para>
   Une utilisation réelle nécessite le paramétrage d'une configuration de
   recherche plein texte qui utilise cet analyseur. Par exemple&nbsp;:

<programlisting>
mydb=# CREATE TEXT SEARCH CONFIGURATION testcfg ( PARSER = testparser );
CREATE TEXT SEARCH CONFIGURATION

mydb=# ALTER TEXT SEARCH CONFIGURATION testcfg
mydb-#   ADD MAPPING FOR word WITH english_stem;
ALTER TEXT SEARCH CONFIGURATION

mydb=#  SELECT to_tsvector('testcfg', 'That''s my first own parser');
          to_tsvector
-------------------------------
 'that':1 'first':3 'parser':5
(1 row)

mydb=# SELECT ts_headline('testcfg', 'Supernovae stars are the brightest phenomena in galaxies',
mydb(#                    to_tsquery('testcfg', 'star'));
                           ts_headline
-----------------------------------------------------------------
 Supernovae &lt;b&gt;stars&lt;/b&gt; are the brightest phenomena in galaxies
(1 row)
</programlisting>
  </para>

 </sect2>

</sect1>
